searchState.loadedDescShard("arci", 0, "arci\nIf the position is out of the limit, handle it as the same …\nIf the position is out of the limit, handle it as the same …\nDummy Gamepad for debug or tests.\nDummy JointTrajectoryClient for debug or tests.\nDummy Localization for debug or tests.\nDummy MoveBase for debug or tests.\nDummy Navigation for debug or tests.\nDummy Speaker for debug or tests.\nDummy TransformResolver for debug or tests.\nIf the position is out of the limit, return an error.\nA 2-dimensional direct isometry using a unit complex …\nA 3-dimensional direct isometry using a unit quaternion …\nJointPositionDifferenceLimiter limits the difference of …\nJointVelocityLimiter limits the duration to make all …\nA unit quaternions. May be used to represent a rotation.\nA stack-allocated, 2-dimensional column vector.\nA stack-allocated, 3-dimensional column vector.\nWaits until the underlying future is complete.\nThe angular difference (in radians) between consecutive …\nThe angle (in radians) where the scan ends, typically …\nThe angle (in radians) where the scan starts, typically 0 …\nTo copy joint name and position between <code>from</code> and <code>to</code>\nReturns the current joint positions.\nThe data storage that contains all the matrix components. …\nThe data storage that contains all the matrix components. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWaits until the <code>stream</code> is complete.\nCreates a new <code>JointPositionLimiter</code> with the position …\nCreates a new <code>JointVelocityLimiter</code> with the velocity …\nReturns a reference to the underlying value.\n(Optional) An array of intensity values for each angle, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns names of joints that this client handles.\nWaits until the <code>future</code> is complete.\nCreates a new <code>DummyGamepad</code> which returns the given events.\nCreates a new <code>DummyLocalization</code>.\nCreates a new <code>DummyMoveBase</code>.\nCreates a new <code>DummyNavigation</code>.\nCreates a new <code>DummySpeaker</code>.\nCreates a new <code>DummyJointTrajectoryClient</code> with the given …\nCreates a new <code>DummyTransformResolver</code>.\nCreate a new <code>JointPositionDifferenceLimiter</code> with the given …\nCreates a new <code>JointPositionLimiter</code> with the given position …\nCreates a new <code>JointVelocityLimiter</code> with the given velocity …\nCreates a new <code>Lazy</code> with the given constructor.\nGenerate Partial Joint Client\nThe maximum range (in meters) of valid distance …\nThe minimum range (in meters) of valid distance …\nAn array of distance measurements (in meters) for each …\nCreates a new <code>WaitFuture</code> which immediately complete.\nThe pure rotational part of this isometry.\nThe pure rotational part of this isometry.\nThe time (in seconds) it takes for the laser to complete …\nSend the specified joint positions and returns a future …\nSend the specified joint trajectory and returns a future …\nIf no velocities is specified or zero velocities is …\nStarts speaking and returns a future that waits until …\nThe time difference (in seconds) between consecutive …\nThe pure translational part of this isometry.\nThe pure translational part of this isometry.\nCreates a new <code>DummyGamepad</code> which returns all patterns of …\nCreates a new <code>Lazy</code> with the given constructor and joint …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")