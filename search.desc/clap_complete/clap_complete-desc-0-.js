searchState.loadedDescShard("clap_complete", 0, "Quick Start\nAny existing path.\nName of a command, without arguments. May be relative to …\nA single string containing a command and its arguments.\nCapture the remaining arguments as a command name and …\nPath to a directory.\nEmail address.\nPath to an executable file.\nPath to a file.\nDeprecated, see <code>aot::Generator</code>\nHost name of a computer. Shells usually parse <code>/etc/hosts</code> …\nNone of the hints below apply. Disables shell completion …\nDeprecated, see <code>aot::Shell</code>\nDefault value if hint is not specified. Follows shell …\nComplete web address.\nName of a local operating system user.\nProvide shell with hint on how to complete an argument.\nPrebuilt completions\nReturns the argument unchanged.\nDeprecated, see <code>aot::generate</code>\nDeprecated, see <code>aot::generate_to</code>\nDeprecated, see <code>aot</code>\nCalls <code>U::from(self)</code>.\nDeprecated, see <code>aot</code>\nAny existing path.\nGenerate bash completion file\nBourne Again <code>SHell</code> (bash)\nName of a command, without arguments. May be relative to …\nA single string containing a command and its arguments.\nCapture the remaining arguments as a command name and …\nPath to a directory.\nGenerate elvish completion file\nElvish shell\nEmail address.\nPath to an executable file.\nPath to a file.\nGenerate fish completion file\nFriendly Interactive <code>SHell</code> (fish)\nGenerator trait which can be used to write generators\nHost name of a computer. Shells usually parse <code>/etc/hosts</code> …\nNone of the hints below apply. Disables shell completion …\nGenerate powershell completion file\n<code>PowerShell</code>\nShell with auto-generated completion script available.\nDefault value if hint is not specified. Follows shell …\nComplete web address.\nName of a local operating system user.\nProvide shell with hint on how to complete an argument.\nGenerate zsh completion file\nZ <code>SHell</code> (zsh)\nReturns the file name that is created when this generator …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDetermine the user’s current shell from the environment\nParse a shell from a path to the executable for the shell\nGenerate a completions file for a specified shell at …\nGenerates output out of <code>clap::Command</code>.\nGenerate a completions file for a specified shell at …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFallible version to generate output out of <code>clap::Command</code>.\nFallible version to generate output out of <code>clap::Command</code>.\nHelpers for writing generators\nGets all subcommands including child subcommands in the …\nFinds the subcommand <code>clap::Command</code> from the given …\nGets all the flags of a <code>clap::Command</code>. Includes <code>help</code> and …\nGets all the long options, their visible aliases and flags …\nGet the possible values for completion\nGets all the short options, their visible aliases and …\nGets subcommands of <code>clap::Command</code> in the form of …")