searchState.loadedDescShard("tracing_appender", 0, "Writers for logging events and spans\nA non-blocking, off-thread writer.\nConvenience function for creating a non-blocking, …\nA rolling file appender.\nThe default maximum number of buffered log lines.\nTracks the number of times a log line was dropped by the …\nA non-blocking writer.\nA builder for <code>NonBlocking</code>.\nA guard that flushes spans/events associated to a …\nSets the number of lines to buffer before dropping logs or …\nReturns the number of log lines that have been dropped.\nReturns a counter for the number of times logs where …\nCompletes the builder, returning the configured <code>NonBlocking</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets whether <code>NonBlocking</code> should be lossy or not.\nReturns a new <code>NonBlocking</code> writer wrapping the provided …\nOverride the worker thread’s name.\nA builder for configuring <code>RollingFileAppender</code>s.\nProvides a daily rotation\nProvides an hourly rotation\nErrors returned by <code>Builder::build</code>.\nProvides an minutely rotation\nProvides a rotation that never rotates.\nA file appender with the ability to rotate log files at a …\nA writer that writes to a rolling log file.\nDefines a fixed period for rolling of a log file.\nBuilds a new <code>RollingFileAppender</code> with the configured …\nReturns a new <code>Builder</code> for configuring a <code>RollingFileAppender</code>…\nCreates a daily-rotating file appender.\nSets the prefix for log filenames. The prefix is output …\nSets the suffix for log filenames. The suffix is output …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an hourly-rotating file appender.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKeeps the last <code>n</code> log files on disk.\nCreates a minutely-rotating file appender. This will …\nCreates a non-rolling file appender.\nCreates a new <code>RollingFileAppender</code>.\nReturns a new <code>Builder</code> for configuring a <code>RollingFileAppender</code>…\nSets the rotation strategy for log files.")