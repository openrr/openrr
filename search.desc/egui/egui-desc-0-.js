searchState.loadedDescShard("egui", 0, "<code>egui</code>:  an easy-to-use GUI in pure Rust!\nAll egui keys\nAn assistive technology (e.g. screen reader) requested an …\nIndicated an alias, e.g. a shortcut\nleft/center/right or top/center/bottom alignment for e.g. …\nTwo-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.\nSomething can be scrolled in any direction (panned).\nConvenience for <code>Self::Max</code>\n<code>\\</code>\nAlso known as “backquote” or “grave”\nA bottom <code>crate::TopBottomPanel</code>.\nOn Mac: ⌘ Command key, elsewhere: Ctrl key\nBackend-specific painting.\nTouch operation has been disrupted by something (various …\nHover a cell in a table\nHorizontal or vertical center.\nA <code>crate::CentralPanel</code>.\nCircle with optional outline and fill.\nStretches the edge pixels to fill beyond the texture’s …\nA <code>Mesh</code> or <code>PaintCallback</code> within a clip rectangle.\nThe user clicked the close-button on the window, or …\n<code>:</code>\nRGBA image.\nThis format is used for space-efficient color …\nA 2D RGBA color image in RAM.\n<code>,</code>\nIME composition ended with this final result.\nYour handle to egui.\nA context menu is available\nThe integration detected a “copy” event (e.g. Cmd+C).\nIndicate that a copy will be made\nRequest an elevated amount of animations and flair for the …\nFor precision work\nA cubic Bézier Curve.\nA mouse cursor icon.\nThe integration detected a “cut” event (e.g. Cmd+X).\n+Y\nDark mode: light text on a dark background.\nDark mode: light text on a dark background.\nNormal cursor icon, whatever that is.\nLayout direction, one of <code>LeftToRight</code>, <code>RightToLeft</code>, <code>TopDown</code>…\nNotifies when the IME was disabled.\nTracking of drag-and-drop payload.\nA file dropped into egui.\nInfinite range that contains everything, from -∞ to …\nInfinite rectangle that contains every point.\nEllipse with optional outline and fill.\nNotifies when the IME was enabled.\nUser lifted the finger or pen from the surface, or slid …\n<code>=</code>\nAn input event generated by the integration.\nControls which events that a focused widget will have …\nThe text should expand the <code>Ui</code> size when reaching its …\nThe first extra mouse button on some mice. In web …\nThe second extra mouse button on some mice. In web …\nUsed for the font texture.\nA <code>.ttf</code> or <code>.otf</code> file and a font face index.\nDescribes the font data and the sizes to use.\nFont of unknown size.\nHow to select a sized font.\nA single-channel image designed for the font texture.\nExtra scale and vertical tweak to apply to all text of a …\nA <code>crate::Frame</code>.\nWhat egui emits each frame from <code>crate::Context::run</code>.\nText that has been laid out, ready for painting.\nAn <code>crate::Area</code> that is not of any other kind.\nThe thing you are hovering can be grabbed\nYou are grabbing the thing you are hovering\nA simple grid layout.\nQuestion mark\nA file about to be dropped into egui.\negui tracks widgets frame-to-frame using <code>Id</code>s.\n<code>IdMap&lt;V&gt;</code> is a <code>HashMap&lt;Id, V&gt;</code> optimized by knowing that <code>Id</code> …\nAn image stored in RAM.\nIME Event\nIME event.\nRequest a standard amount of attention-grabbing actions.\nReturned when we wrap some ui-code and want to return both …\nInput state that egui updates each frame.\nKeyboard keys.\nA key was pressed or released.\nA keyboard shortcut, e.g. <code>Ctrl+Alt+W</code>.\nConvenience for <code>Self::Min</code>\n-X\nLinear magnification and minification.\nLinear magnification and minification, but with the …\nLinear magnification and minification, but with the …\nThe layout of a <code>Ui</code>, e.g. “vertical &amp; centered”.\nA left <code>crate::SidePanel</code>.\nLight mode: dark text on a light background.\nLight mode: dark text on a light background.\nNumber of lines\nA line between two points.\nLinearly interpolate the nearest neighbors, creating a …\ne.g. a hyperlink\nThe Mac ⌘ Command key\nTextures allocated using <code>TextureManager</code>.\nA value for all four sides of a rectangle, often used to …\nRight or bottom.\nThe data that egui persists between frames.\nThe content of a regular menu.\nTextured triangles in two dimensions.\nA general triangle mesh.\nThe tertiary mouse button is usually the middle mouse …\nLeft or top.\n<code>-</code>\nMirrors the texture with each repetition, creating …\nA modal <code>crate::Modal</code>.\nNames of different modifier keys.\nState of the modifier keys. These must be fed to egui.\nA font where each character is the same width (<code>w</code> is the …\nThe mouse moved, the units are unspecified. Represents the …\nA raw mouse wheel event as sent by the backend.\nThe unit associated with the numeric value of a mouse …\nUser moves a touch point along the surface. This event is …\nOmnidirectional move icon (e.g. arrows in all cardinal …\nAll you probably need to know about a multi-touch gesture.\nAlt, Ctrl, Shift, Cmd\nAn invalid <code>Rangef</code> filled with <code>f32::NAN</code>.\nAn invalid <code>Rect</code> filled with <code>f32::NAN</code>.\nNearest magnification and minification.\nNearest magnification and minification, but with the …\nNearest magnification and minification, but with the …\nNo shadow at all.\nSame as <code>Stroke::default</code>.\nThe inverse of <code>Self::EVERYTHING</code>: stretches from positive …\nThe inverse of <code>Self::EVERYTHING</code>: stretches from positive …\nA special <code>Id</code>, in particular as a key to <code>crate::Memory::data</code>\nNumber of pointer buttons supported by egui, i.e. the …\nOne of the names in <code>FontDefinitions::families</code>.\nShow the nearest pixel value.\nCan’t drop here\nShow no cursor\nPaint nothing. This can be useful as a placeholder.\nForbidden\n<code>0</code> (from main row or numpad)\n<code>1</code> (from main row or numpad)\n<code>2</code> (from main row or numpad)\n<code>3</code> (from main row or numpad)\n<code>4</code> (from main row or numpad)\n<code>5</code> (from main row or numpad)\n<code>6</code> (from main row or numpad)\n<code>7</code> (from main row or numpad)\n<code>8</code> (from main row or numpad)\n<code>9</code> (from main row or numpad)\nExtends <code>f32</code>, <code>Vec2</code> etc with <code>at_least</code> and <code>at_most</code> as aliases …\nWhat URL to open, and how.\nSome global options that you can read and write.\nIf you cannot fit any of the above slots.\nAn ugly color that is planned to be replaced before making …\nNumber of pages\nIf you want to paint some 3D shapes inside an egui region, …\nInformation passed along with <code>PaintCallback</code> (…\nHelper to paint shapes and text to a specific region on a …\nThe integration detected a “paste” event (e.g. Cmd+V).\nA series of lines between points. The path can have a …\n<code>.</code>\nA picker, such as color picker.\n<code>|</code>, a vertical bar\nThe non-rendering part of what egui emits each frame.\n<code>+</code>\nNumber of ui points (logical pixels)\nMouse button (or similar for touch input)\nA mouse button was pressed or released (or a touch started …\nThe mouse left the screen, or the last/primary touch input …\nThe mouse or touch moved to a new place.\nMouse or touch state.\nPointing hand, used for e.g. web links\nThe content of a popup menu.\nA position on screen.\nA new IME candidate is being suggested.\nThe primary mouse button is usually the left one.\nShows that processing is being done, but that the program …\nA font where some characters are wider than other (e.g. ‘…\nA quadratic Bézier Curve.\n<code>?</code>\n<code>&#39;</code>\nConvenience for <code>Self::Max</code>\n+X\nA group of radio buttons.\nInclusive range of floats, i.e. <code>min..=max</code>, but more …\nWhat the integrations provides to egui at the start of …\nA rectangular region of space.\nRectangle with optional outline and fill.\nWhat called <code>Context::request_repaint</code> or …\nTiles the texture across the surface, repeating it …\nInformation given to the backend about when it is time to …\nReset the attention request and interrupt related …\nA <code>crate::Resize</code>.\nResize a column\nResize something rightwards (e.g. when dragging the …\nHorizontal resize <code>-</code> to make something wider or more narrow …\nDiagonal resize <code>/</code> (right-up to/from left-down)\nResize something up (e.g. when dragging the top edge of …\nResize something up and right (e.g. when dragging the …\nResize something up and left (e.g. when dragging the …\nDiagonal resize <code>\\</code> (left-up to/from right-down)\nResize a row\nResize something downwards (e.g. when dragging the bottom …\nResize something down and right (e.g. when dragging the …\nResize something down and left (e.g. when dragging the …\nVertical resize <code>|</code> (up-down or down-up)\nResize something leftwards (e.g. when dragging the left …\nThe result of adding a widget to a <code>Ui</code>.\n0-1 linear space <code>RGBA</code> color with premultiplied alpha.\nA right <code>crate::SidePanel</code>.\nHow rounded the corners of things should be\n⌥ ⌃ ⇧ ⌘ - NOTE: not supported by the default egui …\nThe reply of a screenshot requested with …\nA <code>crate::ScrollArea</code>.\nThe secondary mouse button is usually the right one, and …\n<code>;</code>\nWhat sort of interaction is a widget sensitive to?\nThe color and fuzziness of a fuzzy shape.\nA paint primitive such as a circle or a piece of text. …\n<code>/</code>\nUser just placed a touch point on the touch surface\nDescribes the width and color of a line.\nFollow the system’s theme preference.\nConvenience for <code>Self::Min</code>\nA table cell (from the <code>egui_extras</code> crate).\nText.\nText input, e.g. via keyboard.\nText caret, e.g. “Click here to edit text”\nFormatting option for a section of text.\nHow to wrap and elide text.\nHow the texture texels are filtered.\nUsed to paint images.\nWhat texture to use in a <code>Mesh</code> mesh.\nHow the texture texels are filtered.\nDefines how textures are wrapped around objects when …\nWhat has been allocated and freed during the last period.\nDark or Light theme.\nThe user’s theme preference.\nA tooltip, as shown by e.g. <code>crate::Response::on_hover_ui</code>.\nA top <code>crate::TopBottomPanel</code>.\nOn touch screens, report this <em>in addition to</em> …\nthis is a <code>u64</code> as values of this kind can always be …\nUnique identification of a touch occurrence (finger or pen …\nIn what phase a touch event is in.\nThe text should be elided using “…” when reaching …\n-Y\nThis is what you use to place widgets.\nBuild a <code>Ui</code> as the child of another <code>Ui</code>.\nWhat kind is this <code>crate::Ui</code>?\nInformation about a <code>crate::Ui</code> and its parents.\nInformation about a <code>crate::Ui</code> to be included in the …\nIterator that walks up a stack of <code>StackFrame</code>s.\nUser-chosen tags.\nYour own texture, defined in any which way you want. The …\nTypes of attention to request from a user when a native …\nA wrapper around <code>dyn Any</code>, used for passing custom user data\nRecursively nest more shapes - sometimes a convenience to …\nA vector has a direction and length. A <code>Vec2</code> is often used …\nTwo bools, one for each axis (X and Y).\nVertical text caret, e.g. “Click here to edit vertical …\nAn input event from the backend into egui, about a …\nInformation about the current viewport, given as input …\nNot yet ready, try later.\nDescribes a widget such as a <code>crate::Button</code> or a …\nUsed to store each widget’s Id, Rect and Sense each …\nStores the <code>WidgetRect</code>s of all widgets generated during a …\nThe different types of built-in widgets in egui\nA <code>crate::Window</code>.\nThe native window gained or lost focused (e.g. the user …\nThe text should wrap to the next line when reaching the <code>Ui</code> …\nRight\nDown\nThe zero position, the origin. The top left corner in a …\nA <code>Rect</code> filled with zeroes.\nNo rounding on any corner.\nZoom scale factor this frame (e.g. from a pinch gesture).\nEnhance!\nLet’s get a better overview\nFor use in tests; especially doctests.\nFor use in tests; especially doctests.\nIf AccessKit support is active for the current frame, get …\nThe difference in the widget tree since last frame.\nAdd a <code>Widget</code> to this <code>Ui</code> at a location dependent on the …\nIt is up to the caller to make sure there is room for this.\nAdd a new bytes loader.\nUniformly colored rectangle.\nAdd a single <code>Widget</code> that is possibly disabled, i.e. greyed …\nAdd a section that is possibly disabled, i.e. greyed out …\nTell <code>egui</code> which fonts to use.\nAdd a new image loader.\nRectangle with a texture and color.\nAdd a <code>Widget</code> to this <code>Ui</code> with a given size. The widget will …\nAdd extra space before the next widget.\nAdd a new texture loader.\nAdd a triangle.\nAdd a single <code>Widget</code> that is possibly invisible.\nAdd a section that is possibly invisible, i.e. greyed out …\nReturns an additive version of self\nReturn an additive version of this color (alpha = 0)\nAllocate a rect without interacting with it.\nHow imprecise do we expect the mouse/touch input to be? …\nReturns a range of given size within a specified range.\ne.g. center a size within a given frame\nAre both <code>x</code> and <code>y</code> true?\nMutate the <code>Style</code>s used by all subsequent windows, panels …\nAllocate at least as much space as needed, and interact …\nReturns a <code>Rect</code> with exactly what you asked for.\nAllocated space (<code>UiBuilder::max_rect</code>) and then add content …\nConvenience function to get a region to paint on.\nAllocate a specific part of the <code>Ui</code>.\nAllocate space for a widget and check for interaction in …\nReserve this much space and move the cursor. Returns where …\nAllocated the given space and then adds content to that …\nAllocated the given rectangle and then adds content to …\nAllocated the given space and then adds content to that …\nDoes this layer allow interaction? Returns true if\nEither of the alt keys are down (option ⌥ on Mac).\nUsed e.g. to anchor a piece of text to a part of the …\nUse this anchor to position something around <code>pos</code>, e.g. …\nMeasures the angle of the vector.\nCreate a unit vector with the given CW angle (in radians).\nReturns a value in the range [0, 1], to indicate “how on…\nLike <code>Self::animate_bool</code>, but uses an easing function that …\nLike <code>Self::animate_bool</code> but allows you to control the …\nLike <code>Self::animate_bool</code> but allows you to control the …\nLike <code>Self::animate_bool</code> but allows you to control the …\nSmoothly animate an <code>f32</code> value.\nWere there any type of click this frame?\nIs any pointer button currently down?\nTrue if any member is NaN.\nTrue if any member is NaN.\nTrue if any member is NaN.\nIs any popup open?\nWas any pointer button pressed (<code>!down -&gt; down</code>) this frame?\nWas any pointer button released (<code>down -&gt; !down</code>) this frame?\nTrue if there currently are any fingers touching egui.\nAppend all the indices and vertices of <code>other</code> to <code>self</code>.\nAdd on new input.\nAdd on new output.\nAdd on new output.\nAppend all the indices and vertices of <code>other</code> to <code>self</code> …\nObtain the previous rectangle of an area.\nAccess memory of the <code>Area</code>s, such as <code>Window</code>s.\nAccess memory of the <code>Area</code>s, such as <code>Window</code>s.\nShow an arrow starting at <code>origin</code> and going in the …\nFlip <code>min</code> and <code>max</code> if needed, so that <code>min &lt;= max</code> after.\nA view of the underlying data as <code>&amp;[u8]</code>\nA view of the underlying data as <code>&amp;mut [u8]</code>\nThe argument is the rectangle of the shadow caster.\nWidth / height\nwidth / height\nMore readable version of <code>self.max(lower_limit)</code>\nMake sure each corner has a rounding of at least this.\nMore readable version of <code>self.min(upper_limit)</code>\nMake sure each corner has a rounding of at most this.\nSame as <code>ui.next_auto_id().with(id_salt)</code>\nThe available height at the moment, given the current …\nHow much space is still available after panels has been …\nIn case of a wrapping layout, how much space is left on …\nThe available space at the moment, given the current …\nIn case of a wrapping layout, how much space is left on …\nThe available width at the moment, given the current …\nWhen using this font’s metrics to layout a row, shift …\nCursor to the first character.\nSee <code>Self::begin_pass</code>.\nAn alternative to calling <code>Self::run</code>.\nThe width of the blur, i.e. the width of the fuzzy …\n<code>max.y</code>\n<code>max.y</code>\nPlace elements vertically, bottom up.\nList of all the builtin font names used by <code>epaint</code>.\nUsage: <code>if ui.button(&quot;Click me&quot;).clicked() { … }</code>\nWas the given pointer button given clicked this frame?\nWas the button given double clicked this frame?\nIs this button currently down?\nWas the button given pressed this frame?\nWas the button given released this frame?\nWas the button given triple clicked this frame?\n<code>width x height x bytes_per_pixel</code>\nSet by the <code>eframe</code> web backend.\nReturns the amount of memory used by the vertices and …\nCaches for preventing the same value from being recomputed …\nCan be used to cache computations from one frame to …\nCalculate a bounding rectangle.\nPaint something custom (e.g. 3D stuff).\nThe center of the range\nCenter position of the current gesture (average of all …\nThis will make the next added widget centered and …\nFor when you want to add a single widget to a layout, and …\nWas the underlying data changed?\nIf the given <code>Id</code> has been used previously the same pass at …\nShow a checkbox.\nCreate a new <code>Ui</code> at a specific region.\nCreate a new <code>Ui</code> at a specific region with a specific id.\nEquivalent to <code>x.clamp(min, max)</code>\nReturn the given points clamped to be inside the rectangle …\nRestore to default state, but without freeing memory.\nClear the contents while retaining allocated memory.\nClear memory of any animations.\nClears the payload, setting it to <code>None</code>.\nSense clicks and hover, but not drags.\nButtons, sliders, windows, …\nSense both clicks, drags and hover (e.g. a slider or …\nReturns true if this widget was clicked this frame by the …\nReturns true if this widget was clicked this frame by the …\n<code>true</code> if there was a click <em>outside</em> the rect of this widget.\nScreen-space rectangle for clipping what we paint in this …\nEverything painted in this <code>Painter</code> will be clipped against …\nClip rectangle in points.\nClip / scissor rectangle. Only show the part of the <code>Mesh</code> …\nThe “scissor” or “clip” rectangle. This is what …\nClose the menu we are in (including submenus), if any.\nClose the open popup, if any.\nThis viewport has been told to close.\nA line that closes back to the start point again.\nChecks only cmd/ctrl, not alt/shift.\nShow text as monospace with a gray background.\nA <code>TextEdit</code> for code editing.\nA <code>CollapsingHeader</code> that starts out collapsed.\nColor of the opaque center of the shadow.\nText color\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShow colored text.\nAdd a colored vertex.\nTemporarily split a <code>Ui</code> into several columns.\nTemporarily split a <code>Ui</code> into several columns.\nOn Windows and Linux, set this to the same value as <code>ctrl</code>. …\ntrue if only <code>Self::ctrl</code> or only <code>Self::mac_cmd</code> is pressed.\nWhat goes between the names\nCheck for a key press. If found, <code>true</code> is returned and the …\nCheck if the given shortcut has been pressed.\nCheck if this node is or is contained in a <code>crate::Ui</code> of a …\nContainers are pieces of the UI which wraps other pieces …\nWhether another set of modifiers is contained in this set …\nReturns true if the pointer is contained by the response …\nResponse to secondary clicks (right-clicks) by showing the …\nReturns whether a context menu is currently open for this …\nA convex polygon with a fill and optional stroke.\nIf set, put this text in the system clipboard. Ignore if …\nCopy the given text to the system clipboard.\nIf the pointer button is down, will it register as a click …\nCount presses of a key. If non-zero, the presses are …\nHow to align things on the cross axis. For vertical …\nJustify the cross axis? For vertical layouts justify mean …\nEither of the control keys are down. When checking for …\nGet a reference to the parent <code>Context</code>.\nGet a reference to the parent <code>Context</code>.\nUsed for optionally showing a tooltip and checking for …\nThe total number of completed passes (usually there is one …\nThe total number of completed passes (usually there is one …\nThe number of fully completed passes, of the entire …\nThe contents of some editable text (for <code>TextEdit</code> fields).\nWhere the next widget will be put.\nCursor at the given position within the galley.\nSet the cursor to this icon.\nThe default style for new <code>Ui</code>:s in dark mode.\nTurn a line into dashes.\nTurn a line into dashes. If you need to create many dashed …\nTurn a line into dashes with different dash/gap lengths …\nTurn a line into dashes with different dash/gap lengths …\nRead-only access to the shared <code>IdTypeMap</code>, which stores …\nRead-only access to <code>IdTypeMap</code>, which stores superficial …\nA user value given to the screenshot command, that will be …\nThis map stores some superficial state for all widgets …\nRead-write access to the shared <code>IdTypeMap</code>, which stores …\nRead-write access to <code>IdTypeMap</code>, which stores superficial …\nWhether or not to debug widget layout on hover.\nShows where the next widget is going to be placed\nPaint on top of everything else\nThis is an example of how to create a plugin for egui.\nPrint this text next to the cursor at the end of the pass.\nText with a background.\nSpecifies the default fonts if the feature <code>default_fonts</code> …\nThe default is linear for both magnification and …\nThe epaint font texture.\nDefault style for this theme.\nDefault visuals for this theme.\nRepaint after this duration. If zero, repaint as soon as …\nHow much the pointer moved compared to last frame, in …\nThis can be used by a text-to-speech system to describe …\nCurrent direction of the pointer.\nCalling <code>disable()</code> will cause the <code>Ui</code> to deny all future …\nDisable generation of AccessKit tree updates in all future …\nMake the new <code>Ui</code> disabled, i.e. grayed-out and …\nThe distance from the rect to the position, squared.\nThe distance from the rect to the position.\nCreate something that can be drag-and-dropped.\nSurround the given ui with a frame which changes colors …\nDrag-and-Drop: Return what is being held over this widget, …\nDrag-and-Drop: Return what is being dropped onto this …\nIf the user started dragging this widget this frame, store …\nThe dot-product of two vectors.\nTurn a line into equally spaced dots.\nReturns true if this widget was double-clicked this frame …\nReturns true if this widget was double-clicked this frame …\nSense drags and hover, but not clicks.\nSliders, windows, scroll bars, scroll areas, …\nModify an angle. The given angle should be in radians, but …\nModify an angle. The given angle should be in radians, but …\nIf dragged, how many points were we dragged and in what …\nIf dragged, how far did the mouse move? This will use raw …\nThe widget was being dragged, but now it has been released.\nThe widget was being dragged by the button, but now it has …\nDid a drag on this widgets begin this frame?\nDid a drag on this widgets by the button begin this frame?\nThis widget just started being dragged this pass.\nThe widget was being dragged, but now it has been released.\nThe widget was being dragged by the button, but now it has …\nThis widget was being dragged, but was released this pass\nThe widget is being dragged.\nSee <code>Self::dragged</code>.\nThe widget currently being dragged, if any.\nGet the id of the widget being dragged, if any.\nIs something else being dragged?\nIs something else being dragged?\nDragged files dropped into egui.\nSet to true the text was truncated due to …\nIf <code>true</code>, <code>Self::show_viewport_deferred</code> and …\nNo fonts.\nEnable generation of AccessKit tree updates in all future …\nWas the widget enabled? If false, there was no interaction …\nWhether the widget is enabled.\nIs the widget enabled?\nCursor to one-past last character.\nCall at the end of each frame if you called …\nCall at the end of each frame if you called …\nMove to the next row in a grid layout or wrapping layout. …\nIf <code>true</code>, pressing escape will act on the widget, and NOT …\nIn-order events received this frame.\nEvents that may be useful to e.g. a screen reader.\nIn-order events received this frame\nThis can be used by a text-to-speech system to describe …\nA <code>Rect</code> that contains every point above a certain y …\nA <code>Rect</code> that contains every point below a certain y …\nIf true, all windows, menus, tooltips, etc., will be …\nA <code>Rect</code> that contains every point to the left of the given …\nA <code>Rect</code> that contains every point to the right of the given …\nAn example color image, useful for tests.\nExpand by this much on each side, keeping the center\nExpand by this much in each direction, keeping the center\nExpand by this much in each direction, keeping the center\nExpand the <code>min_rect</code> and <code>max_rect</code> of this ui to include a …\nEnsure we are big enough to contain the given x-coordinate.\nEnsure we are big enough to contain the given y-coordinate.\nAdd many shapes at once.\nExpand to include the given x coordinate\nExpand to include the given y coordinate\nExtra spacing between letters, in points.\nWhich theme to use in case <code>Self::theme_preference</code> is …\nWhich fonts (names) to use for each <code>FontFamily</code>.\nWhat font family to use.\nWhat file had the call that requested the repaint?\nGet all events that matches the given filter.\nFlip the min and the max\nThis widget wants focus.\nSenses no clicks or drags, but can be focused with the …\nWhich widget has keyboard focus?\nThe native window has the keyboard focus (i.e. is …\nIs the window focused and able to receive input?\nThe native window has the keyboard focus (i.e. is …\nThe content of a <code>.ttf</code> or <code>.otf</code> file.\nList of font names and their definitions.\nRead-only access to <code>Fonts</code>.\nRead-only access to <code>Fonts</code>.\nRead-only access to the shared <code>Fonts</code>.\nAccess all shapes added this frame.\nCurrent force of the touch (average of the forces of the …\nRelease all memory and textures related to images used in …\nRelease all memory and textures related to the given image …\nFormat the given shortcut in a human-readable way (e.g. …\nTextures to free after painting.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTransparent black\nChooses between <code>Self::Dark</code> or <code>Self::Light</code> based on a …\nCreate a <code>ColorImage</code> from flat opaque gray data.\nAlternative method to <code>from_gray</code>. Create a <code>ColorImage</code> from …\nParses a color from a hex string.\nleft-top corner plus a size (stretching right-down).\nConverts <code>&quot;A&quot;</code> to <code>Key::A</code>, <code>Space</code> to <code>Key::Space</code>, etc.\nBounding-box around the points.\nA zero-sized rect at a specific point.\nCreate a <code>ColorImage</code> from flat RGB data.\nFrom <code>sRGBA</code> with premultiplied alpha.\nFrom <code>sRGBA</code> WITHOUT premultiplied alpha.\nCreate a <code>ColorImage</code> from flat un-multiplied RGBA data.\nReturns the bounding rectangle of the two points.\nTransparent white\nAre we in fullscreen mode?\nTrue if this widget has keyboard focus this frame, but didn…\nAny uncolored parts of the <code>Galley</code> (using …\nPaint text that has already been laid out in a <code>Galley</code>.\nAll text color in the <code>Galley</code> will be replaced with the …\nPaint text that has already been laid out in a <code>Galley</code>.\nMultiply with 0.5 to make color half as opaque, …\nUsed to get a unique ID when implementing one of the …\nGet the value of a tag.\nGet the value of a tag.\nAll widgets in this layer, sorted back-to-front.\nCreate a <code>Hyperlink</code> to the current <code>file!()</code> on github.\nCreate a <code>Hyperlink</code> to the current <code>file!()</code> (and line) on …\nRead-only access to <code>GraphicLayers</code>, where painted …\nRead-write access to <code>GraphicLayers</code>, where painted …\nPut into a <code>Frame::group</code>, visually grouping the contents …\nHelpers for zooming the whole GUI of an app (changing …\nCheck if the layer had focus last frame. returns <code>true</code> if …\nAre we carrying a payload?\nDoes this widget have keyboard focus?\nThis widget has the keyboard focus (i.e. is receiving key …\nAre we carrying a payload of the given type?\nDo we have a pointer?\nHas a repaint been requested for the current viewport?\nHas a repaint been requested for the given viewport?\nTrue if we have ever received a touch event.\nThis this <code>crate::Ui</code> a <code>crate::Frame</code> with a visible stroke?\nShow large text.\nHighlight this widget, to make it look like it is hovered, …\nHighlight this widget, to make it look like it is hovered, …\nA horizontal line.\nPaints a horizontal line.\nStart a ui with horizontal layout. After you have called …\ne.g. for when aligning text within a button.\nIf <code>true</code>, pressing horizontal arrows will act on the …\nLike <code>Self::horizontal</code>, but allocates the full vertical …\ne.g. for adjusting the placement of something.\nLike <code>Self::horizontal</code>, but aligns content with top.\nStart a ui with horizontal layout that wraps to a new row …\nSenses no clicks or drags. Only senses mouse hover.\nIf it is a good idea to show a tooltip, where is pointer?\nIf it is a good idea to show a tooltip, where is pointer?\nThe pointer is hovering above this widget or the widget …\nDragged files hovering over egui.\nLink to a web page.\nShortcut for <code>add(Hyperlink::from_label_and_url(label, url))</code>…\nGenerated based on id of parent ui together with an …\nThe <code>Id</code> of the widget/area this response pertains.\nThe globally unique widget id.\nSeed the child <code>Ui</code> with this <code>id_salt</code>, which will be mixed …\nAn image at the given position.\nShow an image available at the given <code>uri</code>.\nAn image at the given position.\nThis is set if, and only if, the user is currently editing …\nAssociate some static bytes with a <code>uri</code>.\nInclude an image in the binary.\nCreate a child ui which is indented to the right.\nWhich font face in the file to use. When in doubt, use <code>0</code>.\nDraw as triangles (i.e. the length is always multiple of …\nWhat the user closure returned.\nThe inner rectangle of the native window, in monitor space …\nRead-only access to the shared <code>InputState</code>.\nRead-only access to <code>InputState</code>.\nThis will create a <code>InputState::default()</code> if there is no …\nRead-write access to the shared <code>InputState</code>.\nRead-write access to <code>InputState</code>.\nThis will create a <code>InputState::default()</code> if there is no …\nOptions related to input state handling.\nInsert the given widget rect in the given layer.\nShow the state of egui, including its input and output.\nHow perceptually intense (bright) is the color?\nCheck for clicks, drags and/or hover on a specific region …\nSense more interactions (e.g. sense clicks on a <code>Response</code> …\nInteract with the background of this <code>Ui</code>, i.e. behind all …\nWhere the pointer (mouse/touch) were when when this widget …\nIf you detect a click or drag and wants to know where it …\nThe rectangle sensing interaction.\nWhere the widget is, in local layer coordinates.\nDeprecated: use <code>Self::interact</code> instead.\nRead you what widgets are currently being interacted with.\nReturns true if we sense either clicks or drags.\nRegister this widget as being interested in getting …\nThe intersection of two <code>Rect</code>, i.e. the area covered by …\nThe overlap of two ranges, i.e. the range that is …\nDo the two ranges intersect?\nDoes this Rect intersect the given ray (where <code>d</code> is …\nWhere does a ray from the center intersect the rectangle?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe intrinsic / desired size of the widget.\nShowing UI:s for egui/epaint types.\nMake the contents invisible.\nReturns true if\nIs the alpha=0 ?\nIs the alpha=0 ?\nIs any widget being dragged?\nIs this any kind of <code>crate::Area</code>?\nIs this <code>crate::Ui</code> an <code>crate::Area</code>?\nIs this specific widget being dragged?\nIs this specific widget being dragged?\nIs an egui context menu open?\nJust because the mouse is down doesn’t mean we are …\nTrue if width is zero or color is transparent\nIf <code>false</code>, the <code>Ui</code> does not allow any interaction and the …\nTrue if all members are also finite.\nTrue if all members are also finite.\nTrue if all members are also finite.\nReturns <code>true</code> if the chain of bytes, image, or texture …\nIs the pointer currently moving? This is smoothed so a few …\n<code>width &lt; 0 || height &lt; 0</code>\nChecks if <code>self</code> has length <code>1.0</code> up to a precision of <code>1e-6</code>.\nIs this any kind of panel?\nIs this <code>crate::Ui</code> a panel?\nIs the pointer button currently down on this widget?\nIs the pointer (mouse/touch) over any egui area?\nIs the given popup open?\n<code>width &gt; 0 &amp;&amp; height &gt; 0</code>\nCan be used for culling: if <code>false</code>, then no part of <code>rect</code> …\nIs this a root <code>crate::Ui</code>, i.e. created with …\nAre the margin on every side the same?\nDo all corners have the same rounding?\nSet to true in special cases where we do one frame where …\nIs the pointer currently still? This is smoothed so a few …\nWas the tooltip open last frame?\nIs egui currently using the pointer position (e.g. …\nAre all indices within the bounds of the contained …\nIf <code>false</code>, any widgets added to the <code>Ui</code> will be invisible …\nReturn an iterator that walks the stack from this node to …\nThe job that this galley is the result of. Contains the …\nIs the given key currently held down?\nWas the given key pressed this frame?\nWas the given key released this frame?\nShow some text.\nThe text on labels, buttons, checkboxes etc.\nAssociate a label with a control for accessibility.\nSet by the <code>eframe</code> web backend.\nLatest reported pointer position. When tapping a touch …\nUse this to paint stuff within this <code>Ui</code>.\nWhere we paint\nShow the <code>Ui</code> in a different <code>LayerId</code> from its parent.\nWhich layer the widget is part of.\nWhat layer the widget is on.\nTop-most layer at the given position.\nTop-most layer at the given position.\nAn iterator over all layers. Back-to-front, top is last.\nAll known layers with widgets.\nGet a full-screen painter for a new or existing layer\nReturn how to transform the graphics of the global …\nReturn how to transform the graphics of the given layer …\nThe currently set transform of a layer.\nHandles paint layers, i.e. how things are sometimes …\nRead the <code>Layout</code>.\nWill wrap text at the given width and line break at <code>\\n</code>.\nOverride the layout.\nLay out this text layut job in a galley.\nWill line break at <code>\\n</code>.\n<code>min.x</code>\n<code>min.x</code>\nPlace elements horizontally, left to right.\nLinear interpolation.\nLinearly interpolate towards another point, so that …\nLinearly interpolate so that <code>[0, 0]</code> is <code>Self::min</code> and <code>[1, 1]</code>…\nLerp this color towards <code>other</code> by <code>t</code> in gamma space.\nLinearly self towards other rect.\nThe default style for new <code>Ui</code>:s in light mode.\nA line through many points.\nPaints a line connecting the points. NOTE: all coordinates …\nWhat line number of the call that requested the repaint?\nExplicit line height of the text in points.\nMultiplier for the scroll speed when reported in …\nA line between two points. More efficient than calling …\nPaints a line from the first point to the second.\nMultiply with 0.5 to make color half as opaque in linear …\nLooks like a hyperlink.\nImage loading\nAllocate a texture.\nThe loaders of bytes, images, and textures.\nWas this long-pressed on a touch screen?\nThe widget had keyboard focus and lost it, either because …\nThe Mac ⌘ Command key. Should always be set to <code>false</code> on …\nHow to filter when magnifying (when texels are larger than …\nHow to align things on the main axis.\nMain axis direction\nJustify the main axis?\nIf true, wrap around when reading the end of the main …\nUse this to generate widget ids for widgets that have …\nHow much larger than the parent rect are we in each …\nReport the data shown by this widget changed.\nCheck for equality but with proper handling of …\nChecks that the <code>ctrl/cmd</code> matches, and that the <code>shift/alt</code> …\nThe other corner, opposing <code>Self::min</code>. Usually the right …\nSet soft maximum width (wrapping width) of each column.\nReturns the maximum of <code>self.x</code> and <code>self.y</code>.\nMaximum number of passes to run in one frame.\nNew widgets will <em>try</em> to fit within this rectangle.\nSet the max rectangle, within which widgets will go.\nMaximum size of one side of the font texture.\nMaximum size of one side of a texture.\nAre we maximized?\nRead-only access to the shared <code>Memory</code>.\nRead-only access to <code>Memory</code>.\nRead-write access to the shared <code>Memory</code>.\nRead-write access to <code>Memory</code>.\nShows the contents of <code>Self::memory</code>.\nMenu bar functionality (very basic so far).\nCreate a menu button that when clicked will show the given …\nCreate a menu button with an image that when clicked will …\nCreate a menu button with an image and a text that when …\nTight bounding box around all the meshes in all the rows. …\nReturns true if this widget was clicked this frame by the …\nIs the middle button currently down?\nWith the <code>eframe</code> web backend, this is set to the mime-type …\nWith the <code>eframe</code> web backend, this is set to the mime-type …\nOne of the corners of the rectangle, usually the left top …\nSet minimum width of each column. Default: …\nReturns the minimum of <code>self.x</code> and <code>self.y</code>.\nWhere and how large the <code>Ui</code> is already. All widgets that …\nSet minimum height of each row. Default: …\nSize of content; same as <code>min_rect().size()</code>\nHow to filter when minifying (when texels are smaller than …\nAre we minimized?\nHow to filter between texture mipmaps.\nWhich modifier keys are down at the start of the frame?\nWhich modifier keys are down at the start of the frame?\nCurrent monitor size in egui points.\nShow monospace (fixed width) text.\nHow much the mouse moved since the last frame, in …\nMoves the given area to the top in its <code>Order</code>.\nFast gamma-space multiplication.\nCalls <code>InputState::multi_touch</code>.\nReturns details about the currently ongoing multi-touch …\nMultiply with e.g. 0.5 to make us half transparent\nLike <code>Self::set_opacity</code>, but multiplies the given value …\nLike <code>Self::set_opacity</code>, but multiplies the given value …\nIs there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…\nHelper module that adds extra checks when the …\nDebug-name.\nHuman-readable English name.\nName of the file. Set by the <code>eframe</code> web backend.\nThe number of physical pixels for each logical point on …\nThe OS native pixels-per-point.\nRadius of the rounding of the North-East (right top) …\nIf you are using egui, use <code>egui::Context::load_texture</code> …\nCreate an image filled with the given color.\nCreate a new <code>Grid</code> with a locally unique identifier.\nCreate a new top-level <code>Ui</code>.\nCapture the file and line number of the call site.\nYou can also use <code>Self::default</code>.\nGenerate a new <code>Id</code> by hashing some source (e.g. a string or …\nCreate a painter to a specific layer within a certain clip …\nCreate a new <code>UiStackInfo</code> with the given kind and an empty …\nCreate a child <code>Ui</code> with the properties of the given builder.\nCapture the file and line number of the call site, as well …\nIf <code>true</code>, open the url in a new tab. If <code>false</code> open it in …\nThis is the <code>Id</code> that will be assigned to the next widget …\nWhere do we expect a zero-sized widget to be placed?\nSafe normalize: returns zero if input is zero.\nSetting this will allow the last column to expand to take …\nHow many ui passes is this the sum of?\nTotal number of indices in all the row meshes.\nHow many times was the given key pressed this frame?\nNumber of touches (fingers) on the surface. Value is ≥ 2 …\nTotal number of vertices in all the row meshes.\nRadius of the rounding of the North-West (left top) corner.\nMove the shadow by this much.\nCall the given callback at the start of each pass of each …\nShow this text when hovering if the widget is disabled.\nShow this UI when hovering if the widget is disabled.\nCall the given callback at the end of each pass of each …\nWhen hovered or dragged, use this icon for the mouse …\nWhen hovered, use this icon for the mouse cursor.\nShow this text if the widget was hovered (i.e. a tooltip).\nLike <code>on_hover_text</code>, but show the text next to cursor.\nShow this UI if the widget was hovered (i.e. a tooltip).\nLike <code>on_hover_ui</code>, but show the ui next to cursor.\nRead the current opacity of the underlying painter.\nRead the current opacity of the underlying painter.\nOpen the given popup and close all others.\nOpen an URL in a browser.\nIf set, open this url.\nRead-only access to <code>Options</code>.\nGlobal egui options.\nRead-write access to <code>Options</code>.\nIn which layer, and in which order in that layer?\nWhat operating system are we running on?\nThe outer rectangle of the native window, in monitor space …\nAll the data egui returns to the backend at the end of …\nRead-only access to the shared <code>PlatformOutput</code>.\nRead-only access to <code>PlatformOutput</code>.\nRead-write access to the shared <code>PlatformOutput</code>.\nRead-write access to <code>PlatformOutput</code>.\nDraw a debug rectangle over the response displaying the …\nUse this to paint stuff within this <code>Ui</code>.\nCreate a painter for a sub-region of this Ui.\nParent viewport, if known.\nReturn the <code>ViewportId</code> of his parent.\nSet by the <code>egui-winit</code> backend.\nSet by the <code>egui-winit</code> backend.\nRetrieve the payload, if any.\nSize of a physical pixel in logical gui coordinates …\nThe pixels, row by row, from top to bottom.\nThe coverage value.\nThe number of physical pixels for each logical point.\nAlso known as device pixel ratio, &gt; 1 for high resolution …\nPixels per point.\nThe number of physical pixels for each logical point. …\nThe number of physical pixels per logical ui point, for …\nAlso known as device pixel ratio, &gt; 1 for high resolution …\nNon-rendering related output.\nState of the mouse or simple touch gestures which can be …\nIf it is a good idea to show a tooltip, where is pointer?\nIf you detect a click or drag and wants to know where it …\nLatest reported pointer position.\n<code>pos2(x, y) == Pos2::new(x, y)</code>\nReturns a 0-width Rect.\nReturns a 0-width Rect.\nReturns a 0-width Rect.\nReturns a 0-width Rect.\nReturns the point on the rect’s frame or in the center …\nShould be set to the expected time between frames when …\nEstimated time until next frame (provided we repaint right …\nIf true, the most common glyphs (ASCII) are pre-rendered …\nWhere did the current click/drag originate? <code>None</code> if no …\nWhen did the current click/drag originate? <code>None</code> if no …\nThe previous text value.\nWas the primary button clicked this frame?\nIs the primary button currently down?\nWas the primary button pressed this frame?\nWas the primary button released this frame?\nWhat to paint - either a <code>Mesh</code> or a <code>PaintCallback</code>.\nCreate a child Ui with an explicit <code>Id</code>.\nPush another level onto the <code>UiStack</code>.\nAdd a <code>Widget</code> to this <code>Ui</code> at a specific location (manual …\nShow a <code>RadioButton</code>. Often you want to use <code>Self::radio_value</code>…\nShow radio-buttons to switch between light mode, dark mode …\nShow a <code>RadioButton</code>. It is selected if …\nThe raw input we got this frame from the backend.\nYou probably want to use <code>Self::smooth_scroll_delta</code> instead.\nRead the response of some widget, which may be called …\nExplicit reason; human readable.\nWhere to paint.\nBounding rect.\nThe area of the screen we are talking about.\nThe full widget rectangle, in local layer coordinates.\nIs the pointer (mouse/touch) above this rectangle in this …\nDoes the given rectangle contain the mouse pointer?\nIf <code>true</code>, <code>egui</code> will discard the loaded image data after the …\nCreate a new Image from a patch of the current image. This …\nClone a sub-region as a new image.\nThis is called by <code>Response::widget_info</code>, but can also be …\nLinearly remap a value from one range to another, so that …\nLike <code>remap</code>, but also clamps the value so that the returned …\nWhy are we repainting?\nIf any widget moves or changes id, repaint everything.\nRequest to discard the visual output of this pass, and to …\nWas <code>crate::Context::request_discard</code> called during the …\nGive keyboard focus to a specific widget. See also …\nRequest that this widget get keyboard focus.\nCall this if there is need to repaint the UI, i.e. if you …\nRequest repaint after at most the specified duration …\nRequest repaint after at most the specified duration …\nRepaint after this many seconds.\nCall this if there is need to repaint the UI, i.e. if you …\nWas <code>crate::Context::request_discard</code> called?\nWas a repaint requested last pass for the current viewport?\nWas a repaint requested last pass for the given viewport?\nMake room for this many additional triangles (will reserve …\nMake room for this many additional vertices. See also …\nForget window positions, sizes etc. Can be used to …\nReset to the default style set in <code>Context</code>.\nRead the <code>Ui</code>s background <code>Response</code>. It’s <code>Sense</code> will be …\nThe response of the area.\n<code>max.x</code>\n<code>max.x</code>\nPlace elements horizontally, right to left.\nRotates the vector by 90°, i.e positive X to positive Y …\nRotate by some angle about an origin, in-place.\nRotate the bounds (will expand the <code>Rect</code>)\nRotation in radians. Moving fingers around each other will …\nUseful for pixel-perfect rendering of lines that are one …\nUseful for pixel-perfect rendering.\nUseful for pixel-perfect rendering.\nUseful for pixel-perfect rendering of filled shapes.\nUseful for pixel-perfect rendering of lines that are one …\nUseful for pixel-perfect rendering.\nRows of text, from top to bottom.\nRun the ui code for one 1.\nThe same margin on every side.\nScale the shape by <code>factor</code>, in-place.\nScale the font’s glyphs by this much. this is only a …\nScale up by this factor in each direction, keeping the …\nScale up by this factor in each direction, keeping the …\nCreate a scoped child ui.\nCreate a child, add content to it, and then allocate only …\nCreate a child, add content to it, and then allocate only …\nThis is a signal to any backend that we want the …\nPosition and size of the egui area.\nPosition and size of the area that egui should use, in …\nPosition and size of the egui area.\nFull size of the screen, in pixels.\nAdjust the scroll position of any parent <code>crate::ScrollArea</code> …\nSame as <code>Self::scroll_to_cursor</code>, but allows you to specify …\nAdjust the scroll position until this UI becomes visible.\nLike <code>Self::scroll_to_me</code>, but allows you to specify the …\nAdjust the scroll position of any parent <code>crate::ScrollArea</code> …\nSame as <code>Self::scroll_to_rect</code>, but allows you to specify …\nScroll this many points in the given direction, in the …\nSame as <code>Self::scroll_with_delta</code>, but allows you to specify …\nControls the speed at which we zoom in when doing ctrl/cmd …\nRadius of the rounding of the South-East (right bottom) …\nWas the secondary button clicked this frame?\nReturns true if this widget was clicked this frame by the …\nIs the secondary button currently down?\nWas the secondary button pressed this frame?\nWas the secondary button released this frame?\nShow a label which can be selected or not.\nShow selectable text. It is selected if …\ncheckboxes, radio-buttons etc\nThe current value of checkboxes and radio buttons.\nSend a command to the current viewport.\nSend a command to a specific viewport.\nSet if you want sense clicks and/or drags. Default is …\nThe senses (click and/or drag) that the widget was …\nHow the widget responds to interaction.\nShortcut for <code>add(Separator::default())</code>\nAssign a new image to an existing texture.\nModify an existing <code>Shape</code>.\nNew or changed textures. Apply before painting.\n<code>max.y</code>\nKeep size\nScreen-space rectangle for clipping what we paint in this …\nEverything painted in this <code>Painter</code> will be clipped against …\nSet the cursor icon.\nTurn on/off whether or not to debug widget layout on hover.\nSet which widget is being dragged.\nSet which widget is being dragged.\nIf <code>true</code>, <code>Self::show_viewport_deferred</code> and …\nCalling <code>set_enabled(false)</code> will cause the <code>Ui</code> to deny all …\nIf true, all windows, menus, tooltips etc are to be …\nSet an event filter for a widget.\nTell <code>egui</code> which fonts to use.\nkeep min\nSet both the minimum and maximum height.\n<code>ui.set_height_range(min..=max);</code> is equivalent to …\nFor integrations: Set this to render a sync viewport.\nCalling <code>set_invisible()</code> will cause all further widgets to …\nRedirect where you are painting.\n<code>min.x</code>\nSet the maximum height of the ui. You won’t be able to …\nSet the maximum size of the ui. You won’t be able to …\nSet the maximum width of the ui. You won’t be able to …\nSet the minimum height of the ui. This can’t shrink the …\nSet the minimum size of the ui. This can’t shrink the …\nSet the minimum width of the ui. This can’t shrink the …\nLimit focus to widgets on the given layer and above. If …\nMake the widget in this <code>Ui</code> semi-transparent.\nSet the opacity (alpha multiplier) of everything painted …\nSet the operating system we are running on.\nAssign a new image to a subregion of the whole texture.\nSet a drag-and-drop payload.\nSet the number of physical pixels for each logical point. …\nFor integrations: this callback will be called when an …\n<code>max.x</code>\nSet row height in horizontal wrapping layout.\nSet to true in special cases where we do one frame where …\nChanges apply to this <code>Ui</code> and its subsequent children.\nThe currently active <code>Style</code> used by all new windows, panels …\nThe <code>Style</code> used by all new windows, panels etc. Use …\nMark the <code>child</code> layer as a sublayer of <code>parent</code>.\nThe <code>Theme</code> used to select between dark and light <code>Self::style</code>\n<code>min.y</code>\nTransform the graphics of the given layer.\nCalling <code>set_visible(false)</code> will cause all further widgets …\nThe <code>crate::Visuals</code> used by all subsequent windows, panels …\nThe <code>crate::Visuals</code> used by all subsequent windows, panels …\nkeep min\nSet both the minimum and maximum width.\n<code>ui.set_width_range(min..=max);</code> is equivalent to …\nSets zoom factor of the UI. Will become active at the …\nShow a ui for settings (style and tessellation options).\nWhat to paint.\nEither of the shift keys are down.\nIs shift the only pressed button?\nShort and readable summary\nAlways show this tooltip, even if disabled and the user isn…\nAlways show this tooltip, even if disabled and the user isn…\nShow a deferred viewport, creating a new native window, if …\nShow an immediate viewport, creating a new native window, …\nShrink by this much on each side, keeping the center\nShrink by this much in each direction, keeping the center\nShrink by this much in each direction, keeping the center\nConstrain the rectangle in which we can paint.\nConstrain the rectangle in which we can paint.\nHelper: shrinks the max height to the current height, so …\nHelper: shrinks the max width to the current width, so …\nSigned distance to the edge of the box.\n<code>rect.size() == Vec2 { x: rect.width(), y: rect.height() }</code>\nwidth x height\nwidth, height.\nwidth, height\nHeight in points.\nwidth x height\nSet to true in special cases where we do one frame where …\nPretend like <code>count</code> widgets have been allocated.\nShow small text.\nA button as small as normal body text.\nHow many points the user scrolled, smoothed over a few …\nSet spacing between columns/rows. Default: …\nThe current spacing options for this <code>Ui</code>. Short for …\nMutably borrow internal <code>Spacing</code>. Changes apply to this <code>Ui</code> …\nThe length of the range, i.e. <code>max - min</code>.\nThe default egui fonts supports around 1216 emojis in …\nShortcut for <code>add(Spinner::new())</code>\nSet both <code>x</code> and <code>y</code> to the same value.\nSplit rectangle in left and right halves. <code>t</code> is expected to …\nSplit rectangle in left and right halves at the given <code>x</code> …\nThis is for platforms that only support 16-bit index …\nSplit rectangle in top and bottom halves. <code>t</code> is expected to …\nSplit rectangle in top and bottom halves at the given <code>y</code> …\nExpand the shadow in all directions by this much.\n<code>[2, 1]</code> for wide screen, and <code>[1, 2]</code> for portrait, etc. At …\nReturns the textures as <code>sRGBA</code> premultiplied pixels, row by …\nTime since last frame (in seconds), but gracefully handles …\nGet a reference to this <code>Ui</code>’s <code>UiStack</code>.\nPosition of the pointer at the time the gesture started.\nChange which row number the grid starts on. This can be …\nPoint in time when the gesture started.\nStop dragging any widget.\nStop dragging any widget.\nStop editing the active <code>TextEdit</code> (if any).\nIf <code>true</code>, add a subtle background color to every other row.\nShow text that stand out a bit (e.g. slightly brighter).\negui theme (spacing, colors, etc).\nStyle options for this <code>Ui</code> and its children.\nThe currently active <code>Style</code> used by all subsequent windows, …\nOverride the style.\nMutably borrow internal <code>Style</code>. Changes apply to this <code>Ui</code> …\nMutate the currently active <code>Style</code> used by all subsequent …\nMutate the <code>Style</code> used by all subsequent windows, panels …\nThe <code>Style</code> used by all subsequent windows, panels etc.\nEdit the <code>Style</code>.\nTotal margins on both sides\nSurrender keyboard focus for a specific widget. See also …\nSurrender keyboard focus for this widget.\nRadius of the rounding of the South-West (left bottom) …\nEmoji or name representing the key\nMargins with the same size on opposing sides\nDoes the OS use dark or light mode? This is used when the …\nDoes the OS use dark or light mode?\nIf <code>true</code>, pressing tab will act on the widget, and NOT move …\nUser tags.\nHelper: move volatile (deltas and events), clone the rest.\nHelper: move <code>Self::events</code>, clone the other fields.\nTake everything ephemeral (everything except <code>cursor_icon</code> …\nRetrieve and clear the payload, if any.\nTessellate the given shapes into triangle meshes.\nRead-only access to <code>TessellationOptions</code>.\nControls the tessellator.\nRead-write access to <code>TessellationOptions</code>.\nLow-level texture manager.\nThe full, non-elided text of the input job.\nLay out and paint some text.\nA <code>TextEdit</code> for multiple lines. Pressing enter key will …\nNo newlines (<code>\\n</code>) allowed. Pressing enter key will result …\nHelpers regarding text selection for labels and text edit.\nSelected range of characters in <code>Self::current_text_value</code>.\nThe height of text of this text style\nHow to vertically align text\nThe texture to use when drawing these triangles.\nShow stats about the allocated textures.\nTexture changes since last frame (including the font …\nThe <code>Theme</code> used to select the appropriate <code>Style</code> (dark or …\nPreference for selection between dark and light …\nMonotonically increasing time, in seconds. Relative to …\nTime in seconds. Relative to whatever. Used for animation.\nHow long has it been (in seconds) since the pointer was …\nHow long has it been (in seconds) since the pointer was …\nHow long has it been (in seconds) since the use last …\nName of the viewport, if known.\nPremultiplied RGBA\nPremultiplied RGBA\nConvert <code>Min =&gt; 0.0</code>, <code>Center =&gt; 0.5</code> or <code>Max =&gt; 1.0</code>.\nTransforms per layer.\nFormats the color as a hex string.\nConverts to floating point values in the range 0-1 without …\nReturns an opaque version of self\nReturns an opaque version of self\nTreat this vector as a position. <code>v.to_pos2()</code> is equivalent …\nunmultiply the alpha\nConvert <code>Min =&gt; -1.0</code>, <code>Center =&gt; 0.0</code> or <code>Max =&gt; 1.0</code>.\n-1, 0, or +1 for each axis\nunmultiply the alpha\nPremultiplied RGBA\nPremultiplied RGBA\nThe vector from origin to this position. <code>p.to_vec2()</code> is …\nConvert to a float <code>Vec2</code> where the components are 1.0 for …\nToggle the given popup between closed and open.\nActs like a checkbox, but looks like a <code>SelectableLabel</code>.\n<code>min.y</code>\nPlace elements vertically, top to bottom.\nTop-down layout justified so that buttons etc fill the …\nRetrieve the <code>LayerId</code> of the top level windows.\nGet the top modal layer (from the previous frame).\n<code>min.y</code>\nTransform the mesh in-place with the given transform.\nMove the shape by this many points, in-place.\nTransform all the graphics at the given layer.\nTranslate location by this much, in-place\nMove the shape by <code>delta</code>, in-place.\nMove all the graphics at the given layer.\nRelative movement (comparing previous frame and current …\nReturns true if this widget was triple-clicked this frame …\nReturns true if this widget was triple-clicked this frame …\nTry loading the bytes from the given uri using any …\nTry loading the image from the given uri using any …\nTry loading the texture from the given uri using any …\nExtra scale and vertical tweak to apply to all text of …\nThe type of widget this is.\nShow the options in the ui.\nIs the pointer (mouse/touch) above the current <code>Ui</code>?\nProvide some information about the new <code>Ui</code> being built.\nThe union of two bounding rectangle, i.e. the minimum <code>Rect</code> …\nA logical “or” operation. For instance …\nThe logical “or” of two <code>Sense</code>s.\nThis is a globally unique ID of this <code>Ui</code>, based on where in …\nTime since last frame, in seconds.\nHow much space is used by panels and windows.\nHow much space is used by panels and windows.\nMiscellaneous tools used by the rest of egui.\nIf you use a small font and <code>Align::TOP</code> you can get the …\nThe inner value of the <code>Id</code>.\nThe current value of sliders etc.\n<code>vec2(x, y) == Vec2::new(x, y)</code>\nCurrent velocity of pointer.\nStart a ui with vertical layout. Widgets will be …\ne.g. for when aligning text within a button.\nIf <code>true</code>, pressing vertical arrows will act on the widget, …\nStart a ui with vertical layout. Widgets will be …\nStart a ui with vertical layout. Widgets will be …\nThe vertex data indexed by <code>indices</code>.\negui supports multiple viewports, corresponding to …\nRead the state of the current viewport.\nInfo about the active viewport\nInfo about the active viewport\nViewport in points.\nRead the state of a specific current viewport.\nReturn the <code>ViewportId</code> of the current viewport.\nThis is used to specify what viewport that should repaint.\nThe id of the active viewport.\nThe viewport rectangle. This is what you would use in e.g. …\nAll the active viewports, including the root.\nInformation about all egui viewports.\nThe visual bounding rectangle (includes stroke widths)\nThe current visuals settings of this <code>Ui</code>. Short for …\nMutably borrow internal <code>visuals</code>. Changes apply to this <code>Ui</code> …\nA vertical line.\nPaints a vertical line.\nIf <code>true</code>, egui is currently listening on text input (e.g. …\nTrue if egui is currently interested in the pointer (mouse …\nThe <code>crate::Context</code> will call this at the end of each frame …\nHelper function that adds a label when compiling with …\nCheck reusing of <code>Id</code>s, and show a visual warning on screen …\nShow text that is weaker (fainter color).\nReturns <code>true</code> if the widget with the given <code>Id</code> contains the …\nFor accessibility.\nWidgets are pieces of GUI such as <code>Label</code>, <code>Button</code>, <code>Slider</code> …\nWill the visual output of this pass be discarded?\nGenerate a new <code>Id</code> by hashing the parent <code>Id</code> and the given …\nCall the provided function with the given ID pushed on the …\nCreate a painter for a sub-region of this <code>Painter</code>.\nThe alignment to use on the cross axis.\nJustify widgets along the cross axis?\nRedirect shapes to another paint layer.\nRedirect where you are painting.\nThe new layout will take up all available space.\nThe alignment to use on the main axis.\nJustify widgets on the main axis?\nWrap widgets when we overflow the main axis?\nReturns a response with a modified <code>Self::rect</code>.\nSetting this will allow for dynamic coloring of rows of …\nInsert a tag with no value.\nInsert a tag with some value.\nCreate a new Scope and transform its contents via a …\nWhich wrap mode should the text use in this <code>Ui</code>?\nHow to wrap the texture when the texture coordinates are …\nShould text wrap in this <code>Ui</code>?\nReturns an alignment by the X (horizontal) axis\nHow far to the right.\nRightwards. Width.\nReturns an alignment by the Y (vertical) axis\nHow far down.\nDownwards. Height.\nShift font’s glyphs downwards by this amount of logical …\nShift font’s glyphs downwards by this fraction of the …\nSwizzle the axes.\nZoom scale factor this frame (e.g. from ctrl-scroll or …\nProportional zoom factor (pinch gesture).\n2D non-proportional zoom scale factor this frame (e.g. …\n2D non-proportional zoom factor (pinch gesture).\nGlobal zoom factor of the UI.\nGlobal zoom factor of the UI.\nIf <code>true</code>, egui will change the scale of the ui (…\nWhat mouse button? For touches, use <code>PointerButton::Primary</code>.\nThe direction of the vector indicates how to move the …\nHashed device identifier (if available; may be zero). Can …\nDescribes how hard the touch device was pressed. May …\nUnique identifier of a finger/pen. Value is stable from …\nMost of the time, it’s the logical key, heeding the …\nThe state of the modifier keys at the time of the event.\nThe state of the modifier keys at the time of the event.\nThe state of the modifier keys at the time of the event.\nOne of: start move end cancel.\nThe physical key, corresponding to the actual position on …\nWhere is the pointer?\nPosition of the touch (or where the touch was last …\nWas it pressed or released?\nWas it the button/touch pressed this frame, or released?\nIf this is a <code>pressed</code> event, is it a key-repeat?\nThe unit of <code>delta</code>: points, lines, or pages.\nWhatever was passed to <code>crate::ViewportCommand::Screenshot</code>.\nA typemap of many caches, all implemented with <code>CacheTrait</code>.\nA cache, storing some value for some length of time.\nSomething that does an expensive computation that we want …\nCaches the results of a computation for one frame. If it …\nStores a key:value pair for the duration of this frame and …\nMust be called once per frame to clear the cache.\nMust be called once per frame to clear the cache.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet from cache (if the same key was used last frame) or …\nRetrieve a value if it was published this or the previous …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of values currently in the cache.\nPublish the value. It will be available for the duration …\nCall once per frame to evict cache.\nCall once per frame to evict cache.\nIndicate whether a popup will be shown above or below the …\nAn area on the screen that can be moved by dragging.\nState of an <code>Area</code> that is persisted between frames.\nA drop-down selection menu with a descriptive label.\nA function that paints the <code>ComboBox</code> icon\nA region that can be resized by dragging the bottom right …\nPut some widgets on the left and right sides of a ui.\nBuilder for a floating window which can be dragged, …\nSet anchor and distance.\nSet anchor and distance.\nNot resizable, just takes the size of its contents. Also …\nNot manually resizable, just takes the size of its …\nControls the close behavior for the popup.\nCan the window be collapsed by clicking on its title?\nConstrains this window to <code>Context::screen_rect</code>.\nConstrains this area to <code>Context::screen_rect</code>?\nConstrain the movement of the window to the given …\nConstrain the movement of the window to the given …\nSet current position of the window. If the window is …\nPositions the window but you can still move it.\nSet initial height of the window.\nSee <code>Self::default_size</code>.\nPreferred / suggested height. Actual height will depend on …\nSet initial collapsed state of the window\nSet initial position of the window.\nSet initial position and size of the window.\nSet initial size of the window.\nThe size used for the <code>Ui::max_rect</code> the first frame.\nSet initial width of the window.\nSee <code>Self::default_size</code>.\nPreferred / suggested width. Actual width will depend on …\nEnable/disable scrolling on the window by dragging with …\nIf <code>false</code> the window will be grayed out and non-interactive.\nIf false, no content responds to click and widgets will be …\nIf <code>true</code>, quickly fade in the <code>Window</code> when it first appears.\nIf <code>true</code>, quickly fade in the area.\nIf <code>true</code>, quickly fade out the <code>Window</code> when it closes.\nSets the window position and prevents it from being …\nPositions the window and prevents it from being moved\nSets the window pos and size and prevents it from being …\nSets the window size and prevents it from being resized by …\nFrame container\nChange the background color, margins, etc.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWithout label.\nWithout label.\nLabel shown next to the combo box\nSet the maximum outer height of the menu.\nThe minimum height of the sides.\nEnable/disable horizontal scrolling. <code>false</code> by default.\nUse the provided function to render a different <code>ComboBox</code> …\nAssign a unique id to the Window. Required if the title …\nLet’s you change the <code>id</code> that you assigned in <code>Self::new</code>.\nAssign an explicit and globally unique id.\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nIf false, clicks goes straight through to what is behind …\nIf false, clicks goes straight through to what is behind …\nIf false, clicks goes straight through to what is behind …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the <code>ComboBox</code> with the given id has its popup menu …\nChange the <code>UiKind</code> of the arena.\nAt what time was this area first shown?\nThe left top positions of the area.\nLoad the state of an <code>Area</code> from memory.\nSet maximum height of the window.\nWon’t expand to larger than this\nSet maximum size of the window, equivalent to calling both …\nWon’t expand to larger than this\nSet maximum width of the window.\nWon’t expand to larger than this\nSet minimum height of the window.\nWon’t shrink to smaller than this\nSet minimum size of the window, equivalent to calling both …\nWon’t shrink to smaller than this\nSet minimum width of the window.\nWon’t shrink to smaller than this\nIf <code>false</code> the window will be immovable.\nMoveable by dragging the area?\nUsage: …\nCreate new <code>ComboBox</code> with id and label\nThe window title is used as a unique <code>Id</code> and must be …\nThe <code>id</code> must be globally unique.\nCall this to add a close-button to the window title bar.\n<code>order(Order::Foreground)</code> for a Window that should always …\n<code>order(Order::Foreground)</code> for an Area that should always be …\nPanels are <code>Ui</code> regions taking up e.g. the left side of a <code>Ui</code> …\nWhere the “root” of the window is.\nWhere the “root” of the area is.\nThe anchor point of the area, i.e. where on the area the …\nLast known position of the pivot.\nShow popup windows, tooltips, context menus etc.\nWhere the area is on screen.\nCan the user resize the window by dragging its edges?\nCan you resize it with the mouse?\nUsage: …\nEnable/disable horizontal/vertical scrolling. <code>false</code> by …\nEnable/disable horizontal/vertical scrolling. <code>false</code> by …\nSets the <code>ScrollBarVisibility</code> of the window.\nWhat we show as the currently selected value\nExplicitly set a sense.\nMove the left top positions of the area.\nReturns <code>None</code> if the window is not open (if <code>Window::open</code> …\nShow a list of items with the given selected index.\nShow the combo box, with the given ui code for the menu …\nLast known size.\nThe horizontal spacing between the left and right UIs.\nShow title bar on top of the window? If <code>false</code>, the window …\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Truncate</code>.\nEnable/disable vertical scrolling. <code>false</code> by default.\nSet the outer width of the button and menu.\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Wrap</code>.\nControls the wrap mode used for the selected text.\nA header which can be collapsed/expanded, revealing a …\nThe response from showing a <code>CollapsingHeader</code>.\nThis is a a building block for building collapsing regions.\nFrom <code>CollapsingState::show_header</code>.\nA function that paints an icon indicating if the region is …\nReturns the response of the collapsing button, the custom …\nNone iff collapsed.\nNone iff collapsed.\nReturns the response of the collapsing button, the custom …\nBy default, the <code>CollapsingHeader</code> is collapsed. Call …\nIf you set this to <code>false</code>, the <code>CollapsingHeader</code> will be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWas the <code>CollapsingHeader</code> fully closed (and not being …\nWas the <code>CollapsingHeader</code> fully open (and not being …\nResponse of the actual clickable header.\nUse the provided function to render a different …\nExplicitly set the source of the <code>Id</code> of this widget, …\nExplicitly set the source of the <code>Id</code> of this widget, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>CollapsingHeader</code> starts out collapsed unless you call …\nCalling <code>.open(Some(true))</code> will make the collapsing header …\n0 for closed, 1 for open, with tweening\n0.0 if fully closed, 1.0 if fully open, and something …\nPaint the arrow icon that indicated if the region is open …\nShould the <code>CollapsingHeader</code> show a background behind it? …\nShow body if we are open, with a nice animation between …\nShow body if we are open, with a nice animation between …\nShows header and body (if expanded).\nPaint this <code>CollapsingState</code>’s toggle button. Takes an …\nAdd a background, frame and/or margin to a rectangular …\nAllocate the space that was used by <code>Self::content_ui</code>.\nBegin a dynamically colored frame.\nA canvas to draw on.\nAdd your widgets to this UI so it ends up within the frame.\nA dark canvas to draw on.\nConvenience for calling <code>Self::allocate_space</code> and …\nThe frame that was prepared.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFor when you want to group a few widgets together within a …\nMargin within the painted frame.\nMargin within the painted frame.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOpacity multiplier in gamma space.\nMargin outside the painted frame.\nMargin outside the painted frame.\nPaint the frame.\nPaint this frame as a shape.\nShow the given ui surrounded by this frame.\nShow using dynamic dispatch.\ninner margin plus outer margin.\nA modal dialog. Similar to a <code>crate::Window</code> but centered …\nThe response of a modal dialog.\nIs there any popup open? We need to check this before the …\nSet the area of the modal.\nSet the backdrop color of the modal.\nThe response of the modal backdrop.\nReturns an area customized for a modal. Makes these …\nSet the frame of the modal.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe inner response from the content closure\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this the topmost modal?\nCreate a new Modal. The id is passed to the area.\nThe response of the modal contents\nShould the modal be closed? Returns true if:\nShow the modal.\nA panel that covers the remainder of the screen, i.e. …\nState regarding panels.\n<code>Left</code> or <code>Right</code>\nA panel that covers the entire left or right side of a <code>Ui</code> …\nA panel that covers the entire top or bottom of a <code>Ui</code> or …\n<code>Top</code> or <code>Bottom</code>\nThe id should be globally unique, e.g. …\nThe initial height of the <code>TopBottomPanel</code>, including …\nThe initial wrapping width of the <code>SidePanel</code>, including …\nEnforce this exact height, including margins.\nEnforce this exact width, including margins.\nChange the background color, margins, etc.\nChange the background color, margins, etc.\nChange the background color, margins, etc.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe allowable height range for the panel, including …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe id should be globally unique, e.g. …\nMaximum height of the panel, including margins.\nMaximum width of the panel, including margins.\nMinimum height of the panel, including margins.\nMinimum width of the panel, including margins.\nThe id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.\nThe id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.\nCan panel be resized by dragging the edge of it?\nCan panel be resized by dragging the edge of it?\nThe id should be globally unique, e.g. …\nShow the panel at the top level.\nShow the panel at the top level.\nShow the panel at the top level.\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShow either a collapsed or a expanded panel, with a nice …\nShow either a collapsed or a expanded panel, with a nice …\nShow either a collapsed or a expanded panel, with a nice …\nShow either a collapsed or a expanded panel, with a nice …\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShow the panel if <code>is_expanded</code> is <code>true</code>, otherwise don’t …\nShow the panel inside a <code>Ui</code>.\nShow the panel inside a <code>Ui</code>.\nShow the panel inside a <code>Ui</code>.\nShow a separator line, even when not interacting with it?\nShow a separator line, even when not interacting with it?\nThe size of the panel (from previous frame).\nThe id should be globally unique, e.g. …\nThe allowable width range for the panel, including margins.\nPopup will be closed on click anywhere, inside or outside …\nPopup will be closed if the click happened somewhere else …\nClicks will be ignored. Popup might be closed manually by …\nDetermines popup’s close behavior\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWhat is the id of the next tooltip for this widget?\nShows a popup above or below another widget.\nHelper for <code>popup_above_or_below_widget</code>.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip at the given position.\nShow a tooltip at the current pointer position (if any).\nShow a tooltip under the given area.\nShow some text at the current pointer position (if any).\nWas this popup visible last frame?\nHide scroll bar even if they are needed.\nAlways show the scroll bar, even if the contents fit in …\nAdd vertical and/or horizontal scrolling to a contained <code>Ui</code>.\nIndicate whether the horizontal and vertical scroll bars …\nShow scroll bars only when the content size exceeds the …\nShould the scroll area animate <code>scroll_to_*</code> functions?\nFor each axis, should the containing area shrink if the …\nCreate a bi-directional (horizontal and vertical) scroll …\nThe size of the content. If this is larger than …\nCan the user drag the scroll area to scroll?\nControl the scrolling behavior.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a horizontal scroll area.\nSet the horizontal scroll offset position.\nTurn on/off scrolling on the horizontal axis.\n<code>Id</code> of the <code>ScrollArea</code>.\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nWhat the user closure returned.\nWhere on the screen the content is (excludes scroll bars).\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum height of the outer frame of the scroll area.\nThe maximum width of the outer frame of the scroll area.\nThe minimum height of a vertical scroll area which …\nThe minimum width of a horizontal scroll area which …\nCreate a scroll area where both direction of scrolling is …\nCreate a scroll area where you decide which axis has …\nPositive offset means scrolling down/right\nTurn on/off scrolling on the horizontal/vertical axes.\nTurn on/off scrolling on the horizontal/vertical axes.\nSpecify within which screen-space rectangle to show the …\nSet the visibility of both horizontal and vertical scroll …\nSet the horizontal and vertical scroll offset position.\nShow the <code>ScrollArea</code>, and add the contents to the viewport.\nEfficiently show only the visible part of a large number …\nThis can be used to only paint the visible part of the …\nThe current state of the scroll area.\nThe scroll handle will stick to the bottom position even …\nThe scroll handle will stick to the rightmost position …\nGet the current kinetic scrolling velocity.\nCreate a vertical scroll area.\nSet the vertical scroll offset position.\nTurn on/off scrolling on the vertical axis.\nPrint this text next to the cursor at the end of the pass.\nThe suggested keyboard shortcuts for global gui zooming.\nMake everything larger by increasing <code>Context::zoom_factor</code>.\nShow buttons for zooming the ui.\nMake everything smaller by decreasing <code>Context::zoom_factor</code>.\nPrimary keyboard shortcut for zooming in (<code>Cmd</code> + <code>+</code>).\nSecondary keyboard shortcut for zooming in (<code>Cmd</code> + <code>=</code>).\nKeyboard shortcut for zooming in (<code>Cmd</code> + <code>-</code>).\nKeyboard shortcut for resetting zoom in (<code>Cmd</code> + <code>0</code>).\nPainted behind all floating windows\nDebug layer, always painted last / on top\nPopups, menus etc that should always be painted on top of …\nThis is where painted <code>Shape</code>s end up during a frame.\nAn identifier for a paint layer. Also acts as an …\nNormal moveable windows that you reorder by click\nDifferent layer categories\nA list of <code>Shape</code>s paired with a clip rectangle.\nA unique identifier of a specific <code>Shape</code> in a <code>PaintList</code>.\nThings floating on top of everything else, like tooltips. …\nReturns the index of the new <code>Shape</code> that can be used with …\nRead-only access to all held shapes.\nGet or insert the <code>PaintList</code> for the given <code>LayerId</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the <code>PaintList</code> for the given <code>LayerId</code>.\nGet the <code>PaintList</code> for the given <code>LayerId</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMutate the shape at the given index, if any.\nSet the given shape to be empty (a <code>Shape::Noop</code>).\nModify an existing <code>Shape</code>.\nShort and readable summary\nShort and readable summary\nTransform each <code>Shape</code> and clip rectangle by this much, …\nTransform each <code>Shape</code> and clip rectangle in range by this …\nRepresents a byte buffer.\nRepresents a loader capable of loading raw unstructured …\nRepresents bytes which are currently being loaded.\nMaps URI:s to <code>Bytes</code>, e.g. found with <code>include_bytes!</code>.\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nA specific loader does not support the format of the image.\nScale to height.\nAn <code>ImageLoader</code> decodes raw bytes into a <code>ColorImage</code>.\nRepresents an image which is currently being loaded.\nRepresents a failed attempt at loading an image.\nThe loaders of bytes, images, and textures.\nRuntime error: Loading was attempted, but failed (e.g. “…\nProgrammer error: There are no image loaders installed.\nProgrammer error: Failed to find the bytes for this image …\nProgrammer error: Failed to parse the bytes as an image …\nProgrammer error: no matching <code>TextureLoader</code>. Because of …\nA specific loader does not support this scheme or protocol.\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nBytes are being loaded.\nImage is loading.\nTexture is loading.\nBytes are loaded.\nImage is loaded.\nTexture is loaded.\nScale original size by some factor.\nScale to size.\nGiven as a hint for image loading requests.\nA texture with a known size.\nA <code>TextureLoader</code> uploads a <code>ColorImage</code> to the GPU, returning …\nRepresents a texture is currently being loaded.\nScale to width.\nIf the loader caches any data, this should return the size …\nIf the loader caches any data, this should return the size …\nIf the loader caches any data, this should return the size …\nReturns the (approximate) size of the error message in …\nImplementations may use this to perform work at the end of …\nImplementations may use this to perform work at the end of …\nImplementations may use this to perform work at the end of …\nForget the given <code>uri</code>.\nForget the given <code>uri</code>.\nForget the given <code>uri</code>.\nForget all URIs ever given to this loader.\nForget all URIs ever given to this loader.\nForget all URIs ever given to this loader.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFetch the id and size from a <code>TextureHandle</code>.\nUsed to get a unique ID when implementing one of the …\nUnique ID of this loader.\nUnique ID of this loader.\nUnique ID of this loader.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTry loading the bytes from the given uri.\nTry loading the image from the given uri.\nTry loading the texture from the given uri.\nCreate a <code>SizedTexture</code> from a texture <code>id</code> with a specific …\nFile contents, e.g. the contents of a <code>.png</code>.\nMime type of the content, e.g. <code>image/png</code>.\nSet if known (e.g. from a HTTP header, or by parsing the …\nSet if known (e.g. from a HTTP header, or by parsing the …\nSet if known (e.g. from a HTTP header, or by parsing the …\nSet if known (e.g. from a HTTP header, or by parsing the …\nWhat is saved between frames.\nMenu root associated with an Id from a Response\nStores the state for the context menu.\nComponents of menu state, public for advanced usage.\nCheck if position is in the menu hierarchy’s area.\nThe menu bar goes well in a <code>crate::TopBottomPanel::top</code>, …\nShow a menu at pointer if primary-clicked response.\nClose menu hierarchy.\nRespond to secondary (right) clicks.\nInteraction with a context menu (secondary click).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a top level menu in a menu bar. This would be …\nConstruct a top level menu with a custom button in a menu …\nConstruct a top level menu with an image in a menu bar. …\nBounding box of this menu (without the sub-menu), …\nUsed to check if any menu in the tree wants to close\nShow a menu at pointer if right-clicked response.\nProvides interior mutability.\nAn RAII implementation of a “scoped lock” of a mutex. …\nProvides interior mutability.\nAn RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …\nAn RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAndroid OS\nApple iPhone OS\nmacOS\nLinux or Unix other than Android\nAn <code>enum</code> of common operating systems.\nUnknown OS - could be wasm\nWindows\nReturns the argument unchanged.\nUses the compile-time <code>target_arch</code> to identify the OS.\nHelper: try to guess from the user-agent of a browser.\nCalls <code>U::from(self)</code>.\nIndicated an alias, e.g. a shortcut\nSomething can be scrolled in any direction (panned).\nHover a cell in a table\nA widget was clicked.\nA context menu is available\nIndicate that a copy will be made\nRequest an elevated amount of animations and flair for the …\nFor precision work\nA mouse cursor icon.\nNormal cursor icon, whatever that is.\nA widget was double-clicked.\nA widget gained keyboard focus (by tab key).\nWhat egui emits each frame from <code>crate::Context::run</code>.\nThe thing you are hovering can be grabbed\nYou are grabbing the thing you are hovering\nQuestion mark\nInformation about text being edited.\nRequest a standard amount of attention-grabbing actions.\nOmnidirectional move icon (e.g. arrows in all cardinal …\nCan’t drop here\nShow no cursor\nForbidden\nWhat URL to open, and how.\nThings that happened during this frame that the …\nThe non-rendering part of what egui emits each frame.\nPointing hand, used for e.g. web links\nShows that processing is being done, but that the program …\nReset the attention request and interrupt related …\nResize a column\nResize something rightwards (e.g. when dragging the …\nHorizontal resize <code>-</code> to make something wider or more narrow …\nDiagonal resize <code>/</code> (right-up to/from left-down)\nResize something up (e.g. when dragging the top edge of …\nResize something up and right (e.g. when dragging the …\nResize something up and left (e.g. when dragging the …\nDiagonal resize <code>\\</code> (left-up to/from right-down)\nResize a row\nResize something downwards (e.g. when dragging the bottom …\nResize something down and right (e.g. when dragging the …\nResize something down and left (e.g. when dragging the …\nVertical resize <code>|</code> (up-down or down-up)\nResize something leftwards (e.g. when dragging the left …\nText caret, e.g. “Click here to edit text”\nText selection was updated.\nA widget was triple-clicked.\nTypes of attention to request from a user when a native …\nA widget’s value changed.\nVertical text caret, e.g. “Click here to edit vertical …\nNot yet ready, try later.\nDescribes a widget such as a <code>crate::Button</code> or a …\nEnhance!\nLet’s get a better overview\nThe difference in the widget tree since last frame.\nIf set, put this text in the system clipboard. Ignore if …\nThe contents of some editable text (for <code>TextEdit</code> fields).\nSet the cursor to this icon.\nWhere the primary cursor is.\nWhether the widget is enabled.\nEvents that may be useful to e.g. a screen reader.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThis is set if, and only if, the user is currently editing …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe text on labels, buttons, checkboxes etc.\nIs there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…\nIf <code>true</code>, open the url in a new tab. If <code>false</code> open it in …\nHow many ui passes is this the sum of?\nIf set, open this url.\nThe number of physical pixels per logical ui point, for …\nNon-rendering related output.\nThe previous text value.\nWhere the <code>crate::TextEdit</code> is located on screen.\nWas <code>crate::Context::request_discard</code> called during the …\nThe current value of checkboxes and radio buttons.\nWhat to paint.\nSelected range of characters in <code>Self::current_text_value</code>.\nTexture changes since last frame (including the font …\nThe type of widget this is.\nThe current value of sliders etc.\nAll the active viewports, including the root.\nThe word <code>git</code>.\nThe Github logo.\nThe Android logo.\nThe Apple logo.\nTux, the Linux penguin.\nThe Windows logo.\nThe Twitter bird.\nNormal labels. Easily readable, doesn’t take up too much …\nButtons. Maybe slightly bigger than <code>Self::Body</code>.\nCircular handle\nOptions for help debug egui by adding extra visualization\nDefault text style - will use <code>TextStyle::Body</code>, unless …\nDirectly select size and font family\nA way to select <code>FontId</code>, either by picking one directly or …\nRGB is 0-255 in gamma space.\nShape of the handle for sliders and similar widgets.\nHeading. Probably larger than <code>Self::Body</code>.\nHow and when interaction happens.\n0-1 in linear space.\nSame size as <code>Self::Body</code>, but used when monospace is …\nA user-chosen style, found in <code>Style::text_styles</code>.\nHow to format numbers in e.g. a <code>crate::DragValue</code>.\nHow to display numeric color values.\nRectangular handle\nScroll animation configuration, used when programmatically …\nControls the spacing and visuals of a <code>crate::ScrollArea</code>.\nSelected text, selected elements etc\nUsed when small text is needed.\nControls the sizes and distances between widgets.\nSpecifies the look and feel of egui.\nUse a <code>TextStyle</code> to look up the <code>FontId</code> in <code>Style::text_styles</code>…\nLook and feel of the text cursor.\nAlias for a <code>FontId</code> (font of a certain size).\nControls the visual style (colors etc) of egui.\nbg = background, fg = foreground.\nThe visuals of widgets for different states of interaction.\nThe style of an interactive widget as you are clicking or …\nThe opaqueness of the background when the user is hovering …\nThe opaqueness of the handle when the user is hovering the …\nWidth of a solid vertical scrollbar, or height of a …\nIf true and scrolling is enabled for only one direction, …\nHow many seconds a typical animation should last.\nMargin between contents and scroll bar.\nMargin between scroll bar and the outer container (e.g. …\nThe width of the scroll bars at it largest.\nBackground color of widgets that must have a background …\nFor surrounding rectangle of things that need it, like …\nShould the cursor blink?\nShow a background behind buttons.\nButton size is text size plus this on each side\nAllow child widgets to be just on the border and still …\nBackground color behind code-styled monospaced labels.\nShow a background behind collapsing headers.\nHeight of a combo-box before showing scroll bars.\nDefault (minimum) width of a <code>ComboBox</code>.\nDefault dark theme.\nIf true, the visuals are overall dark with light text. If …\nOptions to help debug why egui behaves strangely.\nAlways show callstack to ui on hover.\nShow callstack for the current widget on hover if all …\nThe size used for the <code>Ui::max_rect</code> the first frame.\nThe default text styles of the default egui theme.\nThe opaqueness of the background when the user is neither …\nThe opaqueness of the handle when the user is neither …\nThe style to use for <code>DragValue</code> text.\nScroll with a fixed duration, regardless of distance.\nThe min / max scroll duration.\nA good color for error text (e.g. red).\nMake the frame this much larger.\nShow tooltips explaining <code>DragValue</code>:s etc when hovered.\nVery dark or light color (for corresponding theme). Used …\nWhen fading out things, we fade the colors towards this.\nSomething just barely different from the background color. …\nStroke and text color of the interactive part of a …\nNo scroll bars until you hover the scroll area, at which …\nIf <code>true</code>, scroll bars float above the content, partially …\nHow much space is allocated for a floating scroll bar?\nThe thin width of floating scroll bars that the user is …\nIf true, use colors with more contrast. Good for floating …\nFormat the given number with the given number of decimals.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturned a “grayed out” version of the given color.\nMake sure the scroll handle is at least this big\nShape of the handle for sliders and similar widgets.\nIf we show the hover ui, include where the next widget is …\nThe style of an interactive widget while you hover it, or …\nThe color used for <code>crate::Hyperlink</code>,\nReturns small icon rectangle and big icon rectangle\nCheckboxes, radio button and collapsing headers have an …\nCheckboxes, radio button and collapsing headers have an …\nCheckboxes, radio button and collapsing headers have an …\nShow a spinner when loading an image.\nThe style of an interactive widget, such as a button, at …\nIndent collapsing regions etc by this much.\nEnd indented regions with a horizontal line\nDraw a vertical lien left of indented region, in e.g. …\nUse this style for interactive things. Note that you must …\nThe opaqueness of the background when the user is hovering …\nShould the cursor change when the user hovers over an …\nThe opaqueness of the handle when the user is hovering …\nHow close a widget must be to the mouse to have a chance …\nMinimum size of a <code>DragValue</code>, color picker button, and …\nHow and when interaction happens.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHorizontal and vertical spacing between widgets.\nDefault light theme.\nHorizontal and vertical margins within a menu frame.\nHorizontal distance between a menu and a submenu.\nThe default wrapping width of a menu.\nCan the user select text that span multiple labels?\nThe first argument is the number to be formatted. The …\nNew scroll animation\nNo animation, scroll instantly.\nStyle to use for non-interactive widgets.\nThe style of a widget that you cannot interact with.\nHow to format numbers as strings, e.g. in a …\nHow to display numeric color values.\nWhen blinking, this is how long the cursor is invisible.\nWhen blinking, this is how long the cursor is visible.\nThe style of a button that has an open menu beneath it …\nIf set this will change the font family and size for all …\nOverride default text color for all text.\nIf set this will change the default <code>TextStyle</code> for all …\nHow to vertically align text.\nPanel background color\nWith what speed should we scroll? (Default: 1000.0)\nShow where the text cursor would be if you clicked?\nRadius of the interactive area of the corner of a window …\nRadius of the interactive area of the side of a window …\nLook up this <code>TextStyle</code> in <code>Style::text_styles</code>.\nButton frames etc.\nControls the spacing of a <code>crate::ScrollArea</code>.\nThe animation that should be used when scrolling a …\nCan you select the text on a <code>crate::Label</code> by default?\nShow which widgets make their parent higher\nShow which widgets make their parent wider\nShow an overlay on all interactive widgets.\nIf <code>false</code>, tooltips will show up anytime you hover …\nIf true, highlight widgets that are not aligned to integer …\nShow interesting widgets under the mouse cursor.\nDefault rail height of a <code>Slider</code>.\nShow trailing color behind the circle of a <code>Slider</code>. Default …\nDefault width of a <code>Slider</code>.\nSolid scroll bars that always use up space\nSizes and distances between widgets\nWhether or not Grids and Tables should be striped by …\nThe color and width of the text cursor\nHow the text cursor acts.\nDefault width of a <code>crate::TextEdit</code>.\nAll known text styles.\nThe <code>FontFamily</code> and size you want to use for a specific …\nThin scroll bars that expand on hover\nDelay in seconds before showing tooltips after the mouse …\nIf you have waited for a tooltip and then hover some other …\nWidth of a tooltip (<code>on_hover_ui</code>, <code>on_hover_text</code> etc).\nShow the URL of hyperlinks in a tooltip when hovered.\nColors etc.\nA good color for warning text (e.g. orange).\nBackground color of widgets that can <em>optionally</em> have a …\nVisual styles of widgets\nWindow background color.\nHighlight the topmost window.\nHorizontal and vertical margins within a window frame.\nIf set, labels, buttons, etc. will use this to determine …\nIf set, labels, buttons, etc. will use this to determine …\nAspect ratio of the rectangle. Set to &lt; 1.0 to make it …\nCharacter cursor.\nA <code>.ttf</code> or <code>.otf</code> file and a font face index.\nDescribes the font data and the sizes to use.\nFont of unknown size.\nThe collection of fonts used by <code>epaint</code>.\nText that has been laid out, ready for painting.\nDescribes the task of laying out text.\nA font where each character is the same width (<code>w</code> is the …\nOne of the names in <code>FontDefinitions::families</code>.\nA font where some characters are wider than other (e.g. ‘…\nOne <code>\\t</code> character is this many spaces wide.\nFormatting option for a section of text.\nControls the text wrapping and elision of a <code>LayoutJob</code>.\nHelper for adding a new section when building a <code>LayoutJob</code>.\nCall at the start of each frame with the latest known …\nIf <code>true</code>: Allow breaking between any characters. If <code>false</code> …\nIf <code>true</code>, all <code>\\n</code> characters will result in a new <em>paragraph</em>, …\nRange into the galley text\nText color\nThe wrap with, with a small margin in some cases.\nSet to true the text was truncated due to …\nExtra spacing between letters, in points.\nList of all known font families.\nWhich fonts (names) to use for each <code>FontFamily</code>.\nThe first row must be at least this high. This is in case …\nThe content of a <code>.ttf</code> or <code>.otf</code> file.\nHow full is the font atlas?\nList of font names and their definitions.\nThe height of the tallest font used in the job.\nCall at the end of each frame (before painting) to get the …\nCurrent size of the font image. Pass this to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>TextWrapping</code> from a <code>TextWrapMode</code> and an available …\nWidth of this character in points.\nHow to horizontally align the text (<code>Align::LEFT</code>, …\nCan we display this glyph?\nCan we display all the glyphs in this text?\nThe full font atlas image.\nCharacter offset (NOT byte offset!).\nWhich font face in the file to use. When in doubt, use <code>0</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe job that this galley is the result of. Contains the …\nJustify text so that word-wrapped rows fill the whole …\nWill wrap text at the given width and line break at <code>\\n</code>.\nLike <code>Self::layout</code>, made for when you want to pick a color …\nLayout some text.\nWill line break at <code>\\n</code>.\nCan be used for first row indentation.\nExplicit line height of the text in points.\nMaximum amount of rows the text galley should have.\nWrap text so that no row is wider than this.\nTight bounding box around all the meshes in all the rows. …\nCreate a new <code>Fonts</code> for text layout. This call is …\nA row can be as long as it need to be.\nTotal number of indices in all the row meshes.\nTotal number of vertices in all the row meshes.\nCharacter to use to represent elided text.\nThe number of physical pixels for each logical point. …\nIf this cursors sits right at the border of a wrapped row …\nBounding rect.\nRounding to the closest ui point (not pixel!) allows the …\nHeight of one row of text in points\nRows of text, from top to bottom.\nThe different section, which can have different fonts, …\nBreak on <code>\\n</code> and at the given wrap width.\nDoes not break on <code>\\n</code>, but shows the replacement character …\nThe complete text of this job, referenced by <code>LayoutSection</code>.\nThe font atlas. Pass this to <code>crate::Tessellator</code>.\nElide text that doesn’t fit within the given width, …\nExtra scale and vertical tweak to apply to all text of …\nIf you use a small font and <code>Align::TOP</code> you can get the …\nControls the text wrapping and elision.\nA row can be at most <code>max_width</code> wide but can wrap in any …\nA selected text range (could be a range of length zero).\nA selected text range (could be a range of length zero).\nHandles text selection in labels (NOT in <code>crate::TextEdit</code>)s.\nThe range of selected character indices.\nIs <code>self</code> a super-set of the other range?\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if the selected range contains no characters.\nHandle text selection state for a label or similar widget.\nCheck for events that modify the cursor range.\nCheck for key presses that are moving the cursor.\nThe empty range.\nThe empty range.\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nWhen selecting with a mouse, this is where the mouse was …\nSelect all the text in a galley\nIf there is a selection, None is returned. If the two ends …\nreturns the two ends ordered\nReturns the two ends ordered.\nText cursor changes/interaction, without modifying the …\nUpdate accesskit with the current text state.\nThe state of a text cursor selection.\nThe currently selected range of characters.\nThe thin rectangle of one end of the selection, e.g. the …\nAccepts and returns character offset (NOT byte offset!).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHandle clicking and/or dragging text.\nSets the currently selected range of characters.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPaint one end of the selection, e.g. the primary cursor.\nPaint one end of the selection, e.g. the primary cursor, …\nAdds text selection rectangles to the galley.\nThis struct tracks recent values of some time series.\nValues must be added with a monotonically increasing time, …\nAverage times rate. If you are keeping track of individual …\nDeprecated alias for <code>crate::cache</code>.\nAmount of time contained from start to end in this <code>History</code>.\nRemove samples that are too old.\nReturns the argument unchanged.\nHash the given value with a predictable hasher.\nHash the given value with the given hasher.\nCalls <code>U::from(self)</code>.\n<code>(time, value)</code> pairs Time difference between values can be …\nCurrent number of values kept in history\nMean time difference between values in this <code>History</code>.\nExample:\nTotal number of values seen. Includes those that have been …\nCalculate a smooth velocity (per second) over the entire …\nStores values identified by an <code>Id</code> AND a the …\nLike <code>std::any::TypeId</code>, but can be serialized and …\nCount the number of values are stored with the given type.\nCount how many values are stored but not yet deserialized.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRead a value, optionally deserializing it if available.\nRead a value without trying to deserialize a persisted …\nInsert a value that will be persisted next time you start …\nInsert a value that will not be persisted.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of bytes that will be used to store the …\nRemove the state of this type and id.\nNote all state of the given type.\nRemove and fetch the state of this type and id.\nSee <code>Self::max_bytes_per_type</code>.\nAutomatic undo system.\nAdd an undo point if, and only if, there has been a change …\nIf the state is changing so often that we never get to …\nCall this as often as you want (e.g. every frame) and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nDo we have an undo point different from the given state?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if the state is currently changing\nMaximum number of undos. If your state is resource …\nWhen that state hasn’t changed for this many seconds, …\nCreate a new <code>Undoer</code> with the given <code>Settings</code>.\nBegin resizing the viewport with the left mouse button …\nCancel the closing that was signaled by …\nRequest this viewport to be closed.\nThis should be used on the windows that are popped up by …\nWill probably not work as expected!\nShow window decorations, i.e. the chrome around the content\nA viewport run independently from the parent viewport.\nThe user-code that shows the ui in the viewport, used for …\nA desktop feature. This can include a single window …\nThis is a dialog window.\nThis indicates the window is being dragged. This property …\nA dock or panel feature. Typically a Window Manager would …\nA dropdown menu that usually appears when the user clicks …\nThe fallback, when the egui integration doesn’t support …\nSet which window buttons are enabled\nBring the window into focus (native only).\nTurn borderless fullscreen on/off.\nSet the IME cursor editing area.\nThe window icon.\nImage data for an application icon.\nA viewport run inside the parent viewport.\nViewport for immediate rendering.\nRender the given viewport, calling the given ui callback.\nShould be bigger than 0\nShould be bigger than 0\nMaximize or unmaximize window.\nPinnable menu windows. “Torn off” from the main …\nShould be bigger than 0\nEnable mouse pass-through: mouse clicks pass through the …\nThis is a normal, top-level window.\nThe window is a notification. This property is typically …\nSet the outer position of the viewport, i.e. moves the …\nA popup menu that usually appears when the user right …\nThe <code>ViewportId</code> of the root viewport.\nThe <code>ViewportIdPair</code> of the root viewport, which is its own …\nRequest a copy of the current selection.\nRequest cut of the current selection\nRequest a paste from the clipboard to the current focused …\nIf the window is unfocused, attract the user’s attention …\nCan the window be resized?\nShould be bigger than 0\nThe root viewport; i.e. the original window.\nTake a screenshot of the next frame after this.\nThe window is a splash screen displayed as an application …\nMoves the window with the left mouse button until the …\nSet the window title.\nToolbar windows. “Torn off” from the main application.\nA tooltip window. Usually used to show additional …\nTurn the window transparent or not.\nA small persistent utility window, such as a palette or …\nControl the building of a new egui viewport (i.e. native …\nThe different types of viewports supported by egui.\nAn output viewport-command from egui to the backend, e.g. …\nA unique identifier of a viewport.\nA fast hash map from <code>ViewportId</code> to <code>T</code>.\nA pair of <code>ViewportId</code>, used to identify a viewport and its …\nA fast hash set of <code>ViewportId</code>.\nDescribes a viewport, i.e. a native window.\nSet the visibility of the window.\nSet window to be always-on-top, always-on-bottom, or …\nThis is wayland only. See <code>Self::with_app_id</code>.\nAdd on new output.\nThe window attrbiutes such as title, position, size, etc.\nConstruct a command to center the viewport on the monitor, …\nWhether clamp the window’s size to monitor’s size. The …\nWhat type of viewport are we?\nCommands to change the viewport, e.g. window title and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nImage height. This should be a multiple of 4.\nId of us and our parent.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nId of our parent viewport.\nUpdate this <code>ViewportBuilder</code> with a delta, returning a list …\nThe desired outer position of the window.\nSchedule a repaint of this viewport after this delay.\nThis command requires the parent viewport to repaint.\nRGBA pixels, with separate/unmultiplied alpha.\nThe title of the viewport. <code>eframe</code> will use this as the …\nThe user-code that shows the GUI.\nThe user-code that shows the GUI, used for deferred …\nImage width. This should be a multiple of 4.\nWhether the window will be initially focused or not.\nThis window is always on top\nOn Wayland\nSets whether clamp the window’s size to monitor’s …\nDoes not work on X11.\nSets whether the window should have a border, a title bar, …\nOn Windows: enable drag and drop support. Drag and drop can\nSets whether the window should be put into fullscreen upon …\nmacOS: Makes the window content appear behind the titlebar.\nThe application icon, e.g. in the Windows task bar or the …\nRequests the window to be of specific dimensions.\nSets the maximum dimensions a window can have.\nDoes not work on X11.\nRequest that the window is maximized upon creation.\nSets the minimum dimensions a window can have.\nDoes not work on X11.\nOn desktop: mouse clicks pass through the window, used for …\nThe initial “outer” position of the window, i.e. where …\nSets whether the window is resizable or not.\nwindows: Whether show or hide the window icon in the …\nSets the initial title of the window in the title bar.\nmacOS: Set to <code>false</code> to hide the window title.\nmacOS: Set to <code>false</code> to hide the titlebar button (close, …\nmacOS: Set to <code>false</code> to make the titlebar transparent, …\nSets whether the background of the window should be …\nSets whether the window will be initially visible or …\nControl if window is always-on-top, always-on-bottom, or …\nOn X11\nUse exactly this galley when painting the text.\nUse this <code>LayoutJob</code> when laying out the text.\nText and optional style choices for it.\nThis is how you specify text for a widget.\nAppend to an existing <code>LayoutJob</code>\nFill-color behind the text.\nPrefer using <code>RichText</code> directly!\nMonospace label with different background color.\nPrefer using <code>RichText</code> directly!\nOverride text color.\nOverride text color if, and only if, this is a <code>RichText</code>.\nExtra spacing between letters, in points.\nSet the <code>TextStyle</code> unless it has already been set\nSet the <code>TextStyle</code> unless it has already been set\nSelect the font family.\nSelect the font and size. This overrides the value from …\nRead the font height of the selected text style.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUse <code>TextStyle::Heading</code>.\nPrefer using <code>RichText</code> directly!\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLayout with wrap mode based on the containing <code>Ui</code>.\nTilt the characters to the right.\nPrefer using <code>RichText</code> directly!\nExplicit line height of the text in points.\nUse <code>TextStyle::Monospace</code>.\nPrefer using <code>RichText</code> directly!\nAlign text to top. Only applicable together with …\nPrefer using <code>RichText</code> directly!\nSelect the font size (in points). This overrides the value …\nSmaller text.\nPrefer using <code>RichText</code> directly!\nFor e.g. exponents.\nPrefer using <code>RichText</code> directly!\nDraw a line through the text, crossing it out.\nPrefer using <code>RichText</code> directly!\nExtra strong text (stronger color).\nPrefer using <code>RichText</code> directly!\nOverride the <code>TextStyle</code>.\nOverride the <code>TextStyle</code> if, and only if, this is a <code>RichText</code>.\nDraw a line under the text.\nPrefer using <code>RichText</code> directly!\nExtra weak text (fainter color).\nPrefer using <code>RichText</code> directly!\nAlways clamp values, even existing ones.\nClickable button with text.\nLoad the image from some raw bytes.\nBoolean on/off control with text label.\nA numeric value that you can change by dragging the …\nUsers cannot enter new values that are outside the range.\nFit the image to an exact size.\nFit the image to a fraction of the available size.\nStores the durations between each frame of a gif\nA clickable hyperlink, e.g. to …\nA widget which displays an image.\nA clickable image within a frame.\nThis type determines how the image should try to fit …\nThis type determines the constraints on how the size of an …\nThis type tells the <code>Ui</code> how to load an image.\nStatic text.\nClickable text, that looks like a hyperlink.\nValues are not clamped.\nFit the image to its original size, scaled by some factor.\nA simple progress bar.\nOne out of several alternatives, either selected or not.\nOne out of several alternatives, either selected or not. …\nA visual separator. A horizontal or vertical line …\nControl a number with a slider.\nSpecifies how values in a <code>Slider</code> are clamped.\nSpecifies the orientation of a <code>Slider</code>.\nA spinner widget used to indicate loading.\nLoad the image from an existing texture.\nLoad the image from a URI, e.g. …\nAnything implementing Widget can be added to a <code>Ui</code> with …\nHelper so that you can do e.g. <code>TextEdit::State::load</code>.\nWhether to display a loading animation when progress <code>&lt; 1</code>. …\nA solid color to put behind the image. Useful for …\nA solid color to put behind the image. Useful for …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nReturns the size the image will occupy in the final UI.\nCalculate the final on-screen size in points.\nIf set to <code>true</code>, existing values will be clamped to …\nSets valid range for the value.\nControls when the values will be clamped to the range.\nSets the spinner’s color.\nColor picker widgets.\nSet custom formatter defining how numbers are converted …\nSet custom formatter defining how numbers are converted …\nSet custom parser defining how the text input is parsed …\nSet custom parser defining how the text input is parsed …\nextracts uri and frame index\nThe desired height of the bar. Will use the default …\nThe desired width of the bar. Will use all horizontal …\nWhen dragging the value, how fast does it move?\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Extend</code>, disabling …\nOverride background fill color. Note that this will …\nThe fill color of the bar.\nDetermines how the image should shrink/expand/stretch/etc. …\nFit the image to an exact size.\nFit the image to a fraction of the available space.\nFit the image to its original size with some scaling.\nSet an exact number of decimals to display. Values will …\nSet an exact number of decimals to display.\nTurn off the frame\nTurn off the frame\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLoad the image from some raw bytes.\nLoad the image from an existing texture.\nLoad the image from a URI.\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nExtend each end of the separator line by this much.\nSets the horizontal alignment of the Label to the given …\nChange the shape of the slider handle\nchecks if bytes are gifs\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSize hint for e.g. rasterizing an svg.\nExplicitly ask for a horizontal line.\nCreates a button with an image. The size of the image as …\nCreates a button with an image to the left of the text. …\nIf true, the tint of the image is multiplied by the widget …\nDisplay an indeterminate state (neither checked nor …\nHelper: equivalent to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFor logarithmic sliders, the largest positive value we are …\nDo layout and position the galley in the ui, without …\nErrors\nLoad the image from its <code>Image::source</code>, returning the …\nMake this a logarithmic slider. This is great for when the …\nWhether or not the <code>ImageFit</code> should maintain the image’s …\nWhether or not the final size should maintain the original …\nSet a maximum number of decimals to display. Values will …\nSet a maximum number of decimals to display.\nSet the max height of the image.\nSet the max size of the image.\nDetermines the maximum size of the image.\nSet the max width of the image.\nSet a minimum number of decimals to display. Normally you …\nSet a minimum number of decimals to display.\nSet the minimum size of the button.\nProgress in the <code>[0, 1]</code> range, where <code>1</code> means “completed”…\nCreates a new horizontal slider.\nLoad the image from some source.\nCreate a new spinner that uses the style’s <code>interact_size</code> …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nAlways open this hyperlink in a new browser tab.\nVertical or horizontal slider? The default is horizontal.\nPaint the image in the given rectangle.\nPaint the spinner in the given rectangle.\nShow a prefix before the number, e.g. “x: “\nShow a prefix before the number, e.g. “x: “\nSets valid range for dragging the value.\nShow a button to reset a value to its default. The button …\nShow a button to reset a value to its default. The button …\nRotate the image about an origin by some angle")