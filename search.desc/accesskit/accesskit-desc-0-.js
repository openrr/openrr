searchState.loadedDescShard("accesskit", 0, "An action to be taken on an accessibility node.\nHandles requests from assistive technologies or other …\nHandles activation of the application’s accessibility …\nA 2D affine transform. Derived from kurbo.\nDo the equivalent of a single click or tap.\nDefines a custom action for a UI element.\nRequires <code>ActionRequest::data</code> to be set to …\nHandles deactivation of the application’s accessibility …\nDecrement a numeric value by one step.\nA transform that is flipped on the x-axis.\nA transform that is flipped on the y-axis. Useful for …\nAn accessibility node snapshot that can’t be modified. …\nA generic container that should be ignored by assistive …\nE.g. most toolbars and separators.\nThe identity transform.\nIncrement a numeric value by one step.\nIndicates if a form control has invalid input or if a web …\nBehaves similar to an ARIA grid but is primarily used by …\nContains the bullet, number, or other marker for a list …\nA single accessible object. A complete UI is represented …\nThe stable identity of a <code>Node</code>, unique within the node’s …\nThe point at the origin; (0, 0).\nLanguage specific ordering (alpha, roman, cjk-ideographic, …\nA 2D point. Derived from kurbo.\nA rectangle. Derived from kurbo.\nDelete any selected text in the control’s text value and …\nThe type of an accessibility node.\nScroll any scrollable containers to make the target object …\nOptional target rectangle for <code>Action::ScrollIntoView</code>, in …\nScroll the given object to a specified point in the tree’…\nTarget for <code>Action::ScrollToPoint</code>, in platform-native …\nRequires <code>ActionRequest::data</code> to be set to …\nTarget for <code>Action::SetScrollOffset</code>, in the coordinate space\nDon’t focus this node, but set it as the sequential …\nRequires <code>ActionRequest::data</code> to be set to …\nReplace the value of the control with the specified value …\nA 2D size. Derived from kurbo.\nThis is just like a multi-line document, but signals that …\nThe data associated with an accessibility tree that’s …\nA serializable representation of an atomic change to a <code>Tree</code>…\nA 2D vector. Derived from kurbo.\nE.g. menu or combo box.\nThe point (0, 0).\nThe empty rectangle at the origin.\nA size with zero width or height.\nThe vector (0, 0).\nTake absolute value of width and height.\nA single character, usually part of this node’s name, …\nA single character, usually part of this node’s name, …\nThe position where the selection started, and which does …\nThe name of the application this tree belongs to.\nThe area of the rectangle.\nGet the coefficients of the transform.\nA way for application authors to identify this node for …\nA way for application authors to identify this node for …\nBackground color in RGBA.\nBackground color in RGBA.\nThe bounding box of this node, in the node’s coordinate …\nThe bounding box of this node, in the node’s coordinate …\nThe index of an item in <code>Node::character_lengths</code>, or the …\nFor text runs, the length (non-inclusive) of each character\nFor text runs, the length (non-inclusive) of each character\nFor text runs, this is the position of each character …\nFor text runs, this is the position of each character …\nFor text runs, this is the advance width of each character,\nFor text runs, this is the advance width of each character,\nIndicates that this node clips its children, i.e. may have …\nIndicates that this node clips its children, i.e. may have …\nFor <code>Role::ColorWell</code>, specifies the selected color in RGBA.\nFor <code>Role::ColorWell</code>, specifies the selected color in RGBA.\nReturns <code>true</code> if <code>point</code> lies within <code>self</code>.\nDeactivate the application’s accessibility …\nCompute the determinant of this transform.\nNote: division by a scalar is implemented by multiplying …\nPerform the requested action. If the requested action is …\nThe active end of the selection, which changes as the …\nThe node within this tree that has keyboard focus when the …\nOnly present when different from parent.\nOnly present when different from parent.\nFont size is in pixels.\nFont size is in pixels.\nFont weight can take on any arbitrary numeric value. …\nFont weight can take on any arbitrary numeric value. …\nForeground color in RGBA.\nForeground color in RGBA.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA new rectangle from origin and size.\nA new rectangle from two points.\nThe height of the rectangle.\nThe height.\nInner HTML of an element. Only used for a top-level math …\nInner HTML of an element. Only used for a top-level math …\nThe intersection of two rectangles.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompute the inverse transform.\nUse for a control or group of controls that disallows …\nUse for a control or group of controls that disallows …\nWhether this rectangle has zero area.\nWhether this node is expanded, collapsed, or neither.\nWhether this node is expanded, collapsed, or neither.\nIs this map finite?\nExclude this node and its descendants from the tree …\nExclude this node and its descendants from the tree …\nIndicates whether this node causes a hard line-break (e.g. …\nIndicates whether this node causes a hard line-break (e.g. …\nIf a dialog box is marked as explicitly modal.\nIf a dialog box is marked as explicitly modal.\nIs this map NaN?\nIndicates whether this node causes a page break.\nIndicates whether this node causes a page break.\nUse for a text widget that allows focus/selection but not …\nUse for a text widget that allows focus/selection but not …\nIndicates whether this node is selected or unselected.\nIndicates whether this node is selected or unselected.\nThis element allows touches to be passed through when a …\nThis element allows touches to be passed through when a …\nA keystroke or sequence of keystrokes, complete with any …\nA keystroke or sequence of keystrokes, complete with any …\nThe label of a control that can have a label. If the label …\nThe label of a control that can have a label. If the label …\nOnly present when different from parent.\nOnly present when different from parent.\nThe list style type. Only available on list items.\nThe list style type. Only available on list items.\nCreates an affine transformation that takes the unit …\nReturns the maximum value for the x-coordinate of the …\nReturns the maximum value for the y-coordinate of the …\nReturns the minimum value for the x-coordinate of the …\nReturns the minimum value for the y-coordinate of the …\nConstruct an affine transform from coefficients.\nCreate a new <code>Point</code> with the provided <code>x</code> and <code>y</code> coordinates.\nA new rectangle from minimum and maximum coordinates.\nCreate a new <code>Size</code> with the provided <code>width</code> and <code>height</code>.\nCreate a new vector.\nThe node’s role must be <code>Role::TextRun</code>.\nZero or more new or updated nodes. Order doesn’t matter.\nThe origin of the rectangle.\nAs with the <code>aria-owns</code> property in ARIA, this property …\nAs with the <code>aria-owns</code> property in ARIA, this property …\nIf a text input has placeholder text, it should be exposed …\nIf a text input has placeholder text, it should be exposed …\nOn radio buttons this should be set to a list of all of …\nOn radio buttons this should be set to a list of all of …\nRequests a <code>TreeUpdate</code> with a full tree. If the application …\nAn optional string that may override an assistive …\nAn optional string that may override an assistive …\nThe identifier of the tree’s root node.\nAn affine transform representing uniform scaling.\nAn affine transform representing non-uniform scaling with …\nThe size of the rectangle.\nAn optional string that may override an assistive …\nAn optional string that may override an assistive …\nConvert this vector into a <code>Point</code>.\nConvert this vector into a <code>Size</code>.\nConvert this point into a <code>Vec2</code>.\nConvert this size into a <code>Vec2</code>, with <code>width</code> mapped to <code>x</code> and …\nThe name of the UI toolkit in use.\nThe version of the UI toolkit.\nIf a node’s only accessible name comes from a tooltip, …\nIf a node’s only accessible name comes from a tooltip, …\nAn affine transform to apply to any coordinates within …\nAn affine transform to apply to any coordinates within …\nCompute the bounding box of a transformed rectangle.\nAn affine transform representing translation.\nRarely updated information about the tree as a whole. This …\nThe smallest rectangle enclosing two rectangles.\nCompute the union with one point.\nThe width of the rectangle.\nThe width.\nCreate a new <code>Rect</code> with the same size as <code>self</code> and a new …\nCreate a new <code>Rect</code> with the same origin as <code>self</code> and a new …\nFor text runs, the length of each word in characters, as …\nFor text runs, the length of each word in characters, as …\nThe x coordinate.\nThe x-coordinate.\nThe minimum x coordinate (left edge).\nThe maximum x coordinate (right edge).\nThe y coordinate.\nThe y-coordinate.\nThe minimum y coordinate (top edge in y-down spaces).\nThe maximum y coordinate (bottom edge in y-down spaces).")