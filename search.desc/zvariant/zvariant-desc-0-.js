searchState.loadedDescShard("zvariant", 0, "zvariant\nThe prefix of ARRAY type signature, as a character. …\nThe prefix of ARRAY type signature, as a string. Provided …\nA helper type to wrap arrays in a <code>Value</code>.\nThe maximum allowed depth for arrays in encoding was …\nUse this to deserialize an Array.\nAlias for <code>Endian::Big</code>.\nTrait for basic types.\nBig endian.\n<code>Signature</code> that identifies a complete type.\nThe maximum allowed depth for containers in encoding was …\nThe closing character of DICT_ENTRY type signature. …\nThe closing character of DICT_ENTRY type signature, as a …\nThe opening character of DICT_ENTRY type signature. …\nThe opening character of DICT_ENTRY type signature, as a …\nAdds <code>Deserialize</code> implementation to structs to be …\nA wrapper to deserialize a value to <code>T: Type + Deserialize</code>.\nA DeserializeSeed implementation for this type.\nA helper type to wrap dictionaries in a <code>Value</code>.\nTypes that deserialize based on dynamic signatures.\nA helper type to serialize or deserialize a tuple whose …\nTypes with dynamic signatures.\nThe endian of the data.\nContains the error value\nError type used by zvariant API.\nA file-descriptor type wrapper.\nThe type (signature as first argument) being …\nType conversions errors.\nWrapper for <code>std::io::Error</code>\nAlias for <code>Endian::Little</code>.\nLittle endian.\nEnum representing the max depth exceeded error.\nThe maximum allowed depth for containers in encoding was …\nGeneric error. All serde errors gets transformed into this …\nMissing framing offset at the end of a GVariant-encoded …\nSame as the return value of <code>Endian::native</code>.\nAlias for <code>Endian::Big</code>.\nType that uses a special value to be used as none.\nString that identifies objects at a given destination on …\nContains the success value\nAn optional value.\nOut of bounds range specified.\nA file-descriptor type wrapper.\nOwned <code>ObjectPath</code>\nOwned <code>Signature</code>\nOwned <code>Structure</code>\nUse this to deserialize an <code>OwnedStructure</code>.\nOwned <code>Value</code>\nImplements conversions for your type to/from <code>OwnedValue</code>.\nNon-0 padding byte(s) encountered.\nA trait for reading bytes.\nAlias for a <code>Result</code> with the error type <code>zvariant::Error</code>.\nThe type signature, as a character.\nThe type signature, as a string.\nThe closing character of STRUCT type signature. Provided …\nThe closing character of STRUCT type signature, as a …\nThe opening character of STRUCT type signature. Provided …\nThe opening character of STRUCT type signature, as a …\nAdds <code>Serialize</code> implementation to structs to be serialized …\nA wrapper to serialize <code>T: Type + Serialize</code> as a value.\nString that identifies the type of an encoded value.\nThe provided signature (first argument) was not valid for …\nA string wrapper.\nA helper type to wrap structs in <code>Value</code>.\nThe maximum allowed depth for structures in encoding was …\nUse this to efficiently build a <code>Structure</code>.\nUse this to deserialize a <code>Structure</code>.\nA helper type for DynamicTuple’s DynamicDeserialize …\nTrait implemented by all serializable types.\nDerive macro to add <code>Type</code> implementation to structs and …\nThe deserialized file descriptor is not in the given FD …\nWrapper for <code>std::str::Utf8Error</code>\nThe VARIANT type signature. Provided for manual signature …\nThe VARIANT type signature, as a string. Provided for …\nA generic container, in the form of an enum that holds …\nImplements conversions for your type to/from <code>Value</code>.\nA trait for writing bytes.\nAdd a new entry.\nAppend <code>field</code> to <code>self</code>.\nThe required padding alignment for the given format.\nAppend <code>element</code>.\nAppend <code>key</code> and <code>value</code> as a new entry.\nAppend <code>field</code> to <code>self</code>.\nThe object path as bytes.\nThe signature bytes.\nThis is faster than <code>Clone::clone</code> when <code>self</code> contains owned …\nThis is faster than <code>Clone::clone</code> when <code>self</code> contains owned …\nThis is faster than <code>Clone::clone</code> when <code>self</code> contains owned …\nThe object path as a string.\nThe signature as a string.\nThe underlying string.\nBuild the <code>Structure</code>.\nGet a deserializer compatible with this signature.\nTry to get the underlying type <code>T</code>.\nTry to get the underlying type <code>T</code>.\nGet the signature for the implementing type.\nGet the signature of the elements in the <code>Array</code>.\nGet a reference to all the fields of <code>self</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>ObjectPath</code> from given bytes.\nCreate a new Signature from given bytes.\nAn owned string without allocations\nSame as <code>from_static_bytes_unchecked</code>, except it checks …\nSame as <code>from_bytes_unchecked</code>, except it takes a static …\nSame as <code>try_from</code>, except it takes a <code>&amp;&#39;static str</code>.\nSame as <code>from_static_str_unchecked</code>, except it checks …\nSame as <code>from_str_unchecked</code>, except it takes a <code>&amp;&#39;static str</code>.\nSame as <code>from_str_unchecked</code>, except it takes a static …\nCreate a new <code>ObjectPath</code> from the given string.\nSame as <code>from_bytes_unchecked</code>, except it takes a string …\nSame as <code>from_str_unchecked</code>, except it takes an owned <code>String</code>…\nSame as <code>from_str_unchecked</code>, except it takes an owned <code>String</code>…\nGet the signature of this <code>Array</code>.\nGet the signature of this <code>Dict</code>.\nGet the signature of this <code>Structure</code>.\nGet the value at the given index.\nGet the value for the given key.\nGet all the elements.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>self</code> to a <code>Vec</code> containing all its fields.\nCreates an owned clone of <code>self</code>.\nCreates an owned clone of <code>self</code>.\nCreates an owned clone of <code>self</code>.\nif the object path is empty.\nif the signature is empty.\nGet the number of elements.\nthe object path’s length.\nthe signature’s length.\nThe number of complete types for the signature.\nThe native endian.\nCreate a new empty <code>Array</code>, given the signature of the …\nCreate a new empty <code>Array</code>, given the signature of the …\nCreate a new empty <code>Dict</code>, given the signature of the keys …\nCreate a new <code>StructureBuilder</code>.\nMake a <code>Value</code> for a given value.\nCreate a new <code>StructureSeed</code>\nThe none-equivalent value.\nAppend <code>field</code> to <code>self</code>.\nAppend <code>field</code> to <code>self</code>.\nRead a <code>f32</code>.\nRead a <code>f32</code> from a byte slice.\nRead a <code>f64</code>.\nRead a <code>f64</code> from a byte slice.\nRead a <code>i128</code>.\nRead a <code>i128</code> from a byte slice.\nRead a <code>i16</code>.\nRead a <code>i16</code> from a byte slice.\nRead a <code>i32</code>.\nRead a <code>i32</code> from a byte slice.\nRead a <code>i64</code>.\nRead a <code>i64</code> from a byte slice.\nRead a <code>i8</code>.\nRead a <code>i8</code> from a byte slice.\nRead a <code>u128</code>.\nRead a <code>u128</code> from a byte slice.\nRead a <code>u16</code>.\nRead a <code>u16</code> from a byte slice.\nRead a <code>u32</code>.\nRead a <code>u32</code> from a byte slice.\nRead a <code>u64</code>.\nRead a <code>u64</code> from a byte slice.\nRead a <code>u8</code>.\nRead a <code>u8</code> from a byte slice.\nCalculate the serialized size of <code>T</code>.\nGet the signature for the implementing type.\nGet the signature of this <code>Array</code>.\nGet the signature of this <code>Dict</code>.\nReturns the underlying <code>Signature</code>\nGet the signature of this <code>Structure</code>.\nReturns a slice of <code>self</code> for the provided range.\nSerialize <code>T</code> as a byte vector.\nSerialize <code>T</code> that has the given signature, to a new byte …\nCreates an owned clone of <code>self</code>.\nCreates an owned clone of <code>self</code>.\nCreates an owned clone of <code>self</code>.\nSerialize <code>T</code> to the given <code>writer</code>.\nSerialize <code>T</code> that has the given signature, to the given …\nTries to clone the <code>Array</code>.\nTry to clone the <code>Dict</code>.\nTry to clone <code>self</code>.\nAttempt to clone <code>self</code>.\nTry to clone the value.\nAttempt to clone the value.\nTry to create an owned version of <code>self</code>.\nTry to create an owned version of <code>self</code>.\nGet the signature of the enclosed value.\nWrite a <code>f32</code>.\nWrite a <code>f32</code> into a mutable byte slice.\nWrite a <code>f64</code>.\nWrite a <code>f64</code> into a mutable byte slice.\nWrite a <code>i128</code>.\nWrite a <code>i128</code> into a mutable byte slice.\nWrite a <code>i16</code>.\nWrite a <code>i16</code> into a mutable byte slice.\nWrite a <code>i32</code>.\nWrite a <code>i32</code> into a mutable byte slice.\nWrite a <code>i64</code>.\nWrite a <code>i64</code> into a mutable byte slice.\nWrite a <code>i8</code>.\nWrite a <code>i8</code> into a mutable byte slice.\nWrite a <code>u128</code>.\nWrite a <code>u128</code> into a mutable byte slice.\nWrite a <code>u16</code>.\nWrite a <code>u16</code> into a mutable byte slice.\nWrite a <code>u32</code>.\nWrite a <code>u32</code> into a mutable byte slice.\nWrite a <code>u64</code>.\nWrite a <code>u64</code> into a mutable byte slice.\nWrite a <code>u8</code>.\nWrite a <code>u8</code> into a mutable byte slice.\nThe encoding context to use with the serialization and …\nD-Bus format.\nRepresents serialized bytes in a specific format.\nThe encoding format.\nRepresents the return value of <code>crate::serialized_size</code> …\nRepresents the return value of <code>crate::to_writer</code> function.\nThe serialized bytes.\nThe encoding context.\nThe encoding context.\nThe encoding context.\nDeserialize <code>T</code> from <code>self</code>.\nDeserialize <code>T</code> from <code>self</code>, with the given dynamic signature.\nDeserialize <code>T</code> from <code>self</code> with the given signature.\nDeserialize <code>T</code> from <code>self</code>, using the given seed.\nThe <code>Endian</code> of this context.\nThe file descriptors that are references by the serialized …\nThe file descriptors that are references by the serialized …\nThe <code>Format</code> of this context.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume <code>self</code> and return the file descriptors.\nCreate a new <code>Data</code> instance.\nCreate a new <code>Size</code> instance.\nCreate a new <code>Written</code> instance.\nCreate a new encoding context.\nCreate a new <code>Data</code> instance containing borrowed file …\nConvenient wrapper for <code>new</code> to create a context for D-Bus …\nCreate a new <code>Data</code> instance containing owned file …\nThe number file descriptors that are references by the …\nThe byte position of the value to be encoded or decoded, …\nSet the file descriptors.\nSet the number of file descriptors.\nThe size of the serialized bytes.\nThe size of the serialized bytes.\nReturns a slice of <code>self</code> for the provided range.")