searchState.loadedDescShard("inotify_sys", 0, "inotify bindings for the Rust programming language\nEvent: File was accessed\nEvent: Any event occured\nEvent: Metadata was changed\nSet the <code>FD_CLOEXEC</code> flag for an inotify instance\nEvent: File was closed\nEvent: Non-writable file or directory was closed\nEvent: Writable file was closed\nEvent: File or directory was created in watched directory\nEvent: File or directory in watched directory was deleted\nEvent: Watched file or directory was deleted\nDon’t dereference path, if it is a symbolic link\nIgnore events for children, that have been unlinked from …\nIndicates that a file system watch was removed\nIndicates that the subject of an event is a directory\nUpdate existing watch mask, instead of replacing it\nEvent: File was modified\nEvent: File or directory within watched directory was moved\nEvent: File or directory was moved out of watched directory\nEvent: File or directory was moved into watched directory\nEvent: Watched file or directory was moved\nSet an inotify instance to non-blocking mode\nRemove watch after one event\nOnly watch path, if it is a directory\nEvent: File or directory was opened\nIndicates that the event queue has overflowed\nIndicates that file system containing a watched object has …\nA number that connects related events\nReturns the argument unchanged.\nAdds or updates an inotify watch\nDescribes a file system event\nCreates an inotify instance\nCreates an inotify instance\nRemoves an inotify watch\nCalls <code>U::from(self)</code>.\nThe length of <code>name</code>\nDescribes the type file system event\nIdentifies the watch for which this event occurs")