searchState.loadedDescShard("alsa_sys", 0, "No value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\n&lt; bottom center\n&lt; bottom left center\n&lt; bottom right center\n&lt; front center\n&lt; front center high\n&lt; front left\n&lt; front left center\n&lt; front left high\n&lt; front left wide\n&lt; front right\n&lt; front right center\n&lt; front right high\n&lt; front right wide\n&lt; LFE\n&lt; left LFE\n&lt; mono stream\n&lt; N/A, silent\n&lt; rear center\n&lt; rear left\n&lt; rear left center\n&lt; right LFE\n&lt; rear right\n&lt; rear right center\n&lt; side left\n&lt; side right\n&lt; top center\n&lt; top front center\n&lt; top front left\n&lt; top front left center\n&lt; top front right\n&lt; top front right center\n&lt; top rear center\n&lt; top rear left\n&lt; top rear right\n&lt; top side left\n&lt; top side right\n&lt; fixed channel position\n&lt; last entry\n&lt; unspecified channel position\n&lt; pair-wise swappable channel position\n&lt; freely swappable channel position\n&lt; unspecified\nCompound node.\nInteger number.\n64-bit integer number.\nPointer (runtime only, cannot be saved).\nReal number.\nCharacter string.\nCard level\nHardware dependent device\nSequencer\nMixer\nPCM\nRawMidi\nSequencer\nTimer\nBoolean contents\nBytes contents\nEnumerated contents\nIEC958 (S/PDIF) setting content\nInteger contents\n64-bit integer contents\n64-bit integer contents\nInvalid type\nElements related event\nElements related event\nExternal control plugin\nKernel level CTL\nINET client CTL (not yet implemented)\nShared memory client CTL\n&lt; Bluetooth audio\n&lt; EMU10K1 driver\n&lt; EmuX wavetable\n&lt; BridgeCo BeBoB based device\n&lt; TC DICE FireWire device\n&lt; Echo Audio Fireworks based device\n&lt; Oxford OXFW970/971 based device\n&lt; HD-audio\n&lt; ICS2115 driver\n&lt; last known hwdep interface\n&lt; Digigram miXart cards\n&lt; OPL2 raw driver\n&lt; OPL3 raw driver\n&lt; OPL4 raw driver\n&lt; Digigram PCXHR\n&lt; SB16CSP driver\n&lt; SB Extigy/Audigy2NX remote control\n&lt; Ensoniq SoundScape ISA card (MC68EC000)\n&lt; direct access to usb stream\n&lt; Tascam US122, US224 &amp; US428 usb\n&lt; Tascam US122, US224 &amp; US428 raw USB PCM\n&lt; Digigram VX cards\n&lt; YSS225 driver\nKernel level HwDep\nINET client HwDep (not yet implemented)\nShared memory client HwDep (not yet implemented)\nInput from a memory buffer.\nInput from a stdio stream.\nbasic abstraction - Master,PCM,CD,Aux,Record-Gain etc.\nno abstraction - try use all universal controls from driver\nFront center\nFront left\nFront right\nRear Center\nMono (Front left alias)\nRear Center\nRear left\nRear right\nSide Left\nSide Right\nUnknown\nWoofer\nOutput to a memory buffer.\nOutput to a stdio stream.\nsnd_pcm_readn/snd_pcm_writen access\nmmap access with complex placement\nmmap access with simple interleaved channels\nmmap access with simple non interleaved channels\nsnd_pcm_readi/snd_pcm_writei access\nsnd_pcm_readn/snd_pcm_writen access\nfirst definition for backwards compatibility only, maps to …\n&lt; DMA time, reported as per hw_ptr\n&lt; link time reported by sample or wallclock counter, reset …\n&lt; link time reported by sample or wallclock counter, not …\n&lt; link time estimated indirectly\n&lt; link time synchronized with system time\ndigitizer device\nstandard device\ndigitizer device\nsoftware modem device\nmultichannel device\nA-Law\nUnsigned 18bit Big Endian in 3bytes format\nUnsigned 18bit Big Endian in 3bytes format\nUnsigned 18bit Big Endian in 3bytes format\nUnsigned 18bit Big Endian in 3bytes format\nUnsigned 18bit Big Endian in 3bytes format\nFloat 32 bit CPU endian\nFloat 64 bit CPU endian\nFloat 64 bit Big Endian, Range -1.0 to 1.0\nFloat 64 bit Little Endian, Range -1.0 to 1.0\nFloat 32 bit Big Endian, Range -1.0 to 1.0\nFloat 32 bit Little Endian, Range -1.0 to 1.0\nUnsigned 18bit Big Endian in 3bytes format\nUnsigned 18bit Big Endian in 3bytes format\nUnsigned 18bit Big Endian in 3bytes format\nUnsigned 18bit Big Endian in 3bytes format\nGSM\nIEC-958 CPU Endian\nIEC-958 Big Endian\nIEC-958 Little Endian\nIma-ADPCM\nUnsigned 18bit Big Endian in 3bytes format\nMPEG\nMu-Law\nSigned 16 bit CPU endian\nSigned 16 bit Big Endian\nSigned 16 bit Little Endian\nSigned 18bit Big Endian in 3bytes format\nSigned 18bit Little Endian in 3bytes format\nSigned 20bit in 4bytes format, LSB justified, CPU Endian\nSigned 20bit Big Endian in 3bytes format\nSigned 20bit Little Endian in 3bytes format\nSigned 20bit Big Endian in 4bytes format, LSB justified\nSigned 20bit Little Endian in 4bytes format, LSB justified\nSigned 24 bit CPU endian\nSigned 24bit Big Endian in 3bytes format\nSigned 24bit Little Endian in 3bytes format\nSigned 24 bit Big Endian using low three bytes in 32-bit …\nSigned 24 bit Little Endian using low three bytes in …\nSigned 32 bit CPU endian\nSigned 32 bit Big Endian\nSigned 32 bit Little Endian\nSigned 8 bit\nSpecial\nUnsigned 16 bit CPU endian\nUnsigned 16 bit Big Endian\nUnsigned 16 bit Little Endian\nUnsigned 18bit Big Endian in 3bytes format\nUnsigned 18bit Little Endian in 3bytes format\nUnsigned 20bit in 4bytes format, LSB justified, CPU Endian\nUnsigned 20bit Big Endian in 3bytes format\nUnsigned 20bit Little Endian in 3bytes format\nUnsigned 20bit Big Endian in 4bytes format, LSB justified\nUnsigned 20bit Little Endian in 4bytes format, LSB …\nUnsigned 24 bit CPU endian\nUnsigned 24bit Big Endian in 3bytes format\nUnsigned 24bit Little Endian in 3bytes format\nUnsigned 24 bit Big Endian using low three bytes in 32-bit …\nUnsigned 24 bit Little Endian using low three bytes in …\nUnsigned 32 bit CPU endian\nUnsigned 32 bit Big Endian\nUnsigned 32 bit Little Endian\nUnsigned 8 bit\nUnknown\nAutomatic start on data read/write\nExplicit start\nExplicit start\nHardware is disconnected\nDraining: running (playback) or stopped (capture)\nHardware is disconnected\nOpen\nPaused\nReady to start\nPrivate - used internally in the library - do not use\nRunning\nSetup installed\nHardware is suspended\nStopped: underrun (playback) or overrun (capture) detected\nCapture stream\nCapture stream\nPlayback stream\nsubdevices are mixed together\nmultichannel subdevices are mixed together\nmultichannel subdevices are mixed together\nStandard\nStandard\nUpdate timestamp at every hardware position update\nEquivalent with #SND_PCM_TSTAMP_ENABLE, just for …\nEquivalent with #SND_PCM_TSTAMP_ENABLE, just for …\nNo timestamp\n&lt; gettimeofday equivalent\n&lt; posix_clock_monotonic equivalent\n&lt; monotonic_raw (no NTP)\nIMA-ADPCM format conversion PCM\nA-Law format conversion PCM\nCopying plugin\nDirect Mixing plugin\nAttenuated dynamic route PCM (not yet implemented)\nDirect Sharing plugin\nDirect Snooping plugin\nExternal filter plugin\nFile writing plugin\nHooked PCM\nKernel level PCM\nIEC958 subframe plugin\nINET client PCM (not yet implemented)\nExternal I/O plugin\nJack Audio Connection Kit plugin\nLADSPA integration plugin\nMmap-emulation plugin\nLoopback server plugin (not yet implemented)\nLinear format conversion PCM\nLinear Integer &lt;-&gt; Linear Float format conversion PCM\nMeter plugin\nMixing PCM\nMmap-emulation plugin\nMu-Law format conversion PCM\nOne or more linked PCM with exclusive access to selected …\nNull endpoint PCM\nFormat adjusted PCM\nRate conversion PCM\nAttenuated static route PCM\nSharing PCM\nShared memory client PCM\nSoft volume plugin\nStop on xrun detection\nXrun detection disabled\nStop on xrun detection\nInput stream\nInput stream\nOutput stream\nKernel level RawMidi\nINET client RawMidi (not yet implemented)\nShared memory client RawMidi (not yet implemented)\nVirtual (sequencer) RawMidi\nerror event;  event data type = #snd_seq_ev_ext_t\nchannel pressure; event data type = #snd_seq_ev_ctrl_t\nClient status/info has changed; event data type = …\nClient has left the system; event data type = …\nNew client has connected; event data type = #snd_seq_addr_t\nMIDI Real Time Clock message; event data type = …\nMIDI Real Time Continue message; event data type = …\n14 bit controller value; event data type = …\ncontroller; event data type = #snd_seq_ev_ctrl_t\nEcho-back event; event data type = any type\nkey pressure change (aftertouch); event data type = …\nSMF Key Signature event; event data type = …\nNOP; ignored in any case\n14 bit NRPN;  event data type = #snd_seq_ev_ctrl_t\nnote on and off with duration; event data type = …\nnote off; event data type = #snd_seq_ev_note_t\nnote on; event data type = #snd_seq_ev_note_t\nOSS emulation raw event; event data type = any type\nprogram change; event data type = #snd_seq_ev_ctrl_t\npitchwheel; event data type = #snd_seq_ev_ctrl_t; data is …\nPort status/info has changed; event data type = …\nPort was deleted from system; event data type = …\nNew port was created; event data type = #snd_seq_addr_t\nPorts connected; event data type = #snd_seq_connect_t\nPorts disconnected; event data type = #snd_seq_connect_t\nmidi time code quarter frame; event data type = …\nQueue timer skew; event data type = …\n14 bit RPN; event data type = #snd_seq_ev_ctrl_t\nReset to power-on state; event data type = none\nreturned result status; event data type = #snd_seq_result_t\nActive sensing event; event data type = none\nSet tick queue position; event data type = …\nSet real-time queue position; event data type = …\nSPP with LSB and MSB values; event data type = …\nSong Select with song ID number; event data type = …\nMIDI Real Time Start message; event data type = …\nMIDI Real Time Stop message; event data type = …\nSync position changed; event data type = …\nsystem exclusive data (variable length);  event data type …\nsystem status; event data type = #snd_seq_result_t\n(SMF) Tempo event; event data type = …\nMIDI Real Time Tick message; event data type = …\nSMF Time Signature event; event data type = …\nTune request; event data type = none\nuser-defined event; event data type = any (fixed size)\nuser-defined event; event data type = any (fixed size)\nuser-defined event; event data type = any (fixed size)\nuser-defined event; event data type = any (fixed size)\nuser-defined event; event data type = any (fixed size)\nuser-defined event; event data type = any (fixed size)\nuser-defined event; event data type = any (fixed size)\nuser-defined event; event data type = any (fixed size)\nuser-defined event; event data type = any (fixed size)\nuser-defined event; event data type = any (fixed size)\nreserved for user apps;  event data type = …\nreserved for user apps; event data type = #snd_seq_ev_ext_t\nreserved for user apps; event data type = #snd_seq_ev_ext_t\nreserved for user apps; event data type = #snd_seq_ev_ext_t\nreserved for user apps; event data type = #snd_seq_ev_ext_t\n&lt; kernel client\n&lt; query read subscriptions\n&lt; query write subscriptions\n&lt; hardware\n&lt; network (NYI)\n&lt; shared memory (NYI)\n&lt; user client\nliberal duplex - the buffer and period sizes might not …\npedantic duplex - the buffer and period sizes MUST match\nmedium latency - software phones etc. (estimated latency …\nrealtime latency - realtime applications (effect …\nstandard latency - for standard playback or capture …\ndriver / library will ignore all xruns, the stream runs …\ndriver / library stops the stream when an xrun occurs\n&lt; card timer\n&lt; global timer\n&lt; last timer\n&lt; invalid\n&lt; PCM timer\n&lt; slave timer\n&lt; for internal use\n&lt; last slave timer\n&lt; none\n&lt; OSS sequencer timer\n&lt; sequencer timer\nKernel level HwDep\nINET client timer (not yet implemented)\nShared memory client timer (not yet implemented)\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\n\\brief Configuration node type.\nCTL related interface\nCTL element type\nEvent class\nCTL type\nHwDep interface\nHwDep handle type\nInput type.\nMixer element type\nMixer simple element channel identifier\nOutput type.\nPCM access type\nPCM area specification\nPCM class\nPCM sample format\ntype of pcm hook\n#SND_PCM_TYPE_METER scope functions\nPCM start mode\nPCM state\nPCM stream (direction)\nPCM subclass\nPCM sample subformat\nPCM synchronization ID\nPCM timestamp mode\nPCM type\nPCM xrun mode\nRawMidi stream (direction)\nRawMidi type\nsequencer handle type\nSimple PCM duplex type\nSimple PCM latency type\nSimple PCM xrun type\ntimer master class\ntimer read event identification\ntimer read structure\ntimer slave class\ntimer tstamp + event read structure\ntimer handle type\nv1: abstract layer selection\nbase address of channel samples\nbase address of channel samples\n&lt; address\n&lt; skew base\n&lt; skew base\nv1: capture PCM connected to mixer device (NULL == none)\n&lt; channel number\n&lt; channel number\n&lt; channel number\n&lt; channel number\n&lt; number of channels\n&lt; number of channels\n&lt; Client id\n&lt; Client id\n\\brief PCM is closing \\param scope scope handle\n\\brief PCM is closing \\param scope scope handle\n&lt; Comments\n&lt; Comments\n&lt; connect information\n&lt; MIDI control information\n&lt; 8 bit value\n&lt; 32 bit value\n&lt; 8 bit value\n&lt; 32 bit value\n&lt; any data\n&lt; any data\n&lt; event data…\n&lt; event data…\n&lt; destination address\n&lt; destination address\n&lt; destination address\n&lt; destination address\nv1: device name (must be NULL when playback_pcm or …\n&lt; AES/IEC958 subframe bits\n&lt; AES/IEC958 subframe bits\n\\brief Disable \\param scope scope handle\n\\brief Disable \\param scope scope handle\n&lt; duration until note-off; only for #SND_SEQ_EVENT_NOTE\n&lt; duration until note-off; only for #SND_SEQ_EVENT_NOTE\n\\brief Enable and prepare it using current params \\param …\n\\brief Enable and prepare it using current params \\param …\n&lt; Timer event\n&lt; Timer event\n&lt; processed event type\n&lt; processed event type\n&lt; external data\noffset to first sample in bits\noffset to first sample in bits\n&lt; event flags\n&lt; event flags\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n8-bit ID\n8-bit ID\n16-bit ID\n16-bit ID\n32-bit ID\n32-bit ID\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n&lt; length of data\n&lt; length of data\n&lt; available channel map\n&lt; available channel map\n&lt; Device name string\n&lt; Device name string\n&lt; Next pointer\n&lt; Next pointer\n&lt; note\n&lt; note\n&lt; note information\n&lt; note-off velocity; only for #SND_SEQ_EVENT_NOTE\n&lt; note-off velocity; only for #SND_SEQ_EVENT_NOTE\n&lt; nothing\n&lt; nothing\n&lt; control parameter\n&lt; data value union\n&lt; control parameter\n&lt; data value union\nv1: playback PCM connected to mixer device (NULL == none)\n&lt; Port id\n&lt; Port id\n&lt; channel position array\n&lt; channel position array\n&lt; sync position\n&lt; pointer to data (note: can be 64-bit)\n&lt; pointer to data (note: can be 64-bit)\n&lt; affected queue\n&lt; schedule queue\n&lt; affected queue\n&lt; schedule queue\n&lt; queue control\n&lt; raw32 data\n&lt; raw8 data\n\\brief Reset status \\param scope scope handle\n\\brief Reset status \\param scope scope handle\n&lt; tick resolution in nanoseconds\n&lt; tick resolution in nanoseconds\n&lt; status\n&lt; status\n&lt; operation result code\n&lt; sender address\n&lt; sender address\n&lt; queue skew\nIEC958 structure\nIEC958 structure\n\\defgroup Global Global defines and functions Global …\n\\brief Async notification callback.\n\\brief Internal structure for an async notification client …\n\\brief Type for a configuration compound iterator.\n\\brief Internal structure for a configuration node object.\n\\brief Configuration node type.\n\\brief Internal structure for a configuration private …\nCTL card info container\nCTL element identifier container\nCTL related interface\nCTL element info container\nCTL element list container\nCTL element type\nCTL element value container\nCTL event container\nEvent class\nCTL handle\nCTL type\nDevice-name list element (definition)\nDevice-name list element\n\\brief HCTL callback function \\param hctl HCTL handle …\n\\brief Compare function for sorting HCTL elements \\param …\n\\brief HCTL element callback function \\param elem HCTL …\nHCTL element handle\nHCTL handle\nHi-res timestamp\nHwDep DSP image container\nHwDep DSP status container\nHwDep interface\nHwDep information container\nHwDep handle\nHwDep handle type\n\\brief Internal structure for an input object.\nInput type.\n\\brief Error handler callback. \\param file Source file …\nLocal error handler function type\ncontainer for sequencer midi event parsers\n\\brief Mixer callback function \\param mixer Mixer handle …\nMixer elements class handle\n\\brief Compare function for sorting mixer elements \\param …\n\\brief Mixer element callback function \\param elem Mixer …\nMixer element handle\nMixer element type\n\\brief Event callback for the mixer class \\param class_ …\nMixer simple element channel identifier\nMixer simple element identifier\nMixer simple element - register options\nMixer simple element - register options - abstraction level\nMixer handle\n\\brief Internal structure for an output object.\nOutput type.\n\\defgroup PCM_Access Access Mask Functions \\ingroup PCM …\nPCM access types mask\nPCM access type\nPCM area specification\nthe channel map header\nchannel positions\nthe header of array items returned from …\nthe header of array items returned from …\nthe channel map header\nchannel map list type\nPCM class\n\\defgroup PCM_Dump Debug Functions \\ingroup PCM See the …\n\\defgroup PCM_Format Format Mask Functions \\ingroup PCM …\nPCM formats mask\n\\defgroup PCM_Helpers Helper Functions \\ingroup PCM See …\nPCM sample format\nPCM hook callback function\nPCM hook container\ntype of pcm hook\n\\defgroup PCM_HW_Params Hardware Parameters \\ingroup PCM …\nPCM hardware configuration space container\n\\defgroup PCM_Info Stream Information \\ingroup PCM See the …\nPCM generic info container\n\\defgroup PCM_Direct Direct Access (MMAP) Functions …\n#SND_PCM_TYPE_METER scope functions\n#SND_PCM_TYPE_METER scope handle\nSigned frames quantity\n\\defgroup PCM_Deprecated Deprecated Functions \\ingroup PCM …\nPCM start mode\nPCM state\n\\defgroup PCM_Status Status Functions \\ingroup PCM See the …\nPCM status container\nPCM stream (direction)\nPCM subclass\n\\defgroup PCM_SubFormat Subformat Mask Functions \\ingroup …\nPCM subformats mask\nPCM sample subformat\n\\defgroup PCM_SW_Params Software Parameters \\ingroup PCM …\nPCM software configuration container\nPCM synchronization ID\nPCM handle\nPCM timestamp mode\n\\defgroup PCM_Description Description Functions \\ingroup …\nPCM type\nUnsigned frames quantity\nPCM xrun mode\nRawMidi information container\nRawMidi settings container\nRawMidi status container\nRawMidi stream (direction)\nRawMidi handle\nRawMidi type\n\\defgroup SControl Setup Control Interface \\ingroup Control\nSCTL type\nSequencer event address\nSequencer event address\nclient information container\nclient pool information container\nclient types\nclient types\nConnection (subscription) between ports\nConnection (subscription) between ports\nController event\nController event\nexternal stored data\nexternal stored data\nNote event\nNote event\nqueue timer control\nqueue timer control\ngeneric set of integers (3x32 bit)\ngeneric set of integers (3x32 bit)\ngeneric set of bytes (12x8 bit)\ngeneric set of bytes (12x8 bit)\nSequencer event\nSequencer event\nSequencer event type\nSequencer event data type\n\\defgroup SeqEvent Sequencer Event API Sequencer Event API …\nport information container\nport subscription container\ntype of query subscription\nsubscription query container\nqueue information container\nQueue skew values\nQueue skew values\nqueue status container\nqueue tempo container\nqueue timer information container\nsequencer timer sources\nReal-time data record\nReal-time data record\nevent removal conditionals\nResult events\nResult events\n\\defgroup SeqMisc Sequencer Miscellaneous Sequencer …\nsystem information container\nSequencer handle\n(MIDI) Tick-time data record\nunioned time stamp\nunioned time stamp\nsequencer handle type\nSimple PCM duplex type\nSimple PCM latency type\nSimple PCM xrun type\ntimer master class\ntimer read event identification\ntimer global info structure\ntimer global params structure\ntimer global status structure\ntimer identification structure\ntimer info structure\ntimer params structure\ntimer query handle\ntimer read structure\ntimer slave class\ntimer status structure\ntimer handle\ntimer tstamp + event read structure\ntimer handle type\nTimestamp\n&lt; source address\n&lt; source address\n\\brief PCM has been started \\param scope scope handle\n\\brief PCM has been started \\param scope scope handle\n&lt; AES/IEC958 channel status bits\n&lt; AES/IEC958 channel status bits\nsamples distance in bits\nsamples distance in bits\n\\brief PCM has been stopped \\param scope scope handle\n\\brief PCM has been stopped \\param scope scope handle\n&lt; AES/IEC958 subcode bits\n&lt; AES/IEC958 subcode bits\n&lt; tag\n&lt; tag\n&lt; tick-time\n&lt; tick-time\n&lt; count of happened ticks\n&lt; count of happened ticks\n&lt; real-time\n&lt; schedule time\n&lt; real-time\n&lt; time\n&lt; schedule time\n&lt; timestamp\n&lt; Time stamp of each event\n&lt; Time stamp of each event\n&lt; nanoseconds\n&lt; nanoseconds\n&lt; seconds\n&lt; seconds\n&lt; channel map type\n&lt; event type\n&lt; channel map type\n&lt; event type\n&lt; reserved\n&lt; reserved\n&lt; reserved\n&lt; reserved\n\\brief New frames are present \\param scope scope handle\n\\brief New frames are present \\param scope scope handle\n&lt; Event value\n&lt; Event value\n&lt; control value\n&lt; skew value\n&lt; control value\n&lt; skew value\n&lt; affected value (e.g. tempo)\n&lt; velocity\n&lt; velocity\nstructure version")