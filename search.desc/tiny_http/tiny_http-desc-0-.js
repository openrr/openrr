searchState.loadedDescShard("tiny_http", 0, "Simple usage\n<code>CONNECT</code>\n<code>DELETE</code>\n<code>GET</code>\nHTTP version (usually 1.0 or 1.1).\n<code>HEAD</code>\nRepresents a HTTP header.\nField of a header (eg. <code>Content-Type</code>, <code>Content-Length</code>, etc.)\nUnified listen socket address. Either a <code>SocketAddr</code> or …\nUnified listener. Either a <code>TcpListener</code> or …\nHTTP request methods\nRequest methods not standardized by the IETF\n<code>OPTIONS</code>\n<code>PATCH</code>\n<code>POST</code>\n<code>PUT</code>\nDummy trait that regroups the <code>Read</code> and <code>Write</code> traits.\nRepresents an HTTP request made by a client.\nObject representing an HTTP response whose purpose is to …\nA <code>Response</code> without a template parameter.\nThe main class of this library.\nRepresents the parameters required to create a server.\nConfiguration of the server for SSL.\nStatus code of a request or response.\nA simpler version of <code>Request</code> that is useful for testing. …\n<code>TRACE</code>\nAdds a header to the list. Does all the checks.\nThe addresses to try to listen to.\nAllows to read the body of the request.\nReturns the length of the body in bytes.\nTurns this response into a <code>Response&lt;Box&lt;Read + Send&gt;&gt;</code>.\nContains the public certificate to send to clients.\nThe current <code>Content-Length</code> threshold for switching over to …\nRetrieves the current value of the <code>Response</code> data length\nReturns the default reason phrase for this status code. …\nBuilds an empty <code>Response</code> with the given status code.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBuilds a <code>Header</code> from two <code>Vec&lt;u8&gt;</code>s or two <code>&amp;[u8]</code>s.\nBuilds a new <code>Response</code> from a <code>File</code>.\nBuilds a new server using the specified TCP listener.\nReturns a list of all headers sent by the client.\nRetrieves the current list of <code>Response</code> headers\nShortcut for a simple server on a specific address.\nShortcut for a UNIX socket server at a specific path\nReturns the HTTP version of the request.\nReturns an iterator for all the incoming requests.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the response into the underlying <code>Read</code> type.\nTurns the <code>Request</code> into a writer.\nReturns the method requested by the client (eg. <code>GET</code>, <code>POST</code>, …\nCreates a new Response object.\nBuilds a new server that listens on the specified address.\nDEPRECATED. Use <code>empty</code> instead.\nReturns the number of clients currently connected to the …\nContains the ultra-secret private key used to decode …\nPrints the HTTP response to a writer.\nBlocks until an HTTP request has been submitted and …\nSame as <code>recv()</code> but doesn’t block longer than timeout\nReturns the address of the client that sent this request.\nSends a response to this request.\nReturns true if the request was made through HTTPS.\nReturns the address the server is listening to.\nIf <code>Some</code>, then the server will use SSL to encode the …\nRetrieves the current value of the <code>Response</code> status code\nGets the Unix socket address.\nSame as <code>recv()</code> but doesn’t block.\nUnblock thread stuck in recv() or incoming_requests(). If …\nSends a response with a <code>Connection: upgrade</code> header, then …\nReturns the resource requested by the client.\nSet a threshold for <code>Content-Length</code> where we chose chunked …\nReturns the same request, but with different data.\nReturns the same request, but with an additional header.\nReturns the same request, but with a different status code.")