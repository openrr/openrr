searchState.loadedDescShard("widestring", 0, "A wide string library for converting to and from wide …\nAlias for <code>u16</code> or <code>u32</code> depending on platform. Intended to …\nCreates an iterator over the UTF-16 encoded code points in …\nCreates a lossy decoder iterator over the possibly …\nCreates a decoder iterator over UTF-32 encoded code points …\nCreates a lossy decoder iterator over the possibly …\nCreates an iterator that encodes an iterator over <code>char</code>s …\nCreates an iterator that encodes an iterator over <code>char</code>s …\nCreates an iterator that encodes an iterator over <code>char</code>s …\nErrors returned by functions in this crate.\nIncludes a UTF-16 encoded file as a <code>Utf16Str</code>.\nIterators for encoding and decoding slices of string data.\nConverts a string literal into a <code>const</code> UTF-16 string slice …\nConverts a string literal into a <code>const</code> UTF-16 string slice …\nConverts a string literal into a <code>const</code> UTF-32 string slice …\nConverts a string literal into a <code>const</code> UTF-32 string slice …\nC-style wide string slices.\nC-style owned, growable wide strings.\nWide string slices with undefined encoding.\nOwned, growable wide strings with undefined encoding.\nConverts a string literal into a <code>const</code> UTF-16 string slice …\nConverts a string literal into a <code>const</code> UTF-32 string slice …\nUTF string slices.\nOwned, growable UTF strings.\nAlias for <code>u16cstr</code> or <code>u32cstr</code> macros depending on platform. …\nAlias for <code>u16str</code> or <code>u32str</code> macros depending on platform. …\nAlias for <code>utf16str</code> or <code>utf32str</code> macros depending on …\nAn error returned to indicate that an invalid nul value …\nAn interior nul value was found.\nAn error that can be returned when decoding UTF-16 code …\nAn error that can be returned when decoding UTF-32 code …\nAn error returned from to indicate that a terminating nul …\nA terminating nul value was missing.\nAn error returned to indicate a problem with nul values …\nErrors which can occur when attempting to interpret a …\nErrors which can occur when attempting to interpret a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the index in the given string at which the invalid …\nReturns the index in the given string at which the invalid …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this error, returning the underlying vector of …\nConsumes this error, returning the underlying vector of …\nConsumes this error, returning the underlying vector of …\nConsumes this error, returning the underlying vector of …\nReturns the invalid code point value which caused the …\nReturns the index of the invalid nul value in the slice.\nReturns the unpaired surrogate which caused this error.\nAn iterator that decodes UTF-16 encoded code points from …\nAn iterator that lossily decodes possibly ill-formed …\nAn iterator that decodes UTF-32 encoded code points from …\nAn iterator that lossily decodes possibly ill-formed …\nAn iterator that encodes an iterator of <code>char</code>s into UTF-16 …\nAn iterator that encodes an iterator of <code>char</code>s into UTF-32 …\nAn iterator that encodes an iterator of <code>char</code>s into UTF-8 …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA lossy iterator over the <code>char</code>s of a string slice, and …\nA lossy iterator over the <code>char</code>s of a string slice, and …\nAn iterator over the decoded <code>char</code>s of a string slice, and …\nAn iterator over the decoded <code>char</code>s of a string slice, and …\nA lossy iterator over UTF-16 decoded <code>char</code>s of a string …\nA lossy iterator over UTF-32 decoded <code>char</code>s of a string …\nAn iterator over UTF-16 decoded <code>char</code>s of a string slice.\nAn iterator over UTF-32 decoded <code>char</code>s of a string slice.\nHelper struct for printing wide C string values with …\nThe nul terminator character value.\nThe nul terminator character value.\nC-style 16-bit wide string slice for <code>U16CString</code>.\nC-style 32-bit wide string slice for <code>U32CString</code>.\nAlias for <code>U16CStr</code> or <code>U32CStr</code> depending on platform. …\nReturns a mutable raw pointer to the string.\nReturns a mutable raw pointer to the string.\nReturns the two unsafe mutable pointers spanning the …\nReturns the two unsafe mutable pointers spanning the …\nConverts to a mutable slice of the underlying elements.\nConverts to a mutable slice of the underlying elements.\nReturns a mutable wide string slice to this wide C string …\nReturns a mutable wide string slice to this wide C string …\nReturns a raw pointer to the string.\nReturns a raw pointer to the string.\nReturns the two raw pointers spanning the string slice.\nReturns the two raw pointers spanning the string slice.\nConverts to a slice of the underlying elements.\nConverts to a slice of the underlying elements.\nConverts to a slice of the underlying elements, including …\nConverts to a slice of the underlying elements, including …\nReturns a wide string slice to this wide C string slice.\nReturns a wide string slice to this wide C string slice.\nReturns a wide string slice to this wide C string slice.\nReturns a wide string slice to this wide C string slice.\nReturns an iterator over the chars of a string slice, and …\nReturns an iterator over the chars of a string slice, and …\nReturns a lossy iterator over the chars of a string slice, …\nReturns a lossy iterator over the chars of a string slice, …\nReturns an iterator over the <code>char</code>s of a string slice.\nReturns an iterator over the <code>char</code>s of a string slice.\nReturns a lossy iterator over the <code>char</code>s of a string slice.\nReturns a lossy iterator over the <code>char</code>s of a string slice.\nReturns an object that implements <code>Display</code> for printing …\nReturns an object that implements <code>Display</code> for printing …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a string reference from a <code>char</code> pointer and a …\nConstructs a mutable string reference from a mutable <code>char</code> …\nConstructs a string reference from a <code>char</code> nul-terminated …\nConstructs a mutable string reference from a mutable <code>char</code> …\nConstructs a string reference from a <code>char</code> pointer and a …\nConstructs a mutable string reference from a mutable <code>char</code> …\nConstructs a string reference from a <code>char</code> pointer and a …\nConstructs a mutable string reference from a mutable <code>char</code> …\nConstructs a string reference from a <code>char</code> slice with a …\nConstructs a mutable string reference from a mutable <code>char</code> …\nConstructs a string reference from a slice of <code>char</code> values, …\nConstructs a mutable string reference from a mutable slice …\nConstructs a string reference from a <code>char</code> slice without …\nConstructs a mutable string reference from a mutable <code>char</code> …\nConstructs a wide C string slice from a pointer and a …\nConstructs a wide C string slice from a pointer and a …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a wide C string slice from a nul-terminated …\nConstructs a wide C string slice from a nul-terminated …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a wide C string slice from a pointer and a …\nConstructs a wide C string slice from a pointer and a …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a wide C string slice from a pointer and a …\nConstructs a wide C string slice from a pointer and a …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a wide C string slice from a slice of values …\nConstructs a wide C string slice from a slice of values …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a wide C string slice from a slice of values, …\nConstructs a wide C string slice from a slice of values, …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a wide C string slice from a slice of values …\nConstructs a wide C string slice from a slice of values …\nConstructs a mutable wide C string slice from a mutable …\nConstructs a mutable wide C string slice from a mutable …\nReturns a subslice of the string.\nReturns a subslice of the string.\nReturns a mutable subslice of the string.\nReturns a mutable subslice of the string.\nReturns an unchecked subslice of the string.\nReturns an unchecked subslice of the string.\nReturns aa mutable, unchecked subslice of the string.\nReturns aa mutable, unchecked subslice of the string.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a boxed wide C string slice into an wide C string …\nConverts a boxed wide C string slice into an owned wide C …\nReturns whether this string contains no data (i.e. is only …\nReturns whether this string contains no data (i.e. is only …\nReturns the length of the string as number of elements (<strong>not</strong>…\nReturns the length of the string as number of elements (<strong>not</strong>…\nCoerces a value into a wide C string slice.\nCoerces a value into a wide C string slice.\nReturns the position of the next character, or the length …\nReturns the position of the next character, or the length …\nReturns the position of the next character, or the length …\nReturns the position of the next character, or the length …\nCreates a new owned string by repeating this string <code>n</code> …\nCreates a new owned string by repeating this string <code>n</code> …\nDivide one string slice into two at an index.\nDivide one string slice into two at an index.\nDivide one mutable string slice into two at an index.\nDivide one mutable string slice into two at an index.\nCopys a string to an owned <code>OsString</code>.\nDecodes a string reference to an owned <code>OsString</code>.\nCopies the string to a <code>String</code> if it contains valid UTF-16 …\nDecodes the string reference to a <code>String</code> if it contains …\nDecodes the string reference to a <code>String</code> even if it is …\nDecodes the string reference to a <code>String</code> even if it is …\nCopies the string reference to a new owned wide C string.\nCopies the string reference to a new owned wide C string.\nCopies the string reference to a new owned wide string.\nCopies the string reference to a new owned wide string.\nThe nul terminator character value.\nThe nul terminator character value.\nAn owned, mutable C-style 16-bit wide string for FFI that …\nAn owned, mutable C-style 32-bit wide string for FFI that …\nAlias for <code>U16String</code> or <code>U32String</code> depending on platform. …\nConverts to a mutable wide C string slice.\nConverts to a mutable wide C string slice.\nConverts to a wide C string slice.\nConverts to a wide C string slice.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a wide C string copied from a <code>char</code> pointer and …\nConstructs a new wide C string copied from a …\nConstructs a wide C string copied from a <code>char</code> pointer and …\nConstructs a wide C string copied from a <code>char</code> pointer and …\nConstructs a <code>U32CString</code> from a container of character …\nConstructs a <code>U32CString</code> from a container of character …\nConstructs a <code>U32CString</code> from character data without …\nConstructs a <code>U16CString</code> copy from an <code>OsStr</code>.\nConstructs a <code>U32CString</code> copy from an <code>OsStr</code>, checking for …\nConstructs a <code>U16CString</code> copy from an <code>OsStr</code>, truncating at …\nConstructs a <code>U32CString</code> copy from an <code>OsStr</code>, truncating at …\nConstructs a <code>U16CString</code> copy from an <code>OsStr</code>, without …\nConstructs a <code>U32CString</code> copy from an <code>OsStr</code>, without …\nConstructs a wide C string copied from a pointer and a …\nConstructs a wide C string copied from a pointer and a …\nConstructs a new wide C string copied from a …\nConstructs a new wide C string copied from a …\nConstructs a wide C string copied from a pointer and a …\nConstructs a wide C string copied from a pointer and a …\nConstructs a wide C string copied from a pointer and a …\nConstructs a wide C string copied from a pointer and a …\nRetakes ownership of a wide C string that was transferred …\nRetakes ownership of a wide C string that was transferred …\nConstructs a <code>U16CString</code> copy from a <code>str</code>, encoding it as …\nConstructs a <code>U32CString</code> copy from a <code>str</code>, encoding it as …\nConstructs a <code>U16CString</code> copy from a <code>str</code>, encoding it as …\nConstructs a <code>U32CString</code> copy from a <code>str</code>, encoding it as …\nConstructs a <code>U16CString</code> copy from a <code>str</code>, encoding it as …\nConstructs a <code>U32CString</code> copy from a <code>str</code>, encoding it as …\nConstructs a wide C string from anything that can be …\nConstructs a wide C string from anything that can be …\nConstructs a wide C string from anything that can be …\nConstructs a wide C string from anything that can be …\nConstructs a wide C string from anything that can be …\nConstructs a wide C string from anything that can be …\nConstructs a wide C string from a container of wide …\nConstructs a wide C string from a container of wide …\nConstructs a wide C string from a container of wide …\nConstructs a wide C string from a container of wide …\nConstructs a wide C string from a vector without checking …\nConstructs a wide C string from a vector without checking …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this wide C string into a boxed wide C string …\nConverts this wide C string into a boxed wide C string …\nTransfers ownership of the string to a C caller.\nTransfers ownership of the string to a C caller.\nConverts this string into a wide string without a nul …\nConverts this string into a wide string without a nul …\nConverts this string into a wide string with a nul …\nConverts this string into a wide string with a nul …\nConverts the string into a <code>Vec</code> without a nul terminator, …\nConverts the string into a <code>Vec</code> without a nul terminator, …\nConverts the string into a <code>Vec</code>, consuming the string in …\nConverts the string into a <code>Vec</code>, consuming the string in …\nConstructs a new empty wide C string.\nConstructs a new empty wide C string.\nA lossy iterator over the <code>char</code>s of a string slice, and …\nA lossy iterator over the <code>char</code>s of a string slice, and …\nAn iterator over the decoded <code>char</code>s of a string slice, and …\nAn iterator over the decoded <code>char</code>s of a string slice, and …\nA lossy iterator over UTF-16 decoded <code>char</code>s of a string …\nA lossy iterator over UTF-32 decoded <code>char</code>s of a string …\nAn iterator over UTF-16 decoded <code>char</code>s of a string slice.\nAn iterator over UTF-32 decoded <code>char</code>s of a string slice.\nHelper struct for printing wide string values with <code>format!</code> …\n16-bit wide string slice with undefined encoding.\n32-bit wide string slice with undefined encoding.\nAlias for <code>U16Str</code> or <code>U32Str</code> depending on platform. Intended …\nReturns an unsafe mutable raw pointer to the string.\nReturns an unsafe mutable raw pointer to the string.\nReturns the two unsafe mutable pointers spanning the …\nReturns the two unsafe mutable pointers spanning the …\nConverts to a mutable slice of the underlying elements of …\nConverts to a mutable slice of the underlying elements of …\nReturns a raw pointer to the string.\nReturns a raw pointer to the string.\nReturns the two raw pointers spanning the string slice.\nReturns the two raw pointers spanning the string slice.\nConverts to a slice of the underlying elements of the …\nConverts to a slice of the underlying elements of the …\nReturns an iterator over the chars of a string slice, and …\nReturns an iterator over the chars of a string slice, and …\nReturns a lossy iterator over the chars of a string slice, …\nReturns a lossy iterator over the chars of a string slice, …\nReturns an iterator over the <code>char</code>s of a string slice.\nReturns an iterator over the <code>char</code>s of a string slice.\nReturns a lossy iterator over the <code>char</code>s of a string slice.\nReturns a lossy iterator over the <code>char</code>s of a string slice.\nReturns an object that implements <code>Display</code> for printing …\nReturns an object that implements <code>Display</code> for printing …\nReturns the argument unchanged.\nConstructs a <code>U32Str</code> from a <code>char</code> pointer and a length.\nConstructs a mutable <code>U32Str</code> from a mutable <code>char</code> pointer …\nConstructs a <code>U32Str</code> from a <code>char</code> slice.\nConstructs a mutable <code>U32Str</code> from a mutable <code>char</code> slice.\nConstructs a wide string slice from a pointer and a length.\nConstructs a wide string slice from a pointer and a length.\nConstructs a mutable wide string slice from a mutable …\nConstructs a mutable wide string slice from a mutable …\nConstructs a wide string slice from a slice of character …\nConstructs a wide string slice from a slice of character …\nConstructs a mutable wide string slice from a mutable …\nConstructs a mutable wide string slice from a mutable …\nReturns a subslice of the string.\nReturns a subslice of the string.\nReturns a mutable subslice of the string.\nReturns a mutable subslice of the string.\nReturns an unchecked subslice of the string.\nReturns an unchecked subslice of the string.\nReturns aa mutable, unchecked subslice of the string.\nReturns aa mutable, unchecked subslice of the string.\nCalls <code>U::from(self)</code>.\nConverts a boxed wide string slice into an owned wide …\nConverts a boxed wide string slice into an owned wide …\nReturns whether this string contains no data.\nReturns whether this string contains no data.\nReturns the length of the string as number of elements (<strong>not</strong>…\nReturns the length of the string as number of elements (<strong>not</strong>…\nReturns an iterator over the lines of a <code>U16Str</code>, as string …\nReturns an iterator over the lines of a <code>U32Str</code>, as string …\nCoerces a value into a wide string slice.\nCoerces a value into a wide string slice.\nCreates a new owned string by repeating this string <code>n</code> …\nCreates a new owned string by repeating this string <code>n</code> …\nDivide one string slice into two at an index.\nDivide one string slice into two at an index.\nDivide one mutable string slice into two at an index.\nDivide one mutable string slice into two at an index.\nDecodes a string reference to an owned <code>OsString</code>.\nDecodes a string to an owned <code>OsString</code>.\nDecodes this string to a <code>String</code> if it contains valid …\nDecodes the string to a <code>String</code> if it contains valid UTF-32 …\nDecodes the string to a <code>String</code> even if it is invalid …\nDecodes the string reference to a <code>String</code> even if it is …\nCopies the string reference to a new owned wide string.\nCopies the string reference to a new owned wide string.\nA draining iterator for string data with unknown encoding.\nAn owned, mutable 16-bit wide string with undefined …\nAn owned, mutable 32-bit wide string with undefined …\nAlias for <code>U16String</code> or <code>U32String</code> depending on platform. …\nConverts to a mutable wide string slice.\nConverts to a mutable wide string slice.\nReturns a mutable reference to the contents of this string.\nReturns a mutable reference to the contents of this string.\nConverts to a wide string slice.\nConverts to a wide string slice.\nReturns a <code>Vec</code> reference to the contents of this string.\nReturns a <code>Vec</code> reference to the contents of this string.\nReturns the capacity this wide string can hold without …\nReturns the capacity this wide string can hold without …\nTruncates the wide string to zero length.\nTruncates the wide string to zero length.\nCreates a draining iterator that removes the specified …\nCreates a draining iterator that removes the specified …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a <code>U32String</code> from a <code>char</code> pointer and a length.\nConstructs a <code>U32String</code> from a <code>char</code> vector.\nConstructs a <code>U16String</code> copy from an <code>OsStr</code>.\nConstructs a <code>U32String</code> copy from an <code>OsStr</code>.\nConstructs a wide string copy from a pointer and a length.\nConstructs a wide string copy from a pointer and a length.\nConstructs a <code>U16String</code> copy from a <code>str</code>, encoding it as …\nConstructs a <code>U16String</code> copy from a <code>str</code>, encoding it as …\nConstructs a wide string from a vector.\nConstructs a wide string from a vector.\nInserts a character encoded as UTF-16 into this string at …\nInserts a character encoded as UTF-32 into this string at …\nInserts a string slice into this string at a specified …\nInserts a string slice into this string at a specified …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this wide string into a boxed string slice.\nConverts this wide string into a boxed string slice.\nConverts the string into a <code>Vec</code>, consuming the string in …\nConverts the string into a <code>Vec</code>, consuming the string in …\nConstructs a new empty wide string.\nConstructs a new empty wide string.\nRemoves the last character or unpaired surrogate from the …\nRemoves the last value from the string buffer and returns …\nExtends the string with the given string slice.\nExtends the string with the given string slice.\nAppends the given <code>char</code> encoded as UTF-16 to the end of …\nAppends the given <code>char</code> encoded as UTF-32 to the end of …\nExtends the string with the given string slice.\nExtends the string with the given string slice.\nExtends the string with the given slice.\nExtends the string with the given slice.\nExtends the string with the given string slice, encoding …\nExtends the string with the given string slice, encoding …\nRemoves a <code>char</code> or unpaired surrogate from this string at a …\nRemoves a value from this string at a position and returns …\nRemoves the specified range in the string, and replaces it …\nRemoves the specified range in the string, and replaces it …\nReserves the capacity for at least <code>additional</code> more …\nReserves the capacity for at least <code>additional</code> more …\nReserves the minimum capacity for exactly <code>additional</code> more …\nReserves the minimum capacity for exactly <code>additional</code> more …\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nShrinks the capacity of this string with a lower bound.\nShrinks the capacity of this string with a lower bound.\nShrinks the capacity of the wide string to match its …\nShrinks the capacity of the wide string to match its …\nSplits the string into two at the given index.\nSplits the string into two at the given index.\nShortens this string to the specified length.\nShortens this string to the specified length.\nConstructs a wide string with the given capacity.\nConstructs a wide string with the given capacity.\nAn iterator over the <code>char</code>s of a string slice, and their …\nAn iterator over the <code>char</code>s of a string slice, and their …\nAn iterator over the <code>char</code>s of a UTF-16 string slice\nAn iterator over the <code>char</code>s of a UTF-32 string slice\nAn iterator over the <code>u16</code> code units of a UTF-16 string …\nThe return type of <code>Utf16Str::escape_debug</code>.\nThe return type of <code>Utf16Str::escape_default</code>.\nThe return type of <code>Utf16Str::escape_unicode</code>.\nAn iterator over the lines of a <code>crate::Utf16Str</code>, …\nUTF-16 string slice for <code>Utf16String</code>.\nUTF-32 string slice for <code>Utf32String</code>.\nAlias for <code>Utf16Str</code> or <code>Utf32Str</code> depending on platform. …\nConverts a string slice into a slice of <code>char</code>s.\nConverts a mutable string slice into a mutable slice of …\nConverts a mutable string slice to a mutable pointer.\nConverts a mutable string slice to a mutable pointer.\nConverts a mutable string to a mutable slice of its …\nConverts a mutable string to a mutable slice of its …\nConverts a string slice to a raw pointer.\nConverts a string slice to a raw pointer.\nConverts a string to a slice of its underlying elements.\nConverts a string to a slice of its underlying elements.\nReturns this string as a wide string slice of undefined …\nReturns this string as a wide string slice of undefined …\nReturns an iterator over the <code>char</code>s of a string slice and …\nReturns an iterator over the <code>char</code>s of a string slice and …\nReturns an iterator over the <code>char</code>s of a string slice.\nReturns an iterator over the <code>char</code>s of a string slice.\nAn iterator over the <code>u16</code> code units of a string slice.\nReturns an iterator of <code>u16</code> over the sting encoded as …\nReturns an iterator of <code>u32</code> over the sting encoded as …\nReturns an iterator of bytes over the string encoded as …\nReturns an iterator of bytes over the string encoded as …\nReturns an iterator that escapes each <code>char</code> in <code>self</code> with …\nReturns an iterator that escapes each <code>char</code> in <code>self</code> with …\nReturns an iterator that escapes each <code>char</code> in <code>self</code> with …\nReturns an iterator that escapes each <code>char</code> in <code>self</code> with …\nReturns an iterator that escapes each <code>char</code> in <code>self</code> with …\nReturns an iterator that escapes each <code>char</code> in <code>self</code> with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a boxed slice to a boxed string slice without …\nConverts a boxed slice to a boxed string slice without …\nConverts a slice of <code>char</code>s to a string slice.\nConverts a mutable slice of <code>char</code>s to a string slice.\nConverts a slice of UTF-16 data to a string slice.\nConverts a slice of UTF-32 data to a string slice.\nConverts a mutable slice of UTF-16 data to a mutable …\nConverts a mutable slice of UTF-32 data to a mutable …\nConverts a slice to a string slice without checking that …\nConverts a slice to a string slice without checking that …\nConverts a mutable slice to a mutable string slice without …\nConverts a mutable slice to a mutable string slice without …\nConverts a wide C string slice to a UTF-16 string slice.\nConverts a wide C string slice to a UTF-32 string slice.\nConverts a mutable wide C string slice to a mutable UTF-16 …\nConverts a mutable wide C string slice to a mutable UTF-32 …\nConverts a wide C string slice to a UTF-16 string slice …\nConverts a wide C string slice to a UTF-32 string slice …\nConverts a mutable wide C string slice to a mutable UTF-16 …\nConverts a mutable wide C string slice to a mutable UTF-32 …\nConverts a wide string slice of undefined encoding to a …\nConverts a wide string slice of undefined encoding to a …\nConverts a mutable wide string slice of undefined encoding …\nConverts a mutable wide string slice of undefined encoding …\nConverts a wide string slice of undefined encoding to a …\nConverts a wide string slice of undefined encoding to a …\nConverts a mutable wide string slice of undefined encoding …\nConverts a mutable wide string slice of undefined encoding …\nReturns a subslice of this string.\nReturns a subslice of this string.\nReturns a mutable subslice of this string.\nReturns a mutable subslice of this string.\nReturns an unchecked subslice of this string slice.\nReturns an unchecked subslice of this string slice.\nReturns a mutable, unchecked subslice of this string slice\nReturns a mutable, unchecked subslice of this string slice\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts a boxed string into a boxed slice without copying …\nConverts a boxed string into a boxed slice without copying …\nConverts a boxed string slice into an owned UTF string …\nConverts a boxed string slice into an owned UTF string …\nChecks that <code>index</code>-th value is the value in a UTF-16 code …\nReturns <code>true</code> if the string has a length of zero.\nReturns <code>true</code> if the string has a length of zero.\nReturns the length of <code>self</code>.\nReturns the length of <code>self</code>.\nReturns an iterator over the lines of a <code>Utf16Str</code>, as …\nReturns an iterator over the lines of a <code>Utf32Str</code>, as …\nReturns the position of the next character, or the length …\nReturns the position of the next character, or the length …\nCreates a new owned string by repeating this string <code>n</code> …\nCreates a new owned string by repeating this string <code>n</code> …\nDivide one string slice into two at an index.\nDivide one string slice into two at an index.\nDivide one mutable string slice into two at an index.\nDivide one mutable string slice into two at an index.\nReturns the lowercase equivalent of this string slice, as …\nReturns the lowercase equivalent of this string slice, as …\nConverts to a standard UTF-8 <code>String</code>.\nConverts to a standard UTF-8 <code>String</code>.\nReturns the uppercase equivalent of this string slice, as …\nReturns the uppercase equivalent of this string slice, as …\nReturns a string slice with leading and trailing …\nReturns a string slice with leading and trailing …\nReturns a string slice with trailing whitespace removed.\nReturns a string slice with trailing whitespace removed.\nReturns a string slice with leading whitespace removed.\nReturns a string slice with leading whitespace removed.\nA draining iterator for <code>Utf16String</code>.\nA draining iterator for <code>Utf32String</code>.\nA UTF-16 encoded, growable owned string.\nA UTF-32 encoded, growable owned string.\nAlias for <code>Utf16String</code> or <code>Utf32String</code> depending on …\nConverts a string into a mutable string slice.\nConverts a string into a mutable string slice.\nReturns a mutable reference to the contents of this string.\nReturns a mutable reference to the contents of this string.\nReturns a slice of this string’s contents.\nReturns a slice of this string’s contents.\nConverts this string into a wide string of undefined …\nConverts this string into a wide string of undefined …\nConverts a string into a string slice.\nConverts a string into a string slice.\nReturns this string’s capacity, in number of elements.\nReturns this string’s capacity, in number of elements.\nTruncates the string, removing all contents.\nTruncates the string, removing all contents.\nCreates a draining iterator that removes the specified …\nCreates a draining iterator that removes the specified …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a vector of <code>char</code>s into a UTF-32 string.\nConverts a slice of <code>u16</code> data to a string, including …\nConverts a slice of <code>u32</code> data to a string, including …\nRe-encodes a UTF-8–encoded string slice into a UTF-16–…\nRe-encodes a UTF-8–encoded string slice into a UTF-32–…\nConverts a wide C string slice of to a UTF-16 string, …\nConverts a wide C string slice of to a UTF-32 string, …\nConverts a wide C string into a UTF-16 string.\nConverts a wide C string into a UTF-32 string.\nConverts a wide C string to a UTF-16 string without …\nConverts a wide C string to a UTF-32 string without …\nConverts a wide string slice of undefined encoding of to a …\nConverts a wide string slice of undefined encoding to a …\nConverts a wide string of undefined encoding into a UTF-16 …\nConverts a wide string of undefined encoding string into a …\nConverts a wide string of undefined encoding to a UTF-16 …\nConverts a wide string of undefined encoding to a UTF-32 …\nConverts a <code>u16</code> vector of UTF-16 data to a string.\nConverts a <code>u32</code> vector of UTF-32 data to a string.\nConverts a <code>u16</code> vector to a string without checking that …\nConverts a <code>u32</code> vector to a string without checking that …\nInserts a character into this string at an offset.\nInserts a character into this string at an offset.\nInserts a UTF-16 string slice into this string at an …\nInserts a UTF-32 string slice into this string at an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this string into a boxed string slice.\nConverts this string into a boxed string slice.\nConverts string into a <code>Vec</code> of <code>char</code>s.\nConverts a string into a vector of its elements.\nConverts a string into a vector of its elements.\nReturns <code>true</code> if this string has a length of zero, and <code>false</code>…\nReturns <code>true</code> if this string has a length of zero, and <code>false</code>…\nReturns the length of this string in number of elements, …\nReturns the length of this string in number of elements, …\nCreates a new empty string.\nCreates a new empty string.\nRemoves the last character from the string buffer and …\nRemoves the last character from the string buffer and …\nAppends the given <code>char</code> to the end of this string.\nAppends the given <code>char</code> to the end of this string.\nAppends a given UTF-8 string slice onto the end of this …\nAppends a given UTF-8 string slice onto the end of this …\nAppends a given string slice onto the end of this string.\nAppends a given string slice onto the end of this string.\nRemoves a <code>char</code> from this string at an offset and returns …\nRemoves a <code>char</code> from this string at an offset and returns …\nRemoves the specified range in the string, and replaces it …\nRemoves the specified range in the string, and replaces it …\nEnsures that this string’s capacity is at least …\nEnsures that this string’s capacity is at least …\nEnsures that this string’s capacity is <code>additional</code> …\nEnsures that this string’s capacity is <code>additional</code> …\nRetains only the characters specified by the predicate.\nRetains only the characters specified by the predicate.\nShrinks the capacity of this string with a lower bound.\nShrinks the capacity of this string with a lower bound.\nShrinks the capacity of this string to match its length.\nShrinks the capacity of this string to match its length.\nSplits the string into two at the given index.\nSplits the string into two at the given index.\nShortens this string to the specified length.\nShortens this string to the specified length.\nCreates a new empty string with a particular capacity.\nCreates a new empty string with a particular capacity.")