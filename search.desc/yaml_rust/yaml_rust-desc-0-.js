searchState.loadedDescShard("yaml_rust", 0, "YAML 1.2 implementation in pure Rust.\nContains the error value\nContains the success value\nSet ‘compact inline notation’ on or off, as described …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermine if this emitter is using ‘compact inline …\nRefer to an anchor ID\nContains the error value\n<code>Event</code> is used with the low-level event base parsing API, …\nAnchor ID\nReserved for internal use\nContains the success value\nValue, style, anchor_id, tag\nAnchor ID\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains the error value\nContains the success value\nhandle, suffix\nhandle, prefix\nmajor, minor\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates the YAML tokenizer.\nAlias, not fully supported yet.\nYAML array, can be accessed as a <code>Vec</code>.\nAccessing a nonexistent node via the Index trait returns …\nYAML bool, e.g. <code>true</code> or <code>false</code>.\nYAML hash, can be accessed as a <code>LinkedHashMap</code>.\nYAML int is stored as i64.\nYAML null, e.g. <code>null</code> or <code>~</code>.\nFloat types are stored as String and parsed on demand. …\nYAML scalar.\nA YAML node is stored as this <code>Yaml</code> enumeration, which …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")