searchState.loadedDescShard("gilrs_core", 0, "Holds information about expected axis range and deadzone.\nBattery is charged.\nBattery is charging.\nDevice is running on the battery.\nError type which can be returned when creating <code>Gilrs</code>.\nPlatform specific representation of axis or button.\nHolds information about gamepad event.\nGamepad event.\nAllow control of gamepad’s force feedback.\nProvides information about gamepad.\nStruct used to manage gamepads and retrieve events.\nTrue, if Y axis of sticks commonly points downwards.\nGilrs does not support current platform, but you can use …\nPlatform specific error.\nState of device’s power supply.\nFailed to determine power status.\nDevice doesn’t have battery.\nReturns slice with EvCodes that may appear in axis related …\nReturns information about a specific axis. <code>None</code> may be …\nReturns slice with EvCodes that may appear in button …\nEvent’s data.\nCreates <code>FfDevice</code> corresponding to this gamepad.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrows <code>Gamepad</code> or return <code>None</code> if index is invalid. …\nId of gamepad.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if gamepad is connected.\nReturns true if force feedback is supported by device,\nReturns id greater than id of last connected gamepad. The …\nReturns name of gamepad.\nProvides the most common mappings of physical location of …\nCreates new event with current time.\nReturns oldest event or <code>None</code> if all events were processed.\nReturns oldest event, waiting for new event if necessary.\nReturns device’s power supply state.\nReturns the product ID, as assigned by the vendor, when …\nSets magnitude for strong and weak ff motors.\nTime when event was emitted.\nReturns UUID that represents gamepad model.\nReturns the vendor ID, as assigned by the USB-IF, when …")