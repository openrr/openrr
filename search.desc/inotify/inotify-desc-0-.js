searchState.loadedDescShard("inotify", 0, "Idiomatic inotify wrapper for the Rust programming language\nFile was accessed\nFile was accessed\nWatch for all events\nMetadata (permissions, timestamps, …) changed\nMetadata (permissions, timestamps, …) changed\nWatch for all close events\nFile or directory not opened for writing was closed\nFile or directory not opened for writing was closed\nFile opened for writing was closed\nFile opened for writing was closed\nFile/directory created in watched directory\nFile/directory created in watched directory\nFile/directory deleted from watched directory\nFile/directory deleted from watched directory\nWatched file/directory was deleted\nWatched file/directory was deleted\nDon’t dereference the path if it is a symbolic link\nFilter events for directory entries that have been unlinked\nAn inotify event\nIndicates the type of an event\nAn owned version of <code>Event</code>\nIterator over inotify events\nWatch was removed\nEvent related to a directory\nIdiomatic Rust wrapper around Linux’s inotify API\nIf a watch for the inode exists, amend it instead of …\nFile was modified\nFile was modified\nWatch for all move events\nFile was renamed/moved; watched directory contained old …\nFile was renamed/moved; watched directory contained old …\nFile was renamed/moved; watched directory contains new name\nFile was renamed/moved; watched directory contains new name\nWatched file/directory was moved\nWatched file/directory was moved\nOnly receive one event, then remove the watch\nOnly watch path, if it is a directory\nFile or directory was opened\nFile or directory was opened\nEvent queue overflowed\nFile system containing watched object was unmounted. File …\nRepresents a watch on an inode\nDescribes a file system watch\nInterface for adding and removing watches\nAdds or updates a watch for the given path\nDeprecated: use <code>Inotify.watches().add()</code> instead\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nCloses the inotify instance\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nConnects related events to each other\nConnects related events to each other\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nWrapper around <code>Self::from_bits_retain</code> for backwards …\nWrapper around <code>Self::from_bits_retain</code> for backwards …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet the inotify event buffer size for an absolute path\nGet the inotify event buffer size\nGetter method for a watcher’s id.\nCreates an <code>Inotify</code> instance\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an owned copy of the event.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nIndicates what kind of event this is\nIndicates what kind of event this is\nThe name of the file the event originates from\nThe name of the file the event originates from\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns one buffer’s worth of available events\nWaits until events are available, then returns them\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nStops watching a file\nDeprecated: use <code>Inotify.watches().remove()</code> instead\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns an owned copy of the event.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGets an interface that allows adding and removing watches. …\nIdentifies the watch this event originates from\nIdentifies the watch this event originates from")