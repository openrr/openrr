searchState.loadedDescShard("enum_map", 0, "An enum mapping type.\nRepresentation of an enum map for type <code>V</code>.\nEnum mapping type.\nDerive macro generating an implementation of trait <code>Enum</code>.\nTrait associating enum with an array.\nAn enum mapping.\nA map iterator that moves out of map.\nAn owning iterator over the values of an <code>EnumMap</code>.\nImmutable enum map iterator\nMutable map iterator\nLength of the enum.\nAn iterator over the values of <code>EnumMap</code>.\nA mutable iterator over the values of <code>EnumMap</code>.\nReturns a reference to the underlying array.\nReturns a mutable reference to the underlying array.\nConverts a mutable enum map to a mutable slice …\nConverts an enum map to a slice representing values.\nClear enum map with default values.\nEnum map constructor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an enum map from array.\nCreate an enum map, where each value is the returned value …\nTakes an usize, and returns an element matching <code>into_usize</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes an enum map and returns the underlying array.\nReturns an unique identifier for a value within range of …\nCreates a consuming iterator visiting all the values. The …\nReturns an iterator over enum map.\nReturns a mutable iterator over enum map.\nReturns number of elements in enum map.\nReturns an enum map with function <code>f</code> applied to each …\nSwaps two indexes.\nAn iterator visiting all values. The iterator type is <code>&amp;V</code>.\nAn iterator visiting all values mutably. The iterator type …")