searchState.loadedDescShard("shlex", 0, "Parse strings like, and escape strings for, POSIX shells.\nThe input contained a nul byte.  In most cases, shells …\nErrors from <code>Quoter::quote</code>, <code>Quoter::join</code>, etc. (and their …\nA more configurable interface to quote strings.  If you …\nAn iterator that takes an input string and splits it into …\nSet whether to allow nul bytes.  By default they are not …\n<code>Shlex</code> and friends for byte strings.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvenience function that consumes an iterable of words …\nConvenience function that consumes an iterable of words …\nCreate a new <code>Quoter</code> with default settings.\nGiven a single word, return a string suitable to encode it …\nGiven a single word, return a string suitable to encode it …\nA more detailed version of the warning at the top level …\nConvenience function that consumes the whole string at …\nConvenience function that consumes an iterable of words …\nGiven a single word, return a string suitable to encode it …\nA more configurable interface to quote strings.  If you …\nAn iterator that takes an input byte string and splits it …\nSet whether to allow nul bytes.  By default they are not …\nReturns the argument unchanged.\nReturns the argument unchanged.\nAn input string is erroneous if it ends while inside a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvenience function that consumes an iterable of words …\nConvenience function that consumes an iterable of words …\nThe number of newlines read so far, plus one.\nCreate a new <code>Quoter</code> with default settings.\nGiven a single word, return a string suitable to encode it …\nGiven a single word, return a byte string suitable to …\nConvenience function that consumes the whole byte string …\nConvenience function that consumes an iterable of words …\nGiven a single word, return a string suitable to encode it …")