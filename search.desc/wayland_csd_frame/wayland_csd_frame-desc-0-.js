searchState.loadedDescShard("wayland_csd_frame", 0, "The interface for wayland client side decorations (CSD).\nClient window decorations should be painted as if the …\nIndicates an alias of/shortcut to something is to be …\nIndicates that something can be moved or resized in any …\nIndicates that the something can be scrolled in any …\nThe user done right mouse click or some touch sequence …\nThe bottom edge is being dragged.\nThe bottom left corner is being dragged.\nThe bottom right corner is being dragged.\nIndicates that a cell or set of cells may be selected. …\nThe window should be closed.\nIndicates that the item/column can be resized …\nA context menu is available for the object under the …\nIndicates something is to be copied. Often rendered as an …\nA simple crosshair (e.g., short line segments resembling a …\nDescribes the appearance of the (usually mouse) cursor …\nAn error which could be returned when parsing <code>CursorIcon</code>.\nThe interface for the client side decorations.\nThe platform-dependent default cursor. Often rendered as …\nIndicates that the user will select the action that will …\nThe east border to be moved.\nThe east and west borders to be moved.\nThe surface is fullscreen. The window geometry specified …\nWindow can be fullscreened and unfullscreened.\nThe Frame action user should perform in responce to mouse …\nThe user clicked or touched the decoractions frame.\nIndicates that something can be grabbed (dragged to be …\nIndicates that something is being grabbed (dragged to be …\nHelp is available for the object under the cursor. Often …\nThe left edge is being dragged.\nWindow can be maximized and unmaximized.\nThe surface is maximized. The window geometry specified in …\nWindow could be minimized.\nThe window should be maximized.\nThe window should be minimized.\nIndicates something is to be moved.\nAn interactive move should be started.\nThe north border to be moved.\nThe north-east corner to be moved.\nThe north-east and south-west corners to be moved.\nIndicates that the dragged item cannot be dropped at the …\nNothing is being dragged.\nThe user done normal click, likely with left mouse button …\nIndicates that the requested action will not be carried …\nThe south and north borders to be moved.\nThe north-west corner to be moved.\nThe north-west and south-east corners to be moved.\nThe cursor is a pointer that indicates a link. Often …\nA progress indicator. The program is performing some …\nThe surface is being resized. The window geometry …\nAn interactive resize should be started with the provided …\nWhich edge or corner is being dragged.\nThe right edge is being dragged.\nIndicates that the item/row can be resized vertically. …\nThe south border to be moved.\nThe surface is currently not ordinarily being repainted; …\nThe south-east corner to be moved.\nShow window menu.\nThe south-west corner to be moved.\nAn alias for all tiled bits set.\nThe window is currently in a tiled layout and the bottom …\nThe window is currently in a tiled layout and the left …\nThe window is currently in a tiled layout and the right …\nThe window is currently in a tiled layout and the top edge …\nIndicates text that may be selected. Often rendered as an …\nThe top edge is being dragged.\nThe top left corner is being dragged.\nThe top right corner is being dragged.\nThe window should be unmaximized.\nIndicates vertical-text that may be selected. Often …\n<code>show_window_menu</code> is available.\nThe west border to be moved.\nIndicates that the program is busy and the user should …\nThe capabilities of the window manager.\nThe configured state of the window.\nIndicates that something can be zoomed in. Often rendered …\nIndicates that something can be zoomed in. Often rendered …\nAdd the borders to the given <code>width</code> and <code>height</code>.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nA list of alternative names for the cursor icon as …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nAll clicks left the decorations.\nEmulate pointer moved event on the decorations frame.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nDraw the decorations frame.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nParse a string slice into <code>CursorIcon</code>.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether the given frame is dirty and should be redrawn.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nGet the frame hidden state.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nReturn the coordinates of the top-left corner of the …\nThe name of the cursor icon as defined in the w3c standard.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nEmulate click on the decorations.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nResize the window to the new size.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet the frame as hidden.\nMark the frame as resizable.\nSet the scaling of the decorations frame.\nSet the frames title.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nSubtract the borders from the given <code>width</code> and <code>height</code>.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUpdate the state of the frame.\nUpdate the window manager capabilites.")