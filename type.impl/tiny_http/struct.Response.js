(function() {
    var type_impls = Object.fromEntries([["tiny_http",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Response%3CR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#186-470\">Source</a><a href=\"#impl-Response%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"struct\" href=\"tiny_http/struct.Response.html\" title=\"struct tiny_http::Response\">Response</a>&lt;R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#196-223\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.new\" class=\"fn\">new</a>(\n    status_code: <a class=\"struct\" href=\"tiny_http/struct.StatusCode.html\" title=\"struct tiny_http::StatusCode\">StatusCode</a>,\n    headers: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"tiny_http/struct.Header.html\" title=\"struct tiny_http::Header\">Header</a>&gt;,\n    data: R,\n    data_length: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;,\n    additional_headers: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/sync/mpsc/struct.Receiver.html\" title=\"struct std::sync::mpsc::Receiver\">Receiver</a>&lt;<a class=\"struct\" href=\"tiny_http/struct.Header.html\" title=\"struct tiny_http::Header\">Header</a>&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"tiny_http/struct.Response.html\" title=\"struct tiny_http::Response\">Response</a>&lt;R&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new Response object.</p>\n<p>The <code>additional_headers</code> argument is a receiver that\nmay provide headers even after the response has been sent.</p>\n<p>All the other arguments are straight-forward.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_chunked_threshold\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#229-232\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.with_chunked_threshold\" class=\"fn\">with_chunked_threshold</a>(self, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"tiny_http/struct.Response.html\" title=\"struct tiny_http::Response\">Response</a>&lt;R&gt;</h4></section></summary><div class=\"docblock\"><p>Set a threshold for <code>Content-Length</code> where we chose chunked\ntransfer. Notice that chunked transfer might happen regardless of\nthis threshold, for instance when the request headers indicate\nit is wanted or when there is no <code>Content-Length</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reader\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#237-239\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.into_reader\" class=\"fn\">into_reader</a>(self) -&gt; R</h4></section></summary><div class=\"docblock\"><p>Convert the response into the underlying <code>Read</code> type.</p>\n<p>This is mainly useful for testing as it must consume the <code>Response</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunked_threshold\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#245-247\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.chunked_threshold\" class=\"fn\">chunked_threshold</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>The current <code>Content-Length</code> threshold for switching over to\nchunked transfer. The default is 32768 bytes. Notice that\nchunked transfer is mutually exclusive with sending a\n<code>Content-Length</code> header as per the HTTP spec.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_header\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#251-286\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.add_header\" class=\"fn\">add_header</a>&lt;H&gt;(&amp;mut self, header: H)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"tiny_http/struct.Header.html\" title=\"struct tiny_http::Header\">Header</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Adds a header to the list.\nDoes all the checks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_header\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#293-299\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.with_header\" class=\"fn\">with_header</a>&lt;H&gt;(self, header: H) -&gt; <a class=\"struct\" href=\"tiny_http/struct.Response.html\" title=\"struct tiny_http::Response\">Response</a>&lt;R&gt;<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"tiny_http/struct.Header.html\" title=\"struct tiny_http::Header\">Header</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the same request, but with an additional header.</p>\n<p>Some headers cannot be modified and some other have a\nspecial behavior. See the documentation above.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_status_code\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#303-309\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.with_status_code\" class=\"fn\">with_status_code</a>&lt;S&gt;(self, code: S) -&gt; <a class=\"struct\" href=\"tiny_http/struct.Response.html\" title=\"struct tiny_http::Response\">Response</a>&lt;R&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"tiny_http/struct.StatusCode.html\" title=\"struct tiny_http::StatusCode\">StatusCode</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the same request, but with a different status code.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_data\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#312-323\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.with_data\" class=\"fn\">with_data</a>&lt;S&gt;(self, reader: S, data_length: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"struct\" href=\"tiny_http/struct.Response.html\" title=\"struct tiny_http::Response\">Response</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the same request, but with different data.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.raw_print\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#334-454\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.raw_print\" class=\"fn\">raw_print</a>&lt;W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>&gt;(\n    self,\n    writer: W,\n    http_version: <a class=\"struct\" href=\"tiny_http/struct.HTTPVersion.html\" title=\"struct tiny_http::HTTPVersion\">HTTPVersion</a>,\n    request_headers: &amp;[<a class=\"struct\" href=\"tiny_http/struct.Header.html\" title=\"struct tiny_http::Header\">Header</a>],\n    do_not_send_body: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,\n    upgrade: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt;,\n) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">IoResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Prints the HTTP response to a writer.</p>\n<p>This function is the one used to send the response to the client’s socket.\nTherefore you shouldn’t expect anything pretty-printed or even readable.</p>\n<p>The HTTP version and headers passed as arguments are used to\ndecide which features (most notably, encoding) to use.</p>\n<p>Note: does not flush the writer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.status_code\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#457-459\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.status_code\" class=\"fn\">status_code</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tiny_http/struct.StatusCode.html\" title=\"struct tiny_http::StatusCode\">StatusCode</a></h4></section></summary><div class=\"docblock\"><p>Retrieves the current value of the <code>Response</code> status code</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_length\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#462-464\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.data_length\" class=\"fn\">data_length</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Retrieves the current value of the <code>Response</code> data length</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.headers\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#467-469\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.headers\" class=\"fn\">headers</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"tiny_http/struct.Header.html\" title=\"struct tiny_http::Header\">Header</a>]</h4></section></summary><div class=\"docblock\"><p>Retrieves the current list of <code>Response</code> headers</p>\n</div></details></div></details>",0,"tiny_http::response::ResponseBox"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Response%3CR%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#472-486\">Source</a><a href=\"#impl-Response%3CR%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"struct\" href=\"tiny_http/struct.Response.html\" title=\"struct tiny_http::Response\">Response</a>&lt;R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method\"><a class=\"src rightside\" href=\"src/tiny_http/response.rs.html#477-485\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tiny_http/struct.Response.html#tymethod.boxed\" class=\"fn\">boxed</a>(self) -&gt; <a class=\"type\" href=\"tiny_http/type.ResponseBox.html\" title=\"type tiny_http::ResponseBox\">ResponseBox</a></h4></section></summary><div class=\"docblock\"><p>Turns this response into a <code>Response&lt;Box&lt;Read + Send&gt;&gt;</code>.</p>\n</div></details></div></details>",0,"tiny_http::response::ResponseBox"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[13529]}