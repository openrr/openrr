(function() {
    var type_impls = Object.fromEntries([["async_ffi",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowingFfiFuture%3C'a,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#483-490\">Source</a><a href=\"#impl-BorrowingFfiFuture%3C'a,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"struct\" href=\"async_ffi/struct.BorrowingFfiFuture.html\" title=\"struct async_ffi::BorrowingFfiFuture\">BorrowingFfiFuture</a>&lt;'a, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#487-489\">Source</a><h4 class=\"code-header\">pub fn <a href=\"async_ffi/struct.BorrowingFfiFuture.html#tymethod.new\" class=\"fn\">new</a>&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'a&gt;(fut: F) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert an <a href=\"https://doc.rust-lang.org/1.90.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\"><code>std::future::Future</code></a> implementing <a href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\"><code>Send</code></a> into a FFI-compatible <a href=\"async_ffi/type.FfiFuture.html\" title=\"type async_ffi::FfiFuture\"><code>FfiFuture</code></a>.</p>\n<p>Usually <a href=\"async_ffi/trait.FutureExt.html#method.into_ffi\" title=\"method async_ffi::FutureExt::into_ffi\"><code>FutureExt::into_ffi</code></a> is preferred and is identical to this method.</p>\n</div></details></div></details>",0,"async_ffi::FfiFuture"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Future-for-BorrowingFfiFuture%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#495-501\">Source</a><a href=\"#impl-Future-for-BorrowingFfiFuture%3C'_,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"async_ffi/struct.BorrowingFfiFuture.html\" title=\"struct async_ffi::BorrowingFfiFuture\">BorrowingFfiFuture</a>&lt;'_, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#496\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/future/future/trait.Future.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The type of value produced on completion.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#498-500\">Source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/future/future/trait.Future.html#tymethod.poll\" class=\"fn\">poll</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;, ctx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Attempts to resolve the future to a final value, registering\nthe current task for wakeup if the value is not yet available. <a href=\"https://doc.rust-lang.org/1.90.0/core/future/future/trait.Future.html#tymethod.poll\">Read more</a></div></details></div></details>","Future","async_ffi::FfiFuture"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStaticEquivalent_-for-BorrowingFfiFuture%3C'a,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#397\">Source</a><a href=\"#impl-GetStaticEquivalent_-for-BorrowingFfiFuture%3C'a,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a> for <a class=\"struct\" href=\"async_ffi/struct.BorrowingFfiFuture.html\" title=\"struct async_ffi::BorrowingFfiFuture\">BorrowingFfiFuture</a>&lt;'a, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"abi_stable/abi_stability/stable_abi_trait/trait.StableAbi.html\" title=\"trait abi_stable::abi_stability::stable_abi_trait::StableAbi\">__StableAbi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.StaticEquivalent\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#397\">Source</a><a href=\"#associatedtype.StaticEquivalent\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" class=\"associatedtype\">StaticEquivalent</a> = _static_BorrowingFfiFuture&lt;'static, &lt;T as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>&gt;</h4></section></summary><div class='docblock'>The <code>'static</code> equivalent of <code>Self</code></div></details></div></details>","GetStaticEquivalent_","async_ffi::FfiFuture"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StableAbi-for-BorrowingFfiFuture%3C'a,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#397\">Source</a><a href=\"#impl-StableAbi-for-BorrowingFfiFuture%3C'a,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"abi_stable/abi_stability/stable_abi_trait/trait.StableAbi.html\" title=\"trait abi_stable::abi_stability::stable_abi_trait::StableAbi\">StableAbi</a> for <a class=\"struct\" href=\"async_ffi/struct.BorrowingFfiFuture.html\" title=\"struct async_ffi::BorrowingFfiFuture\">BorrowingFfiFuture</a>&lt;'a, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"abi_stable/abi_stability/stable_abi_trait/trait.StableAbi.html\" title=\"trait abi_stable::abi_stability::stable_abi_trait::StableAbi\">__StableAbi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LAYOUT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#397\">Source</a><a href=\"#associatedconstant.LAYOUT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/abi_stability/stable_abi_trait/trait.StableAbi.html#associatedconstant.LAYOUT\" class=\"constant\">LAYOUT</a>: &amp;'static <a class=\"struct\" href=\"abi_stable/type_layout/struct.TypeLayout.html\" title=\"struct abi_stable::type_layout::TypeLayout\">TypeLayout</a></h4></section></summary><div class='docblock'>The layout of the type provided by implementors.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IsNonZeroType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#397\">Source</a><a href=\"#associatedtype.IsNonZeroType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/abi_stability/stable_abi_trait/trait.StableAbi.html#associatedtype.IsNonZeroType\" class=\"associatedtype\">IsNonZeroType</a> = &lt;<a class=\"struct\" href=\"async_ffi/struct.LocalBorrowingFfiFuture.html\" title=\"struct async_ffi::LocalBorrowingFfiFuture\">LocalBorrowingFfiFuture</a>&lt;'a, T&gt; as <a class=\"trait\" href=\"abi_stable/abi_stability/stable_abi_trait/trait.StableAbi.html\" title=\"trait abi_stable::abi_stability::stable_abi_trait::StableAbi\">StableAbi</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/stable_abi_trait/trait.StableAbi.html#associatedtype.IsNonZeroType\" title=\"type abi_stable::abi_stability::stable_abi_trait::StableAbi::IsNonZeroType\">IsNonZeroType</a></h4></section></summary><div class='docblock'>Whether this type has a single invalid bit-pattern. <a href=\"abi_stable/abi_stability/stable_abi_trait/trait.StableAbi.html#associatedtype.IsNonZeroType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ABI_CONSTS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#76\">Source</a><a href=\"#associatedconstant.ABI_CONSTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/abi_stability/stable_abi_trait/trait.StableAbi.html#associatedconstant.ABI_CONSTS\" class=\"constant\">ABI_CONSTS</a>: <a class=\"struct\" href=\"abi_stable/abi_stability/stable_abi_trait/struct.AbiConsts.html\" title=\"struct abi_stable::abi_stability::stable_abi_trait::AbiConsts\">AbiConsts</a> = _</h4></section></summary><div class='docblock'><code>const</code>-equivalents of the associated types.</div></details></div></details>","StableAbi","async_ffi::FfiFuture"],["<section id=\"impl-Send-for-BorrowingFfiFuture%3C'_,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_ffi/lib.rs.html#493\">Source</a><a href=\"#impl-Send-for-BorrowingFfiFuture%3C'_,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"async_ffi/struct.BorrowingFfiFuture.html\" title=\"struct async_ffi::BorrowingFfiFuture\">BorrowingFfiFuture</a>&lt;'_, T&gt;</h3></section>","Send","async_ffi::FfiFuture"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[11135]}