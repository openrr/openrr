(function() {
    var type_impls = Object.fromEntries([["nibble_vec",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NibbleVec%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#26\">Source</a><a href=\"#impl-Clone-for-NibbleVec%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#26\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","nibble_vec::Nibblet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NibbleVec%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#293-306\">Source</a><a href=\"#impl-Debug-for-NibbleVec%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#294-305\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","nibble_vec::Nibblet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-NibbleVec%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#26\">Source</a><a href=\"#impl-Default-for-NibbleVec%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#26\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","nibble_vec::Nibblet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26%5Bu8%5D%3E-for-NibbleVec%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#315-320\">Source</a><a href=\"#impl-From%3C%26%5Bu8%5D%3E-for-NibbleVec%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, A: <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#317-319\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'a [u8]>","nibble_vec::Nibblet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVec%3Cu8%3E%3E-for-NibbleVec%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#308-313\">Source</a><a href=\"#impl-From%3CVec%3Cu8%3E%3E-for-NibbleVec%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#310-312\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vec<u8>>","nibble_vec::Nibblet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3CVec%3Cu8%3E%3E-for-NibbleVec%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#322-327\">Source</a><a href=\"#impl-Into%3CVec%3Cu8%3E%3E-for-NibbleVec%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#324-326\">Source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<Vec<u8>>","nibble_vec::Nibblet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NibbleVec%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#32-264\">Source</a><a href=\"#impl-NibbleVec%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#34-39\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nibble_vec/struct.NibbleVec.html#tymethod.new\" class=\"fn\">new</a>() -&gt; <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h4></section></summary><div class=\"docblock\"><p>Create an empty nibble vector.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_byte_vec\" class=\"method\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#45-51\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nibble_vec/struct.NibbleVec.html#tymethod.from_byte_vec\" class=\"fn\">from_byte_vec</a>(vec: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h4></section></summary><div class=\"docblock\"><p>Create a nibble vector from a vector of bytes.</p>\n<p>Each byte is split into two 4-bit entries (MSB, LSB).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#55-57\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nibble_vec/struct.NibbleVec.html#tymethod.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a byte slice of the nibble vector’s contents.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#63-65\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nibble_vec/struct.NibbleVec.html#tymethod.into_bytes\" class=\"fn\">into_bytes</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Converts a nibble vector into a byte vector.</p>\n<p>This consumes the nibble vector, so we do not need to copy its contents.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#69-71\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nibble_vec/struct.NibbleVec.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Get the number of elements stored in the vector.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#75-77\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nibble_vec/struct.NibbleVec.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the nibble vector has a length of 0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#85-99\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nibble_vec/struct.NibbleVec.html#tymethod.get\" class=\"fn\">get</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Fetch a single entry from the vector.</p>\n<p>Guaranteed to be a value in the interval [0, 15].</p>\n<p><strong>Panics</strong> if <code>idx &gt;= self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#105-118\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nibble_vec/struct.NibbleVec.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, val: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class=\"docblock\"><p>Add a single nibble to the vector.</p>\n<p>Only the 4 least-significant bits of the value are used.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#126-140\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nibble_vec/struct.NibbleVec.html#tymethod.split\" class=\"fn\">split</a>(&amp;mut self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h4></section></summary><div class=\"docblock\"><p>Split the vector into two parts.</p>\n<p>All elements at or following the given index are returned in a new <code>NibbleVec</code>,\nwith exactly <code>idx</code> elements remaining in this vector.</p>\n<p><strong>Panics</strong> if <code>idx &gt; self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.join\" class=\"method\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#235-263\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nibble_vec/struct.NibbleVec.html#tymethod.join\" class=\"fn\">join</a>(self, other: &amp;<a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;) -&gt; <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h4></section></summary><div class=\"docblock\"><p>Append another nibble vector whilst consuming this vector.</p>\n</div></details></div></details>",0,"nibble_vec::Nibblet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5Bu8%5D%3E-for-NibbleVec%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#277-291\">Source</a><a href=\"#impl-PartialEq%3C%5Bu8%5D%3E-for-NibbleVec%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt; for <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h3><div class=\"docblock\"><p>Compare a <code>NibbleVec</code> and a slice of bytes <em>element-by-element</em>.\nBytes are <strong>not</strong> interpreted as two <code>NibbleVec</code> entries.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#279-290\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<[u8]>","nibble_vec::Nibblet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NibbleVec%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#266-271\">Source</a><a href=\"#impl-PartialEq-for-NibbleVec%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#268-270\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","nibble_vec::Nibblet"],["<section id=\"impl-Eq-for-NibbleVec%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nibble_vec/lib.rs.html#273\">Source</a><a href=\"#impl-Eq-for-NibbleVec%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"smallvec/trait.Array.html\" title=\"trait smallvec::Array\">Array</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"nibble_vec/struct.NibbleVec.html\" title=\"struct nibble_vec::NibbleVec\">NibbleVec</a>&lt;A&gt;</h3></section>","Eq","nibble_vec::Nibblet"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[25613]}