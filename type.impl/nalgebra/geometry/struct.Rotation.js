(function() {
    var type_impls = Object.fromEntries([["nalgebra",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsDiffEq-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#509-525\">Source</a><a href=\"#impl-AbsDiffEq-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>,\n    T::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Epsilon\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#514\">Source</a><a href=\"#associatedtype.Epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" class=\"associatedtype\">Epsilon</a> = &lt;T as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>Used for specifying relative comparisons.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#517-519\">Source</a><a href=\"#method.default_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\" class=\"fn\">default_epsilon</a>() -&gt; Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default tolerance to use when testing values that are close together. <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#522-524\">Source</a><a href=\"#method.abs_diff_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" class=\"fn\">abs_diff_eq</a>(&amp;self, other: &amp;Self, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses the absolute difference to compute the approximate\nequality of two numbers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/abs_diff_eq.rs.html#24\">Source</a><a href=\"#method.abs_diff_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#method.abs_diff_ne\" class=\"fn\">abs_diff_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" title=\"method approx::abs_diff_eq::AbsDiffEq::abs_diff_eq\"><code>AbsDiffEq::abs_diff_eq</code></a>.</div></details></div></details>","AbsDiffEq","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbstractRotation%3CT,+D%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#28-71\">Source</a><a href=\"#impl-AbstractRotation%3CT,+D%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"nalgebra/geometry/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::AbstractRotation\">AbstractRotation</a>&lt;T, D&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.identity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#33-35\">Source</a><a href=\"#method.identity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/trait.AbstractRotation.html#tymethod.identity\" class=\"fn\">identity</a>() -&gt; Self</h4></section></summary><div class='docblock'>The rotation identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#38-40\">Source</a><a href=\"#method.inverse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/trait.AbstractRotation.html#tymethod.inverse\" class=\"fn\">inverse</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>The rotation inverse.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#43-45\">Source</a><a href=\"#method.inverse_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/trait.AbstractRotation.html#tymethod.inverse_mut\" class=\"fn\">inverse_mut</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Change <code>self</code> to its inverse.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_vector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#48-50\">Source</a><a href=\"#method.transform_vector\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/trait.AbstractRotation.html#tymethod.transform_vector\" class=\"fn\">transform_vector</a>(&amp;self, v: &amp;<a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;) -&gt; <a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>Apply the rotation to the given vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#53-55\">Source</a><a href=\"#method.transform_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/trait.AbstractRotation.html#tymethod.transform_point\" class=\"fn\">transform_point</a>(&amp;self, p: &amp;<a class=\"type\" href=\"nalgebra/geometry/type.Point.html\" title=\"type nalgebra::geometry::Point\">Point</a>&lt;T, D&gt;) -&gt; <a class=\"type\" href=\"nalgebra/geometry/type.Point.html\" title=\"type nalgebra::geometry::Point\">Point</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>Apply the rotation to the given point.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_vector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#58-60\">Source</a><a href=\"#method.inverse_transform_vector\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/trait.AbstractRotation.html#tymethod.inverse_transform_vector\" class=\"fn\">inverse_transform_vector</a>(&amp;self, v: &amp;<a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;) -&gt; <a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>Apply the inverse rotation to the given vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_unit_vector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#63-65\">Source</a><a href=\"#method.inverse_transform_unit_vector\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/trait.AbstractRotation.html#method.inverse_transform_unit_vector\" class=\"fn\">inverse_transform_unit_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;&gt;</h4></section></summary><div class='docblock'>Apply the inverse rotation to the given unit vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#68-70\">Source</a><a href=\"#method.inverse_transform_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/trait.AbstractRotation.html#tymethod.inverse_transform_point\" class=\"fn\">inverse_transform_point</a>(&amp;self, p: &amp;<a class=\"type\" href=\"nalgebra/geometry/type.Point.html\" title=\"type nalgebra::geometry::Point\">Point</a>&lt;T, D&gt;) -&gt; <a class=\"type\" href=\"nalgebra/geometry/type.Point.html\" title=\"type nalgebra::geometry::Point\">Point</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>Apply the inverse rotation to the given point.</div></details></div></details>","AbstractRotation<T, D>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#61\">Source</a><a href=\"#impl-Clone-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#61\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#66-70\">Source</a><a href=\"#impl-Debug-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#67-69\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, formatter: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_construction.rs.html#9-16\">Source</a><a href=\"#impl-Default-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_construction.rs.html#13-15\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'a%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#130-142\">Source</a><a href=\"#impl-Deserialize%3C'a%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'a&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"nalgebra/base/storage/type.Owned.html\" title=\"type nalgebra::base::storage::Owned\">Owned</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;: <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#134-141\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;Des&gt;(deserializer: Des) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Des::<a class=\"associatedtype\" href=\"serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    Des: <a class=\"trait\" href=\"serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'a>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#570-581\">Source</a><a href=\"#impl-Display-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#574-580\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Isometry%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#428-438\">Source</a><a href=\"#impl-Div%3C%26Isometry%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#428-438\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#428-438\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Isometry<T, Rotation<T, D>, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Rotation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#60-71\">Source</a><a href=\"#impl-Div%3C%26Rotation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#60-71\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#60-71\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Rotation<T, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Similarity%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#495-505\">Source</a><a href=\"#impl-Div%3C%26Similarity%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#495-505\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#495-505\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Similarity<T, Rotation<T, D>, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Transform%3CT,+C,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#399-411\">Source</a><a href=\"#impl-Div%3C%26Transform%3CT,+C,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, C, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, C, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a> + <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a>,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/enum.TAffine.html\" title=\"enum nalgebra::geometry::TAffine\">TAffine</a>&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#399-411\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, &lt;C as <a class=\"trait\" href=\"nalgebra/geometry/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/enum.TAffine.html\" title=\"enum nalgebra::geometry::TAffine\">TAffine</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/geometry/trait.TCategoryMul.html#associatedtype.Representative\" title=\"type nalgebra::geometry::TCategoryMul::Representative\">Representative</a>, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#399-411\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, C, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Transform<T, C, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#228-236\">Source</a><a href=\"#impl-Div%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 2&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#228-236\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#228-236\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;'b <a class=\"type\" href=\"nalgebra/geometry/type.UnitComplex.html\" title=\"type nalgebra::geometry::UnitComplex\">UnitComplex</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Unit<Complex<T>>>","nalgebra::geometry::rotation_alias::Rotation2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Rotation%3CT,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#361-367\">Source</a><a href=\"#impl-Div%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Rotation%3CT,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Quaternion.html\" title=\"struct nalgebra::geometry::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 3&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#361-367\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Quaternion.html\" title=\"struct nalgebra::geometry::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#361-367\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: &amp;'b <a class=\"type\" href=\"nalgebra/geometry/type.UnitQuaternion.html\" title=\"type nalgebra::geometry::UnitQuaternion\">UnitQuaternion</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Unit<Quaternion<T>>>","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CIsometry%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#428-438\">Source</a><a href=\"#impl-Div%3CIsometry%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#428-438\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#428-438\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, right: <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Isometry<T, Rotation<T, D>, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CSimilarity%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#495-505\">Source</a><a href=\"#impl-Div%3CSimilarity%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#495-505\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#495-505\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, right: <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Similarity<T, Rotation<T, D>, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CTransform%3CT,+C,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#399-411\">Source</a><a href=\"#impl-Div%3CTransform%3CT,+C,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, C, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a> + <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a>,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/enum.TAffine.html\" title=\"enum nalgebra::geometry::TAffine\">TAffine</a>&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#399-411\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, &lt;C as <a class=\"trait\" href=\"nalgebra/geometry/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/enum.TAffine.html\" title=\"enum nalgebra::geometry::TAffine\">TAffine</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/geometry/trait.TCategoryMul.html#associatedtype.Representative\" title=\"type nalgebra::geometry::TCategoryMul::Representative\">Representative</a>, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#399-411\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, C, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Transform<T, C, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUnit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#228-236\">Source</a><a href=\"#impl-Div%3CUnit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 2&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#228-236\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#228-236\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"type\" href=\"nalgebra/geometry/type.UnitComplex.html\" title=\"type nalgebra::geometry::UnitComplex\">UnitComplex</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Unit<Complex<T>>>","nalgebra::geometry::rotation_alias::Rotation2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUnit%3CQuaternion%3CT%3E%3E%3E-for-Rotation%3CT,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#369-374\">Source</a><a href=\"#impl-Div%3CUnit%3CQuaternion%3CT%3E%3E%3E-for-Rotation%3CT,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Quaternion.html\" title=\"struct nalgebra::geometry::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 3&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#369-374\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Quaternion.html\" title=\"struct nalgebra::geometry::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#369-374\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"type\" href=\"nalgebra/geometry/type.UnitQuaternion.html\" title=\"type nalgebra::geometry::UnitQuaternion\">UnitQuaternion</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Unit<Quaternion<T>>>","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#60-71\">Source</a><a href=\"#impl-Div-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#60-71\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#60-71\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, right: <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26Rotation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#164-171\">Source</a><a href=\"#impl-DivAssign%3C%26Rotation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#164-171\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&'b Rotation<T, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#442-450\">Source</a><a href=\"#impl-DivAssign%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 2&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#447-449\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"type\" href=\"nalgebra/geometry/type.UnitComplex.html\" title=\"type nalgebra::geometry::UnitComplex\">UnitComplex</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&'b Unit<Complex<T>>>","nalgebra::geometry::rotation_alias::Rotation2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CUnit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#432-440\">Source</a><a href=\"#impl-DivAssign%3CUnit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 2&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#437-439\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"type\" href=\"nalgebra/geometry/type.UnitComplex.html\" title=\"type nalgebra::geometry::UnitComplex\">UnitComplex</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Unit<Complex<T>>>","nalgebra::geometry::rotation_alias::Rotation2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#164-171\">Source</a><a href=\"#impl-DivAssign-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#164-171\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, right: <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BRotation%3C%3CT+as+SimdValue%3E::Element,+D%3E;+16%5D%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#312-339\">Source</a><a href=\"#impl-From%3C%5BRotation%3C%3CT+as+SimdValue%3E::Element,+D%3E;+16%5D%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;&lt;T as <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">16</a>]&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">16</a>]&gt; + <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a>,\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#319-338\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: [<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">16</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Rotation<<T as SimdValue>::Element, D>; 16]>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BRotation%3C%3CT+as+SimdValue%3E::Element,+D%3E;+2%5D%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#262-272\">Source</a><a href=\"#impl-From%3C%5BRotation%3C%3CT+as+SimdValue%3E::Element,+D%3E;+2%5D%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;&lt;T as <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">2</a>]&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">2</a>]&gt; + <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a>,\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#269-271\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: [<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">2</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Rotation<<T as SimdValue>::Element, D>; 2]>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BRotation%3C%3CT+as+SimdValue%3E::Element,+D%3E;+4%5D%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#274-289\">Source</a><a href=\"#impl-From%3C%5BRotation%3C%3CT+as+SimdValue%3E::Element,+D%3E;+4%5D%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;&lt;T as <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">4</a>]&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">4</a>]&gt; + <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a>,\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#281-288\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: [<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">4</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Rotation<<T as SimdValue>::Element, D>; 4]>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BRotation%3C%3CT+as+SimdValue%3E::Element,+D%3E;+8%5D%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#291-310\">Source</a><a href=\"#impl-From%3C%5BRotation%3C%3CT+as+SimdValue%3E::Element,+D%3E;+8%5D%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;&lt;T as <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]&gt; + <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a>,\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#298-309\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: [<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>, D&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Rotation<<T as SimdValue>::Element, D>; 8]>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#72-79\">Source</a><a href=\"#impl-Hash-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#76-78\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3C(usize,+usize)%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#35-42\">Source</a><a href=\"#impl-Index%3C(usize,+usize)%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#36\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = T</h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#39-41\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, row_col: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<(usize, usize)>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Isometry%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#401-413\">Source</a><a href=\"#impl-Mul%3C%26Isometry%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#401-413\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#401-413\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Isometry<T, Rotation<T, D>, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Matrix%3CT,+R2,+C2,+SB%3E%3E-for-Rotation%3CT,+D1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#74-87\">Source</a><a href=\"#impl-Mul%3C%26Matrix%3CT,+R2,+C2,+SB%3E%3E-for-Rotation%3CT,+D1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, R2, C2, SB, const D1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, R2, C2, SB&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,\n    R2: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,\n    C2: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, R2, C2&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D1&gt;, C2&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/constraint/struct.ShapeConstraint.html\" title=\"struct nalgebra::base::constraint::ShapeConstraint\">ShapeConstraint</a>: <a class=\"trait\" href=\"nalgebra/base/constraint/trait.AreMultipliable.html\" title=\"trait nalgebra::base::constraint::AreMultipliable\">AreMultipliable</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D1&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D1&gt;, R2, C2&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#74-87\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D1&gt;, C2, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D1&gt;, C2&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#74-87\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, R2, C2, SB&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Matrix<T, R2, C2, SB>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26OPoint%3CT,+Const%3CD%3E%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#124-135\">Source</a><a href=\"#impl-Mul%3C%26OPoint%3CT,+Const%3CD%3E%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.OPoint.html\" title=\"struct nalgebra::geometry::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,\n    <a class=\"struct\" href=\"nalgebra/base/constraint/struct.ShapeConstraint.html\" title=\"struct nalgebra::base::constraint::ShapeConstraint\">ShapeConstraint</a>: <a class=\"trait\" href=\"nalgebra/base/constraint/trait.AreMultipliable.html\" title=\"trait nalgebra::base::constraint::AreMultipliable\">AreMultipliable</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#124-135\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.OPoint.html\" title=\"struct nalgebra::geometry::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#124-135\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: &amp;'b <a class=\"type\" href=\"nalgebra/geometry/type.Point.html\" title=\"type nalgebra::geometry::Point\">Point</a>&lt;T, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b OPoint<T, Const<D>>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Rotation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#45-56\">Source</a><a href=\"#impl-Mul%3C%26Rotation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#45-56\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#45-56\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Rotation<T, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Similarity%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#465-474\">Source</a><a href=\"#impl-Mul%3C%26Similarity%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#465-474\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#465-474\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Similarity<T, Rotation<T, D>, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Transform%3CT,+C,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#200-212\">Source</a><a href=\"#impl-Mul%3C%26Transform%3CT,+C,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, C, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, C, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a> + <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a>,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/enum.TAffine.html\" title=\"enum nalgebra::geometry::TAffine\">TAffine</a>&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#200-212\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, &lt;C as <a class=\"trait\" href=\"nalgebra/geometry/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/enum.TAffine.html\" title=\"enum nalgebra::geometry::TAffine\">TAffine</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/geometry/trait.TCategoryMul.html#associatedtype.Representative\" title=\"type nalgebra::geometry::TCategoryMul::Representative\">Representative</a>, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#200-212\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, C, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Transform<T, C, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Translation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#366-374\">Source</a><a href=\"#impl-Mul%3C%26Translation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Translation.html\" title=\"struct nalgebra::geometry::Translation\">Translation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#366-374\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#366-374\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Translation.html\" title=\"struct nalgebra::geometry::Translation\">Translation</a>&lt;T, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Translation<T, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#217-225\">Source</a><a href=\"#impl-Mul%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 2&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#217-225\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#217-225\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;'b <a class=\"type\" href=\"nalgebra/geometry/type.UnitComplex.html\" title=\"type nalgebra::geometry::UnitComplex\">UnitComplex</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Unit<Complex<T>>>","nalgebra::geometry::rotation_alias::Rotation2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Unit%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+S%3E%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#138-150\">Source</a><a href=\"#impl-Mul%3C%26Unit%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+S%3E%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, S, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, S&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,\n    S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/constraint/struct.ShapeConstraint.html\" title=\"struct nalgebra::base::constraint::ShapeConstraint\">ShapeConstraint</a>: <a class=\"trait\" href=\"nalgebra/base/constraint/trait.AreMultipliable.html\" title=\"trait nalgebra::base::constraint::AreMultipliable\">AreMultipliable</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#138-150\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/struct.ArrayStorage.html\" title=\"struct nalgebra::base::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#138-150\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"type\" href=\"nalgebra/base/type.Vector.html\" title=\"type nalgebra::base::Vector\">Vector</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, S&gt;&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Unit<Matrix<T, Const<D>, Const<1>, S>>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Rotation%3CT,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#328-334\">Source</a><a href=\"#impl-Mul%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Rotation%3CT,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Quaternion.html\" title=\"struct nalgebra::geometry::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 3&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#328-334\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Quaternion.html\" title=\"struct nalgebra::geometry::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#328-334\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: &amp;'b <a class=\"type\" href=\"nalgebra/geometry/type.UnitQuaternion.html\" title=\"type nalgebra::geometry::UnitQuaternion\">UnitQuaternion</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Unit<Quaternion<T>>>","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CIsometry%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#401-413\">Source</a><a href=\"#impl-Mul%3CIsometry%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#401-413\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#401-413\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Isometry<T, Rotation<T, D>, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CMatrix%3CT,+R2,+C2,+SB%3E%3E-for-Rotation%3CT,+D1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#74-87\">Source</a><a href=\"#impl-Mul%3CMatrix%3CT,+R2,+C2,+SB%3E%3E-for-Rotation%3CT,+D1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, R2, C2, SB, const D1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, R2, C2, SB&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,\n    R2: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,\n    C2: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.Dim.html\" title=\"trait nalgebra::base::dimension::Dim\">Dim</a>,\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, R2, C2&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D1&gt;, C2&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/constraint/struct.ShapeConstraint.html\" title=\"struct nalgebra::base::constraint::ShapeConstraint\">ShapeConstraint</a>: <a class=\"trait\" href=\"nalgebra/base/constraint/trait.AreMultipliable.html\" title=\"trait nalgebra::base::constraint::AreMultipliable\">AreMultipliable</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D1&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D1&gt;, R2, C2&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#74-87\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D1&gt;, C2, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D1&gt;, C2&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#74-87\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: <a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, R2, C2, SB&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Matrix<T, R2, C2, SB>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3COPoint%3CT,+Const%3CD%3E%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#124-135\">Source</a><a href=\"#impl-Mul%3COPoint%3CT,+Const%3CD%3E%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.OPoint.html\" title=\"struct nalgebra::geometry::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,\n    <a class=\"struct\" href=\"nalgebra/base/constraint/struct.ShapeConstraint.html\" title=\"struct nalgebra::base::constraint::ShapeConstraint\">ShapeConstraint</a>: <a class=\"trait\" href=\"nalgebra/base/constraint/trait.AreMultipliable.html\" title=\"trait nalgebra::base::constraint::AreMultipliable\">AreMultipliable</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#124-135\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.OPoint.html\" title=\"struct nalgebra::geometry::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#124-135\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: <a class=\"type\" href=\"nalgebra/geometry/type.Point.html\" title=\"type nalgebra::geometry::Point\">Point</a>&lt;T, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<OPoint<T, Const<D>>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CSimilarity%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#465-474\">Source</a><a href=\"#impl-Mul%3CSimilarity%3CT,+Rotation%3CT,+D%3E,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#465-474\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#465-474\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Similarity<T, Rotation<T, D>, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CTransform%3CT,+C,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#200-212\">Source</a><a href=\"#impl-Mul%3CTransform%3CT,+C,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, C, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a> + <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a>,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/enum.TAffine.html\" title=\"enum nalgebra::geometry::TAffine\">TAffine</a>&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#200-212\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, &lt;C as <a class=\"trait\" href=\"nalgebra/geometry/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/enum.TAffine.html\" title=\"enum nalgebra::geometry::TAffine\">TAffine</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/geometry/trait.TCategoryMul.html#associatedtype.Representative\" title=\"type nalgebra::geometry::TCategoryMul::Representative\">Representative</a>, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#200-212\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T, C, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Transform<T, C, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CTranslation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#366-374\">Source</a><a href=\"#impl-Mul%3CTranslation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Translation.html\" title=\"struct nalgebra::geometry::Translation\">Translation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#366-374\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#366-374\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: <a class=\"struct\" href=\"nalgebra/geometry/struct.Translation.html\" title=\"struct nalgebra::geometry::Translation\">Translation</a>&lt;T, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Translation<T, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUnit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#217-225\">Source</a><a href=\"#impl-Mul%3CUnit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 2&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#217-225\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#217-225\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"type\" href=\"nalgebra/geometry/type.UnitComplex.html\" title=\"type nalgebra::geometry::UnitComplex\">UnitComplex</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Unit<Complex<T>>>","nalgebra::geometry::rotation_alias::Rotation2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUnit%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+S%3E%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#138-150\">Source</a><a href=\"#impl-Mul%3CUnit%3CMatrix%3CT,+Const%3CD%3E,+Const%3C1%3E,+S%3E%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, S, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, S&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,\n    S: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/constraint/struct.ShapeConstraint.html\" title=\"struct nalgebra::base::constraint::ShapeConstraint\">ShapeConstraint</a>: <a class=\"trait\" href=\"nalgebra/base/constraint/trait.AreMultipliable.html\" title=\"trait nalgebra::base::constraint::AreMultipliable\">AreMultipliable</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#138-150\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/struct.ArrayStorage.html\" title=\"struct nalgebra::base::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#138-150\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"type\" href=\"nalgebra/base/type.Vector.html\" title=\"type nalgebra::base::Vector\">Vector</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, S&gt;&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Unit<Matrix<T, Const<D>, Const<1>, S>>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUnit%3CQuaternion%3CT%3E%3E%3E-for-Rotation%3CT,+3%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#336-341\">Source</a><a href=\"#impl-Mul%3CUnit%3CQuaternion%3CT%3E%3E%3E-for-Rotation%3CT,+3%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Quaternion.html\" title=\"struct nalgebra::geometry::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 3&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#336-341\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Quaternion.html\" title=\"struct nalgebra::geometry::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#336-341\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"type\" href=\"nalgebra/geometry/type.UnitQuaternion.html\" title=\"type nalgebra::geometry::UnitQuaternion\">UnitQuaternion</a>&lt;T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Unit<Quaternion<T>>>","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#45-56\">Source</a><a href=\"#impl-Mul-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#45-56\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#45-56\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, right: <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26Rotation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#155-162\">Source</a><a href=\"#impl-MulAssign%3C%26Rotation%3CT,+D%3E%3E-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#155-162\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&'b Rotation<T, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#421-429\">Source</a><a href=\"#impl-MulAssign%3C%26Unit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 2&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#426-428\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"type\" href=\"nalgebra/geometry/type.UnitComplex.html\" title=\"type nalgebra::geometry::UnitComplex\">UnitComplex</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&'b Unit<Complex<T>>>","nalgebra::geometry::rotation_alias::Rotation2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CUnit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#411-419\">Source</a><a href=\"#impl-MulAssign%3CUnit%3CComplex%3CT%3E%3E%3E-for-Rotation%3CT,+2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/struct.Complex.html\" title=\"struct nalgebra::Complex\">Complex</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, 2&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/unit_complex_ops.rs.html#416-418\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"type\" href=\"nalgebra/geometry/type.UnitComplex.html\" title=\"type nalgebra::geometry::UnitComplex\">UnitComplex</a>&lt;T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Unit<Complex<T>>>","nalgebra::geometry::rotation_alias::Rotation2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#155-162\">Source</a><a href=\"#impl-MulAssign-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_ops.rs.html#155-162\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, right: <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_construction.rs.html#65-73\">Source</a><a href=\"#impl-One-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedAdd.html\" title=\"trait nalgebra::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"nalgebra/trait.ClosedMul.html\" title=\"trait nalgebra::ClosedMul\">ClosedMul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_construction.rs.html#70-72\">Source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#118\">Source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#128-130\">Source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details></div></details>","One","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#502-507\">Source</a><a href=\"#impl-PartialEq-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#504-506\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, right: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEq-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#527-547\">Source</a><a href=\"#impl-RelativeEq-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a>,\n    T::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_relative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#533-535\">Source</a><a href=\"#method.default_max_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\" class=\"fn\">default_max_relative</a>() -&gt; Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default relative tolerance for testing values that are far-apart. <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#538-546\">Source</a><a href=\"#method.relative_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" class=\"fn\">relative_eq</a>(\n    &amp;self,\n    other: &amp;Self,\n    epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses a relative comparison if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/relative_eq.rs.html#22-27\">Source</a><a href=\"#method.relative_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#method.relative_ne\" class=\"fn\">relative_ne</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>,\n    epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" title=\"method approx::relative_eq::RelativeEq::relative_eq\"><code>RelativeEq::relative_eq</code></a>.</div></details></div></details>","RelativeEq","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#144-171\">Source</a><a href=\"#impl-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_matrix_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#168-170\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.from_matrix_unchecked\" class=\"fn\">from_matrix_unchecked</a>(matrix: <a class=\"type\" href=\"nalgebra/base/type.SMatrix.html\" title=\"type nalgebra::base::SMatrix\">SMatrix</a>&lt;T, D, D&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new rotation from the given square matrix.</p>\n<p>The matrix orthonormality is not checked.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>mat = Matrix3::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,      <span class=\"number\">0.0</span>,\n                       <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>, <span class=\"number\">0.0</span>,\n                       <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>rot = Rotation3::from_matrix_unchecked(mat);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>rot.matrix(), mat);\n\n\n<span class=\"kw\">let </span>mat = Matrix2::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,\n                       <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>);\n<span class=\"kw\">let </span>rot = Rotation2::from_matrix_unchecked(mat);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>rot.matrix(), mat);</code></pre></div>\n</div></details></div></details>",0,"nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#174-287\">Source</a><a href=\"#impl-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h3><div class=\"docblock\"><h4 id=\"conversion-to-a-matrix\"><a class=\"doc-anchor\" href=\"#conversion-to-a-matrix\">§</a>Conversion to a matrix</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.matrix\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#195-197\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.matrix\" class=\"fn\">matrix</a>(&amp;self) -&gt; &amp;<a class=\"type\" href=\"nalgebra/base/type.SMatrix.html\" title=\"type nalgebra::base::SMatrix\">SMatrix</a>&lt;T, D, D&gt;</h4></section></summary><div class=\"docblock\"><p>A reference to the underlying matrix representation of this rotation.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::z_axis(), f32::consts::FRAC_PI_6);\n<span class=\"kw\">let </span>expected = Matrix3::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,      <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>, <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">1.0</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>rot.matrix(), expected);\n\n\n<span class=\"kw\">let </span>rot = Rotation2::new(f32::consts::FRAC_PI_6);\n<span class=\"kw\">let </span>expected = Matrix2::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,\n                            <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>rot.matrix(), expected);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.matrix_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#202-204\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.matrix_mut\" class=\"fn\">matrix_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"type\" href=\"nalgebra/base/type.SMatrix.html\" title=\"type nalgebra::base::SMatrix\">SMatrix</a>&lt;T, D, D&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: Use <code>.matrix_mut_unchecked()</code> instead.</span></div></span></summary><div class=\"docblock\"><p>A mutable reference to the underlying matrix representation of this rotation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.matrix_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#212-214\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.matrix_mut_unchecked\" class=\"fn\">matrix_mut_unchecked</a>(&amp;mut self) -&gt; &amp;mut <a class=\"type\" href=\"nalgebra/base/type.SMatrix.html\" title=\"type nalgebra::base::SMatrix\">SMatrix</a>&lt;T, D, D&gt;</h4></section></summary><div class=\"docblock\"><p>A mutable reference to the underlying matrix representation of this rotation.</p>\n<p>This is suffixed by “_unchecked” because this allows the user to replace the\nmatrix by another one that is non-inversible or non-orthonormal. If one of\nthose properties is broken, subsequent method calls may return bogus results.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#237-239\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; <a class=\"type\" href=\"nalgebra/base/type.SMatrix.html\" title=\"type nalgebra::base::SMatrix\">SMatrix</a>&lt;T, D, D&gt;</h4></section></summary><div class=\"docblock\"><p>Unwraps the underlying matrix.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::z_axis(), f32::consts::FRAC_PI_6);\n<span class=\"kw\">let </span>mat = rot.into_inner();\n<span class=\"kw\">let </span>expected = Matrix3::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,      <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>, <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">1.0</span>);\n<span class=\"macro\">assert_eq!</span>(mat, expected);\n\n\n<span class=\"kw\">let </span>rot = Rotation2::new(f32::consts::FRAC_PI_6);\n<span class=\"kw\">let </span>mat = rot.into_inner();\n<span class=\"kw\">let </span>expected = Matrix2::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,\n                            <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>);\n<span class=\"macro\">assert_eq!</span>(mat, expected);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#245-247\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.unwrap\" class=\"fn\">unwrap</a>(self) -&gt; <a class=\"type\" href=\"nalgebra/base/type.SMatrix.html\" title=\"type nalgebra::base::SMatrix\">SMatrix</a>&lt;T, D, D&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: use <code>.into_inner()</code> instead</span></div></span></summary><div class=\"docblock\"><p>Unwraps the underlying matrix.\nDeprecated: Use <a href=\"nalgebra/geometry/struct.Rotation.html#method.into_inner\" title=\"method nalgebra::geometry::Rotation::into_inner\"><code>Rotation::into_inner</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_homogeneous\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#273-286\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.to_homogeneous\" class=\"fn\">to_homogeneous</a>(\n    &amp;self,\n) -&gt; <a class=\"type\" href=\"nalgebra/base/type.OMatrix.html\" title=\"type nalgebra::base::OMatrix\">OMatrix</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a>,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Converts this rotation into its equivalent homogeneous transformation matrix.</p>\n<p>This is the same as <code>self.into()</code>.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::z_axis(), f32::consts::FRAC_PI_6);\n<span class=\"kw\">let </span>expected = Matrix4::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,      <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>);\n<span class=\"macro\">assert_eq!</span>(rot.to_homogeneous(), expected);\n\n\n<span class=\"kw\">let </span>rot = Rotation2::new(f32::consts::FRAC_PI_6);\n<span class=\"kw\">let </span>expected = Matrix3::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,      <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>, <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">1.0</span>);\n<span class=\"macro\">assert_eq!</span>(rot.to_homogeneous(), expected);</code></pre></div>\n</div></details></div></details>",0,"nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#290-392\">Source</a><a href=\"#impl-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h3><div class=\"docblock\"><h4 id=\"transposition-and-inversion\"><a class=\"doc-anchor\" href=\"#transposition-and-inversion\">§</a>Transposition and inversion</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transpose\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#311-313\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.transpose\" class=\"fn\">transpose</a>(&amp;self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Transposes <code>self</code>.</p>\n<p>Same as <code>.inverse()</code> because the inverse of a rotation matrix is its transform.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::new(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>tr_rot = rot.transpose();\n<span class=\"macro\">assert_relative_eq!</span>(rot * tr_rot, Rotation3::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(tr_rot * rot, Rotation3::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n\n<span class=\"kw\">let </span>rot = Rotation2::new(<span class=\"number\">1.2</span>);\n<span class=\"kw\">let </span>tr_rot = rot.transpose();\n<span class=\"macro\">assert_relative_eq!</span>(rot * tr_rot, Rotation2::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(tr_rot * rot, Rotation2::identity(), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#335-337\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.inverse\" class=\"fn\">inverse</a>(&amp;self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Inverts <code>self</code>.</p>\n<p>Same as <code>.transpose()</code> because the inverse of a rotation matrix is its transform.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::new(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>inv = rot.inverse();\n<span class=\"macro\">assert_relative_eq!</span>(rot * inv, Rotation3::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(inv * rot, Rotation3::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n\n<span class=\"kw\">let </span>rot = Rotation2::new(<span class=\"number\">1.2</span>);\n<span class=\"kw\">let </span>inv = rot.inverse();\n<span class=\"macro\">assert_relative_eq!</span>(rot * inv, Rotation2::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(inv * rot, Rotation2::identity(), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transpose_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#362-364\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.transpose_mut\" class=\"fn\">transpose_mut</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Transposes <code>self</code> in-place.</p>\n<p>Same as <code>.inverse_mut()</code> because the inverse of a rotation matrix is its transform.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::new(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tr_rot = Rotation3::new(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\ntr_rot.transpose_mut();\n\n<span class=\"macro\">assert_relative_eq!</span>(rot * tr_rot, Rotation3::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(tr_rot * rot, Rotation3::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n\n<span class=\"kw\">let </span>rot = Rotation2::new(<span class=\"number\">1.2</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>tr_rot = Rotation2::new(<span class=\"number\">1.2</span>);\ntr_rot.transpose_mut();\n\n<span class=\"macro\">assert_relative_eq!</span>(rot * tr_rot, Rotation2::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(tr_rot * rot, Rotation2::identity(), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#389-391\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.inverse_mut\" class=\"fn\">inverse_mut</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Inverts <code>self</code> in-place.</p>\n<p>Same as <code>.transpose_mut()</code> because the inverse of a rotation matrix is its transform.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::new(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>inv = Rotation3::new(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\ninv.inverse_mut();\n\n<span class=\"macro\">assert_relative_eq!</span>(rot * inv, Rotation3::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(inv * rot, Rotation3::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n\n<span class=\"kw\">let </span>rot = Rotation2::new(<span class=\"number\">1.2</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>inv = Rotation2::new(<span class=\"number\">1.2</span>);\ninv.inverse_mut();\n\n<span class=\"macro\">assert_relative_eq!</span>(rot * inv, Rotation2::identity(), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(inv * rot, Rotation2::identity(), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details></div></details>",0,"nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#395-498\">Source</a><a href=\"#impl-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/trait.SimdRealField.html\" title=\"trait nalgebra::SimdRealField\">SimdRealField</a>,</div></h3><div class=\"docblock\"><h4 id=\"transformation-of-a-vector-or-a-point\"><a class=\"doc-anchor\" href=\"#transformation-of-a-vector-or-a-point\">§</a>Transformation of a vector or a point</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_point\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#415-417\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.transform_point\" class=\"fn\">transform_point</a>(&amp;self, pt: &amp;<a class=\"type\" href=\"nalgebra/geometry/type.Point.html\" title=\"type nalgebra::geometry::Point\">Point</a>&lt;T, D&gt;) -&gt; <a class=\"type\" href=\"nalgebra/geometry/type.Point.html\" title=\"type nalgebra::geometry::Point\">Point</a>&lt;T, D&gt;</h4></section></summary><div class=\"docblock\"><p>Rotate the given point.</p>\n<p>This is the same as the multiplication <code>self * pt</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>transformed_point = rot.transform_point(<span class=\"kw-2\">&amp;</span>Point3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n\n<span class=\"macro\">assert_relative_eq!</span>(transformed_point, Point3::new(<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, -<span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#435-437\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.transform_vector\" class=\"fn\">transform_vector</a>(&amp;self, v: &amp;<a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;) -&gt; <a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;</h4></section></summary><div class=\"docblock\"><p>Rotate the given vector.</p>\n<p>This is the same as the multiplication <code>self * v</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>transformed_vector = rot.transform_vector(<span class=\"kw-2\">&amp;</span>Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n\n<span class=\"macro\">assert_relative_eq!</span>(transformed_vector, Vector3::new(<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, -<span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_point\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#455-457\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.inverse_transform_point\" class=\"fn\">inverse_transform_point</a>(&amp;self, pt: &amp;<a class=\"type\" href=\"nalgebra/geometry/type.Point.html\" title=\"type nalgebra::geometry::Point\">Point</a>&lt;T, D&gt;) -&gt; <a class=\"type\" href=\"nalgebra/geometry/type.Point.html\" title=\"type nalgebra::geometry::Point\">Point</a>&lt;T, D&gt;</h4></section></summary><div class=\"docblock\"><p>Rotate the given point by the inverse of this rotation. This may be\ncheaper than inverting the rotation and then transforming the given\npoint.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>transformed_point = rot.inverse_transform_point(<span class=\"kw-2\">&amp;</span>Point3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n\n<span class=\"macro\">assert_relative_eq!</span>(transformed_point, Point3::new(-<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#475-477\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.inverse_transform_vector\" class=\"fn\">inverse_transform_vector</a>(&amp;self, v: &amp;<a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;) -&gt; <a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;</h4></section></summary><div class=\"docblock\"><p>Rotate the given vector by the inverse of this rotation. This may be\ncheaper than inverting the rotation and then transforming the given\nvector.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>transformed_vector = rot.inverse_transform_vector(<span class=\"kw-2\">&amp;</span>Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n\n<span class=\"macro\">assert_relative_eq!</span>(transformed_vector, Vector3::new(-<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_unit_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#495-497\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.inverse_transform_unit_vector\" class=\"fn\">inverse_transform_unit_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/struct.Unit.html\" title=\"struct nalgebra::base::Unit\">Unit</a>&lt;<a class=\"type\" href=\"nalgebra/base/type.SVector.html\" title=\"type nalgebra::base::SVector\">SVector</a>&lt;T, D&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Rotate the given vector by the inverse of this rotation. This may be\ncheaper than inverting the rotation and then transforming the given\nvector.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation3::new(Vector3::z() * f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>transformed_vector = rot.inverse_transform_unit_vector(<span class=\"kw-2\">&amp;</span>Vector3::x_axis());\n\n<span class=\"macro\">assert_relative_eq!</span>(transformed_vector, -Vector3::y_axis(), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details></div></details>",0,"nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_construction.rs.html#19-45\">Source</a><a href=\"#impl-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a>,</div></h3><div class=\"docblock\"><h4 id=\"identity\"><a class=\"doc-anchor\" href=\"#identity\">§</a>Identity</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.identity\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_construction.rs.html#42-44\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.identity\" class=\"fn\">identity</a>() -&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new square identity rotation of the given <code>dimension</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot1 = Rotation2::identity();\n<span class=\"kw\">let </span>rot2 = Rotation2::new(std::f32::consts::FRAC_PI_2);\n\n<span class=\"macro\">assert_eq!</span>(rot1 * rot2, rot2);\n<span class=\"macro\">assert_eq!</span>(rot2 * rot1, rot2);\n\n<span class=\"kw\">let </span>rot1 = Rotation3::identity();\n<span class=\"kw\">let </span>rot2 = Rotation3::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::z_axis(), std::f32::consts::FRAC_PI_2);\n\n<span class=\"macro\">assert_eq!</span>(rot1 * rot2, rot2);\n<span class=\"macro\">assert_eq!</span>(rot2 * rot1, rot2);</code></pre></div>\n</div></details></div></details>",0,"nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_construction.rs.html#47-63\">Source</a><a href=\"#impl-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_construction.rs.html#57-62\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/geometry/struct.Rotation.html#tymethod.cast\" class=\"fn\">cast</a>&lt;To: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>&gt;(self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;To, D&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;To, D&gt;: <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;Self&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Cast the components of <code>self</code> to another type.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = Rotation2::&lt;f64&gt;::identity();\n<span class=\"kw\">let </span>rot2 = rot.cast::&lt;f32&gt;();\n<span class=\"macro\">assert_eq!</span>(rot2, Rotation2::&lt;f32&gt;::identity());</code></pre></div>\n</div></details></div></details>",0,"nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#117-127\">Source</a><a href=\"#impl-Serialize-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    <a class=\"type\" href=\"nalgebra/base/storage/type.Owned.html\" title=\"type nalgebra::base::storage::Owned\">Owned</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;: <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#121-126\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdValue-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_simba.rs.html#7-50\">Source</a><a href=\"#impl-SimdValue-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>,\n    T::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Element\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_simba.rs.html#12\">Source</a><a href=\"#associatedtype.Element\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" class=\"associatedtype\">Element</a> = <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;&lt;T as <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>, D&gt;</h4></section></summary><div class='docblock'>The type of the elements of each lane of this SIMD value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SimdBool\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_simba.rs.html#13\">Source</a><a href=\"#associatedtype.SimdBool\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"nalgebra/trait.SimdValue.html#associatedtype.SimdBool\" class=\"associatedtype\">SimdBool</a> = &lt;T as <a class=\"trait\" href=\"nalgebra/trait.SimdValue.html\" title=\"trait nalgebra::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type nalgebra::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Type of the result of comparing two SIMD values like <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_simba.rs.html#16-18\">Source</a><a href=\"#method.lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/trait.SimdValue.html#tymethod.lanes\" class=\"fn\">lanes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of lanes of this SIMD value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_simba.rs.html#21-23\">Source</a><a href=\"#method.splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/trait.SimdValue.html#tymethod.splat\" class=\"fn\">splat</a>(val: Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>) -&gt; Self</h4></section></summary><div class='docblock'>Initializes an SIMD value with each lanes set to <code>val</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_simba.rs.html#26-28\">Source</a><a href=\"#method.extract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/trait.SimdValue.html#tymethod.extract\" class=\"fn\">extract</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code>. <a href=\"nalgebra/trait.SimdValue.html#tymethod.extract\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_simba.rs.html#31-33\">Source</a><a href=\"#method.extract_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/trait.SimdValue.html#tymethod.extract_unchecked\" class=\"fn\">extract_unchecked</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_simba.rs.html#36-38\">Source</a><a href=\"#method.replace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/trait.SimdValue.html#tymethod.replace\" class=\"fn\">replace</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, val: Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code>. <a href=\"nalgebra/trait.SimdValue.html#tymethod.replace\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_simba.rs.html#41-44\">Source</a><a href=\"#method.replace_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"nalgebra/trait.SimdValue.html#tymethod.replace_unchecked\" class=\"fn\">replace_unchecked</a>(&amp;mut self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, val: Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_simba.rs.html#47-49\">Source</a><a href=\"#method.select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/trait.SimdValue.html#tymethod.select\" class=\"fn\">select</a>(self, cond: Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type nalgebra::SimdValue::SimdBool\">SimdBool</a>, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Merges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>. <a href=\"nalgebra/trait.SimdValue.html#tymethod.select\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_value.rs.html#39-41\">Source</a><a href=\"#method.map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/trait.SimdValue.html#method.map_lanes\" class=\"fn\">map_lanes</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code>. <a href=\"nalgebra/trait.SimdValue.html#method.map_lanes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_map_lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_value.rs.html#58-64\">Source</a><a href=\"#method.zip_map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/trait.SimdValue.html#method.zip_map_lanes\" class=\"fn\">zip_map_lanes</a>(\n    self,\n    b: Self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>, Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"nalgebra/trait.SimdValue.html#associatedtype.Element\" title=\"type nalgebra::SimdValue::Element\">Element</a>,\n) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code> paired with the corresponding lane of <code>b</code>. <a href=\"nalgebra/trait.SimdValue.html#method.zip_map_lanes\">Read more</a></div></details></div></details>","SimdValue","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CIsometry%3CT2,+R,+D%3E%3E-for-Rotation%3CT1,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#122-142\">Source</a><a href=\"#impl-SubsetOf%3CIsometry%3CT2,+R,+D%3E%3E-for-Rotation%3CT1,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T2, R, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T1, D&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::AbstractRotation\">AbstractRotation</a>&lt;T2, D&gt; + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#129-131\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T2, R, D&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#134-136\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(iso: &amp;<a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T2, R, D&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#139-141\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(iso: &amp;<a class=\"struct\" href=\"nalgebra/geometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::Isometry\">Isometry</a>&lt;T2, R, D&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Isometry<T2, R, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CMatrix%3CT2,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CDefaultAllocator+as+Allocator%3CT2,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output%3E%3E::Buffer%3E%3E-for-Rotation%3CT1,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#195-232\">Source</a><a href=\"#impl-SubsetOf%3CMatrix%3CT2,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CDefaultAllocator+as+Allocator%3CT2,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output,+%3CConst%3CD%3E+as+DimNameAdd%3CConst%3C1%3E%3E%3E::Output%3E%3E::Buffer%3E%3E-for-Rotation%3CT1,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/struct.Matrix.html\" title=\"struct nalgebra::base::Matrix\">Matrix</a>&lt;T2, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a> as <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T2, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>, &lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt; as <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html#associatedtype.Output\" title=\"type nalgebra::base::dimension::DimNameAdd::Output\">Output</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/allocator/trait.Allocator.html#associatedtype.Buffer\" title=\"type nalgebra::base::allocator::Allocator::Buffer\">Buffer</a>&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T1, D&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimMin.html\" title=\"trait nalgebra::base::dimension::DimMin\">DimMin</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, Output = <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T1, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt; + <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T2, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#208-210\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(\n    &amp;self,\n) -&gt; <a class=\"type\" href=\"nalgebra/base/type.OMatrix.html\" title=\"type nalgebra::base::OMatrix\">OMatrix</a>&lt;T2, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#213-223\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(\n    m: &amp;<a class=\"type\" href=\"nalgebra/base/type.OMatrix.html\" title=\"type nalgebra::base::OMatrix\">OMatrix</a>&lt;T2, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#226-231\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(\n    m: &amp;<a class=\"type\" href=\"nalgebra/base/type.OMatrix.html\" title=\"type nalgebra::base::OMatrix\">OMatrix</a>&lt;T2, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;,\n) -&gt; Self</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Matrix<T2, <Const<D> as DimNameAdd<Const<1>>>::Output, <Const<D> as DimNameAdd<Const<1>>>::Output, <DefaultAllocator as Allocator<T2, <Const<D> as DimNameAdd<Const<1>>>::Output, <Const<D> as DimNameAdd<Const<1>>>::Output>>::Buffer>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CRotation%3CT2,+D%3E%3E-for-Rotation%3CT1,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#30-49\">Source</a><a href=\"#impl-SubsetOf%3CRotation%3CT2,+D%3E%3E-for-Rotation%3CT1,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T2, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T1, D&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#36-38\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T2, D&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#41-43\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(rot: &amp;<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T2, D&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#46-48\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(rot: &amp;<a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T2, D&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Rotation<T2, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CSimilarity%3CT2,+R,+D%3E%3E-for-Rotation%3CT1,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#144-164\">Source</a><a href=\"#impl-SubsetOf%3CSimilarity%3CT2,+R,+D%3E%3E-for-Rotation%3CT1,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, R, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T2, R, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T1, D&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::AbstractRotation\">AbstractRotation</a>&lt;T2, D&gt; + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;Self&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#151-153\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T2, R, D&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#156-158\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(sim: &amp;<a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T2, R, D&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#161-163\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(sim: &amp;<a class=\"struct\" href=\"nalgebra/geometry/struct.Similarity.html\" title=\"struct nalgebra::geometry::Similarity\">Similarity</a>&lt;T2, R, D&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Similarity<T2, R, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CTransform%3CT2,+C,+D%3E%3E-for-Rotation%3CT1,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#166-193\">Source</a><a href=\"#impl-SubsetOf%3CTransform%3CT2,+C,+D%3E%3E-for-Rotation%3CT1,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, C, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T2, C, D&gt;&gt; for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T1, D&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"nalgebra/trait.RealField.html\" title=\"trait nalgebra::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/trait.SuperTCategoryOf.html\" title=\"trait nalgebra::geometry::SuperTCategoryOf\">SuperTCategoryOf</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/enum.TAffine.html\" title=\"enum nalgebra::geometry::TAffine\">TAffine</a>&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;: <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimNameAdd.html\" title=\"trait nalgebra::base::dimension::DimNameAdd\">DimNameAdd</a>&lt;<a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt; + <a class=\"trait\" href=\"nalgebra/base/dimension/trait.DimMin.html\" title=\"trait nalgebra::base::dimension::DimMin\">DimMin</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, Output = <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;&gt;,\n    <a class=\"struct\" href=\"nalgebra/base/default_allocator/struct.DefaultAllocator.html\" title=\"struct nalgebra::base::default_allocator::DefaultAllocator\">DefaultAllocator</a>: <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T1, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt; + <a class=\"trait\" href=\"nalgebra/base/allocator/trait.Allocator.html\" title=\"trait nalgebra::base::allocator::Allocator\">Allocator</a>&lt;T2, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.DimNameSum.html\" title=\"type nalgebra::base::dimension::DimNameSum\">DimNameSum</a>&lt;<a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"type\" href=\"nalgebra/base/dimension/type.U1.html\" title=\"type nalgebra::base::dimension::U1\">U1</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#180-182\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T2, C, D&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#185-187\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(t: &amp;<a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T2, C, D&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation_conversion.rs.html#190-192\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(t: &amp;<a class=\"struct\" href=\"nalgebra/geometry/struct.Transform.html\" title=\"struct nalgebra::geometry::Transform\">Transform</a>&lt;T2, C, D&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Transform<T2, C, D>>","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UlpsEq-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#549-563\">Source</a><a href=\"#impl-UlpsEq-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a>,\n    T::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_ulps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#555-557\">Source</a><a href=\"#method.default_max_ulps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\" class=\"fn\">default_max_ulps</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The default ULPs to tolerate when testing values that are far-apart. <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#560-562\">Source</a><a href=\"#method.ulps_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" class=\"fn\">ulps_eq</a>(&amp;self, other: &amp;Self, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses units in the last place (ULP) if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/ulps_eq.rs.html#23\">Source</a><a href=\"#method.ulps_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#method.ulps_ne\" class=\"fn\">ulps_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" title=\"method approx::ulps_eq::UlpsEq::ulps_eq\"><code>UlpsEq::ulps_eq</code></a>.</div></details></div></details>","UlpsEq","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<section id=\"impl-Copy-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#61\">Source</a><a href=\"#impl-Copy-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h3></section>","Copy","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"],["<section id=\"impl-Eq-for-Rotation%3CT,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/rotation.rs.html#500\">Source</a><a href=\"#impl-Eq-for-Rotation%3CT,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"nalgebra/base/trait.Scalar.html\" title=\"trait nalgebra::base::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, const D: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"nalgebra/geometry/struct.Rotation.html\" title=\"struct nalgebra::geometry::Rotation\">Rotation</a>&lt;T, D&gt;</h3></section>","Eq","nalgebra::geometry::rotation_alias::Rotation2","nalgebra::geometry::rotation_alias::Rotation3"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[301037]}