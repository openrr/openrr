(function() {
    var type_impls = Object.fromEntries([["arci",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsDiffEq-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1729\">Source</a><a href=\"#impl-AbsDiffEq-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>&lt;Epsilon = T&gt; + <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Epsilon\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1730\">Source</a><a href=\"#associatedtype.Epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" class=\"associatedtype\">Epsilon</a> = T</h4></section></summary><div class='docblock'>Used for specifying relative comparisons.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1733\">Source</a><a href=\"#method.default_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\" class=\"fn\">default_epsilon</a>() -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default tolerance to use when testing values that are close together. <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1738\">Source</a><a href=\"#method.abs_diff_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" class=\"fn\">abs_diff_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;,\n    epsilon: &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses the absolute difference to compute the approximate\nequality of two numbers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/abs_diff_eq.rs.html#24\">Source</a><a href=\"#method.abs_diff_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#method.abs_diff_ne\" class=\"fn\">abs_diff_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" title=\"method approx::abs_diff_eq::AbsDiffEq::abs_diff_eq\"><code>AbsDiffEq::abs_diff_eq</code></a>.</div></details></div></details>","AbsDiffEq","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbstractRotation%3CT,+3%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#73-75\">Source</a><a href=\"#impl-AbstractRotation%3CT,+3%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T, 3&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.identity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#78\">Source</a><a href=\"#method.identity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html#tymethod.identity\" class=\"fn\">identity</a>() -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The rotation identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#83\">Source</a><a href=\"#method.inverse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html#tymethod.inverse\" class=\"fn\">inverse</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The rotation inverse.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#88\">Source</a><a href=\"#method.inverse_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html#tymethod.inverse_mut\" class=\"fn\">inverse_mut</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Change <code>self</code> to its inverse.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_vector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#93\">Source</a><a href=\"#method.transform_vector\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html#tymethod.transform_vector\" class=\"fn\">transform_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;</h4></section></summary><div class='docblock'>Apply the rotation to the given vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#98\">Source</a><a href=\"#method.transform_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html#tymethod.transform_point\" class=\"fn\">transform_point</a>(&amp;self, p: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;</h4></section></summary><div class='docblock'>Apply the rotation to the given point.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_vector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#103\">Source</a><a href=\"#method.inverse_transform_vector\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html#tymethod.inverse_transform_vector\" class=\"fn\">inverse_transform_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;</h4></section></summary><div class='docblock'>Apply the inverse rotation to the given vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_point\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#108\">Source</a><a href=\"#method.inverse_transform_point\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html#tymethod.inverse_transform_point\" class=\"fn\">inverse_transform_point</a>(\n    &amp;self,\n    p: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;</h4></section></summary><div class='docblock'>Apply the inverse rotation to the given point.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_unit_vector\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/abstract_rotation.rs.html#21\">Source</a><a href=\"#method.inverse_transform_unit_vector\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html#method.inverse_transform_unit_vector\" class=\"fn\">inverse_transform_unit_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;D&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, D, 1&gt;&gt;&gt;</h4></section></summary><div class='docblock'>Apply the inverse rotation to the given unit vector.</div></details></div></details>","AbstractRotation<T, 3>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-Unit%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#279\">Source</a><a href=\"#impl-AsRef%3CT%3E-for-Unit%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#281\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Unit%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#28\">Source</a><a href=\"#impl-Clone-for-Unit%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#28\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Unit%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#37\">Source</a><a href=\"#impl-Debug-for-Unit%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#38\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, formatter: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1701\">Source</a><a href=\"#impl-Default-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1702\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Unit%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#351\">Source</a><a href=\"#impl-Deref-for-Unit%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#352\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#355\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Unit%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#60\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Unit%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#61-63\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;, &lt;D as <a class=\"trait\" href=\"serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1707\">Source</a><a href=\"#impl-Display-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1708\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Isometry%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#480-490\">Source</a><a href=\"#impl-Div%3C%26Isometry%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#480-490\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#480-490\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Isometry<T, Unit<Quaternion<T>>, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Rotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#295-301\">Source</a><a href=\"#impl-Div%3C%26Rotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#295-301\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#295-301\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Rotation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Similarity%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#556-566\">Source</a><a href=\"#impl-Div%3C%26Similarity%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#556-566\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#556-566\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Similarity<T, Unit<Quaternion<T>>, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Transform%3CT,+C,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#428-439\">Source</a><a href=\"#impl-Div%3C%26Transform%3CT,+C,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedAdd.html\" title=\"trait simba::scalar::field::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedMul.html\" title=\"trait simba::scalar::field::ClosedMul\">ClosedMul</a> + <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#428-439\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, &lt;C as <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html#associatedtype.Representative\" title=\"type nalgebra::geometry::transform::TCategoryMul::Representative\">Representative</a>, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#428-439\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Transform<T, C, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Unit%3CDualQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#539-549\">Source</a><a href=\"#impl-Div%3C%26Unit%3CDualQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#539-549\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#539-549\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Unit<DualQuaternion<T>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#231-236\">Source</a><a href=\"#impl-Div%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#231-236\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#231-236\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<&'b Unit<Quaternion<T>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CIsometry%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#480-490\">Source</a><a href=\"#impl-Div%3CIsometry%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#480-490\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#480-490\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    right: <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Isometry<T, Unit<Quaternion<T>>, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CRotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#303-308\">Source</a><a href=\"#impl-Div%3CRotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#303-308\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#303-308\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Rotation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CSimilarity%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#556-566\">Source</a><a href=\"#impl-Div%3CSimilarity%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#556-566\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#556-566\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    right: <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Similarity<T, Unit<Quaternion<T>>, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CTransform%3CT,+C,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#428-439\">Source</a><a href=\"#impl-Div%3CTransform%3CT,+C,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedAdd.html\" title=\"trait simba::scalar::field::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedMul.html\" title=\"trait simba::scalar::field::ClosedMul\">ClosedMul</a> + <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#428-439\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, &lt;C as <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html#associatedtype.Representative\" title=\"type nalgebra::geometry::transform::TCategoryMul::Representative\">Representative</a>, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#428-439\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Transform<T, C, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CUnit%3CDualQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#551-561\">Source</a><a href=\"#impl-Div%3CUnit%3CDualQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#551-561\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#551-561\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Unit<DualQuaternion<T>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#238-242\">Source</a><a href=\"#impl-Div-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#238-242\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#238-242\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26Rotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#665-672\">Source</a><a href=\"#impl-DivAssign%3C%26Rotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#665-672\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&'b Rotation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#635-642\">Source</a><a href=\"#impl-DivAssign%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#635-642\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<&'b Unit<Quaternion<T>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CRotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#674-677\">Source</a><a href=\"#impl-DivAssign%3CRotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#674-677\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Rotation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#644-647\">Source</a><a href=\"#impl-DivAssign-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#644-647\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BUnit%3CQuaternion%3C%3CT+as+SimdValue%3E::Element%3E%3E;+16%5D%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#383-387\">Source</a><a href=\"#impl-From%3C%5BUnit%3CQuaternion%3C%3CT+as+SimdValue%3E::Element%3E%3E;+16%5D%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>&gt;&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">16</a>]&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">16</a>]&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#390\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    arr: [<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>&gt;&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">16</a>],\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Unit<Quaternion<<T as SimdValue>::Element>>; 16]>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BUnit%3CQuaternion%3C%3CT+as+SimdValue%3E::Element%3E%3E;+2%5D%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#333-337\">Source</a><a href=\"#impl-From%3C%5BUnit%3CQuaternion%3C%3CT+as+SimdValue%3E::Element%3E%3E;+2%5D%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>&gt;&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">2</a>]&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">2</a>]&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#340\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    arr: [<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>&gt;&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">2</a>],\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Unit<Quaternion<<T as SimdValue>::Element>>; 2]>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BUnit%3CQuaternion%3C%3CT+as+SimdValue%3E::Element%3E%3E;+4%5D%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#345-349\">Source</a><a href=\"#impl-From%3C%5BUnit%3CQuaternion%3C%3CT+as+SimdValue%3E::Element%3E%3E;+4%5D%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>&gt;&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">4</a>]&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">4</a>]&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#352\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    arr: [<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>&gt;&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">4</a>],\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Unit<Quaternion<<T as SimdValue>::Element>>; 4]>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BUnit%3CQuaternion%3C%3CT+as+SimdValue%3E::Element%3E%3E;+8%5D%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#362-366\">Source</a><a href=\"#impl-From%3C%5BUnit%3CQuaternion%3C%3CT+as+SimdValue%3E::Element%3E%3E;+8%5D%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>&gt;&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.PrimitiveSimdValue.html\" title=\"trait simba::simd::simd_value::PrimitiveSimdValue\">PrimitiveSimdValue</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;[&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>]&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#369\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    arr: [<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>&gt;&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">8</a>],\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[Unit<Quaternion<<T as SimdValue>::Element>>; 8]>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#222-224\">Source</a><a href=\"#impl-From%3CRotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#227\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(q: <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Rotation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Unit%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#28\">Source</a><a href=\"#impl-Hash-for-Unit%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#28\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Isometry%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#453-465\">Source</a><a href=\"#impl-Mul%3C%26Isometry%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#453-465\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#453-465\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Isometry<T, Unit<Quaternion<T>>, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Matrix%3CT,+Const%3Cnalgebra::::base::dimension::U3::%7Bconstant%230%7D%3E,+Const%3C1%3E,+SB%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#399-405\">Source</a><a href=\"#impl-Mul%3C%26Matrix%3CT,+Const%3Cnalgebra::::base::dimension::U3::%7Bconstant%230%7D%3E,+Const%3C1%3E,+SB%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, SB&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#399-405\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#399-405\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Matrix<T, Const<nalgebra::::base::dimension::U3::{constant#0}>, Const<1>, SB>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26OPoint%3CT,+Const%3C3%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#431-437\">Source</a><a href=\"#impl-Mul%3C%26OPoint%3CT,+Const%3C3%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#431-437\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#431-437\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b OPoint<T, Const<3>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Rotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#262-268\">Source</a><a href=\"#impl-Mul%3C%26Rotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#262-268\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#262-268\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Rotation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Similarity%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#526-535\">Source</a><a href=\"#impl-Mul%3C%26Similarity%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#526-535\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#526-535\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Similarity<T, Unit<Quaternion<T>>, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Transform%3CT,+C,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#243-254\">Source</a><a href=\"#impl-Mul%3C%26Transform%3CT,+C,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedAdd.html\" title=\"trait simba::scalar::field::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedMul.html\" title=\"trait simba::scalar::field::ClosedMul\">ClosedMul</a> + <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#243-254\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, &lt;C as <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html#associatedtype.Representative\" title=\"type nalgebra::geometry::transform::TCategoryMul::Representative\">Representative</a>, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#243-254\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Transform<T, C, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Translation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#377-386\">Source</a><a href=\"#impl-Mul%3C%26Translation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#377-386\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#377-386\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Translation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Unit%3CDualQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#463-469\">Source</a><a href=\"#impl-Mul%3C%26Unit%3CDualQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#463-469\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#463-469\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Unit<DualQuaternion<T>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Unit%3CMatrix%3CT,+Const%3Cnalgebra::::base::dimension::U3::%7Bconstant%230%7D%3E,+Const%3C1%3E,+SB%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#463-469\">Source</a><a href=\"#impl-Mul%3C%26Unit%3CMatrix%3CT,+Const%3Cnalgebra::::base::dimension::U3::%7Bconstant%230%7D%3E,+Const%3C1%3E,+SB%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T, SB&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#463-469\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#463-469\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Unit<Matrix<T, Const<nalgebra::::base::dimension::U3::{constant#0}>, Const<1>, SB>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#203-208\">Source</a><a href=\"#impl-Mul%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#203-208\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#203-208\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<&'b Unit<Quaternion<T>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CIsometry%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#453-465\">Source</a><a href=\"#impl-Mul%3CIsometry%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#453-465\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#453-465\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Isometry<T, Unit<Quaternion<T>>, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CMatrix%3CT,+Const%3Cnalgebra::::base::dimension::U3::%7Bconstant%230%7D%3E,+Const%3C1%3E,+SB%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#407-412\">Source</a><a href=\"#impl-Mul%3CMatrix%3CT,+Const%3Cnalgebra::::base::dimension::U3::%7Bconstant%230%7D%3E,+Const%3C1%3E,+SB%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, SB&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#407-412\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#407-412\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Matrix<T, Const<nalgebra::::base::dimension::U3::{constant#0}>, Const<1>, SB>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3COPoint%3CT,+Const%3C3%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#439-444\">Source</a><a href=\"#impl-Mul%3COPoint%3CT,+Const%3C3%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#439-444\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#439-444\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<OPoint<T, Const<3>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CRotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#270-275\">Source</a><a href=\"#impl-Mul%3CRotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#270-275\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#270-275\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Rotation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CSimilarity%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#526-535\">Source</a><a href=\"#impl-Mul%3CSimilarity%3CT,+Unit%3CQuaternion%3CT%3E%3E,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#526-535\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/similarity_ops.rs.html#526-535\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Similarity<T, Unit<Quaternion<T>>, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CTransform%3CT,+C,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#243-254\">Source</a><a href=\"#impl-Mul%3CTransform%3CT,+C,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> + <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedAdd.html\" title=\"trait simba::scalar::field::ClosedAdd\">ClosedAdd</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedMul.html\" title=\"trait simba::scalar::field::ClosedMul\">ClosedMul</a> + <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#243-254\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, &lt;C as <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html\" title=\"trait nalgebra::geometry::transform::TCategoryMul\">TCategoryMul</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;&gt;::<a class=\"associatedtype\" href=\"nalgebra/geometry/transform/trait.TCategoryMul.html#associatedtype.Representative\" title=\"type nalgebra::geometry::transform::TCategoryMul::Representative\">Representative</a>, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/transform_ops.rs.html#243-254\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T, C, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Transform<T, C, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CTranslation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#377-386\">Source</a><a href=\"#impl-Mul%3CTranslation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#377-386\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, 3&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/isometry_ops.rs.html#377-386\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    right: <a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, 3&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/translation/struct.Translation.html\" title=\"struct nalgebra::geometry::translation::Translation\">Translation</a>&lt;T, 3&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Translation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUnit%3CDualQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#471-476\">Source</a><a href=\"#impl-Mul%3CUnit%3CDualQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#471-476\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/dual_quaternion_ops.rs.html#471-476\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Unit<DualQuaternion<T>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CUnit%3CMatrix%3CT,+Const%3Cnalgebra::::base::dimension::U3::%7Bconstant%230%7D%3E,+Const%3C1%3E,+SB%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#471-476\">Source</a><a href=\"#impl-Mul%3CUnit%3CMatrix%3CT,+Const%3Cnalgebra::::base::dimension::U3::%7Bconstant%230%7D%3E,+Const%3C1%3E,+SB%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, SB&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#471-476\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#471-476\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Unit<Matrix<T, Const<nalgebra::::base::dimension::U3::{constant#0}>, Const<1>, SB>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#210-214\">Source</a><a href=\"#impl-Mul-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#210-214\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#210-214\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26Rotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#650-657\">Source</a><a href=\"#impl-MulAssign%3C%26Rotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#650-657\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&'b Rotation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#620-627\">Source</a><a href=\"#impl-MulAssign%3C%26Unit%3CQuaternion%3CT%3E%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'b, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;&amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#620-627\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: &amp;'b <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<&'b Unit<Quaternion<T>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CRotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#659-662\">Source</a><a href=\"#impl-MulAssign%3CRotation%3CT,+3%3E%3E-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#659-662\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Rotation<T, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#629-632\">Source</a><a href=\"#impl-MulAssign-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_ops.rs.html#629-632\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#858-860\">Source</a><a href=\"#impl-One-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#863\">Source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#118\">Source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/num_traits/identities.rs.html#128-130\">Source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details></div></details>","One","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1074\">Source</a><a href=\"#impl-PartialEq-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedNeg.html\" title=\"trait simba::scalar::field::ClosedNeg\">ClosedNeg</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1076\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEq-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1743\">Source</a><a href=\"#impl-RelativeEq-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>&lt;Epsilon = T&gt; + <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_relative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1745\">Source</a><a href=\"#method.default_max_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\" class=\"fn\">default_max_relative</a>() -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default relative tolerance for testing values that are far-apart. <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1750-1755\">Source</a><a href=\"#method.relative_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" class=\"fn\">relative_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;,\n    epsilon: &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses a relative comparison if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/relative_eq.rs.html#22-27\">Source</a><a href=\"#method.relative_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#method.relative_ne\" class=\"fn\">relative_ne</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>,\n    epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" title=\"method approx::relative_eq::RelativeEq::relative_eq\"><code>RelativeEq::relative_eq</code></a>.</div></details></div></details>","RelativeEq","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Unit%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#50\">Source</a><a href=\"#impl-Serialize-for-Unit%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#51-53\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SimdValue-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_simba.rs.html#50-52\">Source</a><a href=\"#impl-SimdValue-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Element\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_simba.rs.html#54\">Source</a><a href=\"#associatedtype.Element\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" class=\"associatedtype\">Element</a> = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;&lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>&gt;&gt;</h4></section></summary><div class='docblock'>The type of the elements of each lane of this SIMD value.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.SimdBool\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_simba.rs.html#55\">Source</a><a href=\"#associatedtype.SimdBool\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" class=\"associatedtype\">SimdBool</a> = &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a></h4></section></summary><div class='docblock'>Type of the result of comparing two SIMD values like <code>self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_simba.rs.html#58\">Source</a><a href=\"#method.lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.lanes\" class=\"fn\">lanes</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of lanes of this SIMD value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_simba.rs.html#63\">Source</a><a href=\"#method.splat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.splat\" class=\"fn\">splat</a>(\n    val: &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Initializes an SIMD value with each lanes set to <code>val</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_simba.rs.html#68\">Source</a><a href=\"#method.extract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract\" class=\"fn\">extract</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_simba.rs.html#73\">Source</a><a href=\"#method.extract_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.extract_unchecked\" class=\"fn\">extract_unchecked</a>(\n    &amp;self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n) -&gt; &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a></h4></section></summary><div class='docblock'>Extracts the i-th lane of <code>self</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_simba.rs.html#78\">Source</a><a href=\"#method.replace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace\" class=\"fn\">replace</a>(\n    &amp;mut self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n    val: &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>,\n)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_simba.rs.html#83\">Source</a><a href=\"#method.replace_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.replace_unchecked\" class=\"fn\">replace_unchecked</a>(\n    &amp;mut self,\n    i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n    val: &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>,\n)</h4></section></summary><div class='docblock'>Replaces the i-th lane of <code>self</code> by <code>val</code> without bound-checking.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.select\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_simba.rs.html#89\">Source</a><a href=\"#method.select\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.select\" class=\"fn\">select</a>(\n    self,\n    cond: &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.SimdBool\" title=\"type simba::simd::simd_value::SimdValue::SimdBool\">SimdBool</a>,\n    other: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class='docblock'>Merges <code>self</code> and <code>other</code> depending on the lanes of <code>cond</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#tymethod.select\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_value.rs.html#39-41\">Source</a><a href=\"#method.map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.map_lanes\" class=\"fn\">map_lanes</a>(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.map_lanes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip_map_lanes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/simd/simd_value.rs.html#58-64\">Source</a><a href=\"#method.zip_map_lanes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.zip_map_lanes\" class=\"fn\">zip_map_lanes</a>(\n    self,\n    b: Self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>, Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>) -&gt; Self::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>,\n) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Applies a function to each lane of <code>self</code> paired with the corresponding lane of <code>b</code>. <a href=\"simba/simd/simd_value/trait.SimdValue.html#method.zip_map_lanes\">Read more</a></div></details></div></details>","SimdValue","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CIsometry%3CT2,+R,+3%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#96-100\">Source</a><a href=\"#impl-SubsetOf%3CIsometry%3CT2,+R,+3%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, R&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T2, R, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T2, 3&gt; + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#103\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T2, R, 3&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#108\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(iso: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T2, R, 3&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#113\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(iso: &amp;<a class=\"struct\" href=\"nalgebra/geometry/isometry/struct.Isometry.html\" title=\"struct nalgebra::geometry::isometry::Isometry\">Isometry</a>&lt;T2, R, 3&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Isometry<T2, R, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CMatrix%3CT2,+Const%3Cnalgebra::::base::dimension::U4::%7Bconstant%230%7D%3E,+Const%3Cnalgebra::::base::dimension::U4::%7Bconstant%230%7D%3E,+ArrayStorage%3CT2,+4,+4%3E%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#184\">Source</a><a href=\"#impl-SubsetOf%3CMatrix%3CT2,+Const%3Cnalgebra::::base::dimension::U4::%7Bconstant%230%7D%3E,+Const%3Cnalgebra::::base::dimension::U4::%7Bconstant%230%7D%3E,+ArrayStorage%3CT2,+4,+4%3E%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T2, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U4::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U4::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T2, 4, 4&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#186\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T2, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U4::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U4::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T2, 4, 4&gt;&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#191\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(\n    m: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T2, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U4::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U4::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T2, 4, 4&gt;&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#196\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(\n    m: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T2, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U4::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U4::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T2, 4, 4&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Matrix<T2, Const<nalgebra::::base::dimension::U4::{constant#0}>, Const<nalgebra::::base::dimension::U4::{constant#0}>, ArrayStorage<T2, 4, 4>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CRotation%3CT2,+3%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#73-76\">Source</a><a href=\"#impl-SubsetOf%3CRotation%3CT2,+3%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T2, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#79\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T2, 3&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#85\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(rot: &amp;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T2, 3&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#90\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(rot: &amp;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T2, 3&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Rotation<T2, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CSimilarity%3CT2,+R,+3%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#140-144\">Source</a><a href=\"#impl-SubsetOf%3CSimilarity%3CT2,+R,+3%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, R&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T2, R, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    R: <a class=\"trait\" href=\"nalgebra/geometry/abstract_rotation/trait.AbstractRotation.html\" title=\"trait nalgebra::geometry::abstract_rotation::AbstractRotation\">AbstractRotation</a>&lt;T2, 3&gt; + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#147\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T2, R, 3&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#152\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(sim: &amp;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T2, R, 3&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#157\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(sim: &amp;<a class=\"struct\" href=\"nalgebra/geometry/similarity/struct.Similarity.html\" title=\"struct nalgebra::geometry::similarity::Similarity\">Similarity</a>&lt;T2, R, 3&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Similarity<T2, R, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CTransform%3CT2,+C,+3%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#162-166\">Source</a><a href=\"#impl-SubsetOf%3CTransform%3CT2,+C,+3%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, C&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T2, C, 3&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,\n    C: <a class=\"trait\" href=\"nalgebra/geometry/transform/trait.SuperTCategoryOf.html\" title=\"trait nalgebra::geometry::transform::SuperTCategoryOf\">SuperTCategoryOf</a>&lt;<a class=\"enum\" href=\"nalgebra/geometry/transform/enum.TAffine.html\" title=\"enum nalgebra::geometry::transform::TAffine\">TAffine</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#169\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T2, C, 3&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#174\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(t: &amp;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T2, C, 3&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#179\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(t: &amp;<a class=\"struct\" href=\"nalgebra/geometry/transform/struct.Transform.html\" title=\"struct nalgebra::geometry::transform::Transform\">Transform</a>&lt;T2, C, 3&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Transform<T2, C, 3>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CUnit%3CDualQuaternion%3CT2%3E%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#118-121\">Source</a><a href=\"#impl-SubsetOf%3CUnit%3CDualQuaternion%3CT2%3E%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T2&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    T2: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#124\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T2&gt;&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#130\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(dq: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T2&gt;&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#135\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(\n    dq: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/dual_quaternion/struct.DualQuaternion.html\" title=\"struct nalgebra::geometry::dual_quaternion::DualQuaternion\">DualQuaternion</a>&lt;T2&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Unit<DualQuaternion<T2>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubsetOf%3CUnit%3CQuaternion%3CT2%3E%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#52-55\">Source</a><a href=\"#impl-SubsetOf%3CUnit%3CQuaternion%3CT2%3E%3E%3E-for-Unit%3CQuaternion%3CT1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; <a class=\"trait\" href=\"simba/scalar/subset/trait.SubsetOf.html\" title=\"trait simba::scalar::subset::SubsetOf\">SubsetOf</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T2&gt;&gt;&gt; for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;<div class=\"where\">where\n    T1: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a>,\n    T2: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T1&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#58\">Source</a><a href=\"#method.to_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.to_superset\" class=\"fn\">to_superset</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T2&gt;&gt;</h4></section></summary><div class='docblock'>The inclusion map: converts <code>self</code> to the equivalent element of its superset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_subset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#63\">Source</a><a href=\"#method.is_in_subset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.is_in_subset\" class=\"fn\">is_in_subset</a>(uq: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T2&gt;&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>element</code> is actually part of the subset <code>Self</code> (and can be converted to it).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_conversion.rs.html#68\">Source</a><a href=\"#method.from_superset_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#tymethod.from_superset_unchecked\" class=\"fn\">from_superset_unchecked</a>(uq: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T2&gt;&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T1&gt;&gt;</h4></section></summary><div class='docblock'>Use with care! Same as <code>self.to_superset</code> but without any property checks. Always succeeds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_superset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/simba/scalar/subset.rs.html#32\">Source</a><a href=\"#method.from_superset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\" class=\"fn\">from_superset</a>(element: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>The inverse inclusion map: attempts to construct <code>self</code> from the equivalent element of its\nsuperset. <a href=\"simba/scalar/subset/trait.SubsetOf.html#method.from_superset\">Read more</a></div></details></div></details>","SubsetOf<Unit<Quaternion<T2>>>","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UlpsEq-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1761\">Source</a><a href=\"#impl-UlpsEq-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>&lt;Epsilon = T&gt; + <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_ulps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1763\">Source</a><a href=\"#method.default_max_ulps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\" class=\"fn\">default_max_ulps</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The default ULPs to tolerate when testing values that are far-apart. <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1768\">Source</a><a href=\"#method.ulps_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" class=\"fn\">ulps_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;,\n    epsilon: &lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt; as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses units in the last place (ULP) if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/ulps_eq.rs.html#23\">Source</a><a href=\"#method.ulps_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#method.ulps_ne\" class=\"fn\">ulps_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" title=\"method approx::ulps_eq::UlpsEq::ulps_eq\"><code>UlpsEq::ulps_eq</code></a>.</div></details></div></details>","UlpsEq","arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1109-1111\">Source</a><a href=\"#impl-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.angle\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1124\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.angle\" class=\"fn\">angle</a>(&amp;self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>The rotation angle in [0; pi] of this unit quaternion.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axis = Unit::new_normalize(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>axis, <span class=\"number\">1.78</span>);\n<span class=\"macro\">assert_eq!</span>(rot.angle(), <span class=\"number\">1.78</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.quaternion\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1141\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.quaternion\" class=\"fn\">quaternion</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>The underlying quaternion.</p>\n<p>Same as <code>self.as_ref()</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axis = UnitQuaternion::identity();\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">*</span>axis.quaternion(), Quaternion::new(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conjugate\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1157\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.conjugate\" class=\"fn\">conjugate</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the conjugate of this unit quaternion.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axis = Unit::new_normalize(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>axis, <span class=\"number\">1.78</span>);\n<span class=\"kw\">let </span>conj = rot.conjugate();\n<span class=\"macro\">assert_eq!</span>(conj, UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>-axis, <span class=\"number\">1.78</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1174\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.inverse\" class=\"fn\">inverse</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Inverts this quaternion if it is not zero.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axis = Unit::new_normalize(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>axis, <span class=\"number\">1.78</span>);\n<span class=\"kw\">let </span>inv = rot.inverse();\n<span class=\"macro\">assert_eq!</span>(rot * inv, UnitQuaternion::identity());\n<span class=\"macro\">assert_eq!</span>(inv * rot, UnitQuaternion::identity());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.angle_to\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1190\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.angle_to\" class=\"fn\">angle_to</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;) -&gt; T</h4></section></summary><div class=\"docblock\"><p>The rotation angle needed to make <code>self</code> and <code>other</code> coincide.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot1 = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::y_axis(), <span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>rot2 = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::x_axis(), <span class=\"number\">0.1</span>);\n<span class=\"macro\">assert_relative_eq!</span>(rot1.angle_to(<span class=\"kw-2\">&amp;</span>rot2), <span class=\"number\">1.0045657</span>, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotation_to\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1210\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.rotation_to\" class=\"fn\">rotation_to</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>The unit quaternion needed to make <code>self</code> and <code>other</code> coincide.</p>\n<p>The result is such that: <code>self.rotation_to(other) * self == other</code>.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot1 = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::y_axis(), <span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>rot2 = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::x_axis(), <span class=\"number\">0.1</span>);\n<span class=\"kw\">let </span>rot_to = rot1.rotation_to(<span class=\"kw-2\">&amp;</span>rot2);\n<span class=\"macro\">assert_relative_eq!</span>(rot_to * rot1, rot2, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1227\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.lerp\" class=\"fn\">lerp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, t: T) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Linear interpolation between two unit quaternions.</p>\n<p>The result is not normalized.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>q1 = UnitQuaternion::new_normalize(Quaternion::new(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>));\n<span class=\"kw\">let </span>q2 = UnitQuaternion::new_normalize(Quaternion::new(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>));\n<span class=\"macro\">assert_eq!</span>(q1.lerp(<span class=\"kw-2\">&amp;</span>q2, <span class=\"number\">0.1</span>), Quaternion::new(<span class=\"number\">0.9</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nlerp\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1244\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.nlerp\" class=\"fn\">nlerp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, t: T) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Normalized linear interpolation between two unit quaternions.</p>\n<p>This is the same as <code>self.lerp</code> except that the result is normalized.</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>q1 = UnitQuaternion::new_normalize(Quaternion::new(<span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>));\n<span class=\"kw\">let </span>q2 = UnitQuaternion::new_normalize(Quaternion::new(<span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>));\n<span class=\"macro\">assert_eq!</span>(q1.nlerp(<span class=\"kw-2\">&amp;</span>q2, <span class=\"number\">0.1</span>), UnitQuaternion::new_normalize(Quaternion::new(<span class=\"number\">0.9</span>, <span class=\"number\">0.1</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>)));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slerp\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1270-1272\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.slerp\" class=\"fn\">slerp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;, t: T) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Spherical linear interpolation between two unit quaternions.</p>\n<p>Panics if the angle between both quaternion is 180 degrees (in which case the interpolation\nis not well-defined). Use <code>.try_slerp</code> instead to avoid the panic.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples:</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>q1 = UnitQuaternion::from_euler_angles(std::f32::consts::FRAC_PI_4, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>);\n<span class=\"kw\">let </span>q2 = UnitQuaternion::from_euler_angles(-std::f32::consts::PI, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>);\n\n<span class=\"kw\">let </span>q = q1.slerp(<span class=\"kw-2\">&amp;</span>q2, <span class=\"number\">1.0 </span>/ <span class=\"number\">3.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(q.euler_angles(), (std::f32::consts::FRAC_PI_2, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_slerp\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1290-1292\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.try_slerp\" class=\"fn\">try_slerp</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;,\n    t: T,\n    epsilon: T,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Computes the spherical linear interpolation between two unit quaternions or returns <code>None</code>\nif both quaternions are approximately 180 degrees apart (in which case the interpolation is\nnot well-defined).</p>\n<h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">§</a>Arguments</h5>\n<ul>\n<li><code>self</code>: the first quaternion to interpolate from.</li>\n<li><code>other</code>: the second quaternion to interpolate toward.</li>\n<li><code>t</code>: the interpolation parameter. Should be between 0 and 1.</li>\n<li><code>epsilon</code>: the value below which the sinus of the angle separating both quaternion\nmust be to return <code>None</code>.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conjugate_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1313\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.conjugate_mut\" class=\"fn\">conjugate_mut</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Compute the conjugate of this unit quaternion in-place.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1330\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.inverse_mut\" class=\"fn\">inverse_mut</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Inverts this quaternion if it is not zero.</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axisangle = Vector3::new(<span class=\"number\">0.1</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.3</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>rot = UnitQuaternion::new(axisangle);\nrot.inverse_mut();\n<span class=\"macro\">assert_relative_eq!</span>(rot * UnitQuaternion::new(axisangle), UnitQuaternion::identity());\n<span class=\"macro\">assert_relative_eq!</span>(UnitQuaternion::new(axisangle) * rot, UnitQuaternion::identity());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.axis\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1350-1352\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.axis\" class=\"fn\">axis</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>The rotation axis of this unit quaternion or <code>None</code> if the rotation is zero.</p>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axis = Unit::new_normalize(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>angle = <span class=\"number\">1.2</span>;\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>axis, angle);\n<span class=\"macro\">assert_eq!</span>(rot.axis(), <span class=\"prelude-val\">Some</span>(axis));\n\n<span class=\"comment\">// Case with a zero angle.\n</span><span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>axis, <span class=\"number\">0.0</span>);\n<span class=\"macro\">assert!</span>(rot.axis().is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scaled_axis\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1375-1377\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.scaled_axis\" class=\"fn\">scaled_axis</a>(\n    &amp;self,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>The rotation axis of this unit quaternion multiplied by the rotation angle.</p>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axisangle = Vector3::new(<span class=\"number\">0.1</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.3</span>);\n<span class=\"kw\">let </span>rot = UnitQuaternion::new(axisangle);\n<span class=\"macro\">assert_relative_eq!</span>(rot.scaled_axis(), axisangle, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.axis_angle\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1404-1406\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.axis_angle\" class=\"fn\">axis_angle</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;&gt;, T)&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>The rotation axis and angle in ]0, pi] of this unit quaternion.</p>\n<p>Returns <code>None</code> if the angle is zero.</p>\n<h5 id=\"example-11\"><a class=\"doc-anchor\" href=\"#example-11\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axis = Unit::new_normalize(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>angle = <span class=\"number\">1.2</span>;\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>axis, angle);\n<span class=\"macro\">assert_eq!</span>(rot.axis_angle(), <span class=\"prelude-val\">Some</span>((axis, angle)));\n\n<span class=\"comment\">// Case with a zero angle.\n</span><span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>axis, <span class=\"number\">0.0</span>);\n<span class=\"macro\">assert!</span>(rot.axis_angle().is_none());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exp\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1416\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.exp\" class=\"fn\">exp</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the exponential of a quaternion.</p>\n<p>Note that this function yields a <code>Quaternion&lt;T&gt;</code> because it loses the unit property.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ln\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1436-1438\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.ln\" class=\"fn\">ln</a>(&amp;self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Compute the natural logarithm of a quaternion.</p>\n<p>Note that this function yields a <code>Quaternion&lt;T&gt;</code> because it loses the unit property.\nThe vector part of the return value corresponds to the axis-angle representation (divided\nby 2.0) of this unit quaternion.</p>\n<h5 id=\"example-12\"><a class=\"doc-anchor\" href=\"#example-12\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axisangle = Vector3::new(<span class=\"number\">0.1</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.3</span>);\n<span class=\"kw\">let </span>q = UnitQuaternion::new(axisangle);\n<span class=\"macro\">assert_relative_eq!</span>(q.ln().vector().into_owned(), axisangle, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.powf\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1465-1467\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.powf\" class=\"fn\">powf</a>(&amp;self, n: T) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Raise the quaternion to a given floating power.</p>\n<p>This returns the unit quaternion that identifies a rotation with axis <code>self.axis()</code> and\nangle <code>self.angle() × n</code>.</p>\n<h5 id=\"example-13\"><a class=\"doc-anchor\" href=\"#example-13\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axis = Unit::new_normalize(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>angle = <span class=\"number\">1.2</span>;\n<span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>axis, angle);\n<span class=\"kw\">let </span>pow = rot.powf(<span class=\"number\">2.0</span>);\n<span class=\"macro\">assert_relative_eq!</span>(pow.axis().unwrap(), axis, epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_eq!</span>(pow.angle(), <span class=\"number\">2.4</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_rotation_matrix\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1494\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.to_rotation_matrix\" class=\"fn\">to_rotation_matrix</a>(self) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;</h4></section></summary><div class=\"docblock\"><p>Builds a rotation matrix from this unit quaternion.</p>\n<h5 id=\"example-14\"><a class=\"doc-anchor\" href=\"#example-14\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>q = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::z_axis(), f32::consts::FRAC_PI_6);\n<span class=\"kw\">let </span>rot = q.to_rotation_matrix();\n<span class=\"kw\">let </span>expected = Matrix3::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,      <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>, <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">1.0</span>);\n\n<span class=\"macro\">assert_relative_eq!</span>(<span class=\"kw-2\">*</span>rot.matrix(), expected, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_euler_angles\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1529-1531\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.to_euler_angles\" class=\"fn\">to_euler_angles</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(T, T, T)</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This is renamed to use <code>.euler_angles()</code>.</span></div></span></summary><div class=\"docblock\"><p>Converts this unit quaternion into its equivalent Euler angles.</p>\n<p>The angles are produced in the form (roll, pitch, yaw).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.euler_angles\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1552-1554\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.euler_angles\" class=\"fn\">euler_angles</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(T, T, T)</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Retrieves the euler angles corresponding to this unit quaternion.</p>\n<p>The angles are produced in the form (roll, pitch, yaw).</p>\n<h5 id=\"example-15\"><a class=\"doc-anchor\" href=\"#example-15\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = UnitQuaternion::from_euler_angles(<span class=\"number\">0.1</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.3</span>);\n<span class=\"kw\">let </span>euler = rot.euler_angles();\n<span class=\"macro\">assert_relative_eq!</span>(euler.<span class=\"number\">0</span>, <span class=\"number\">0.1</span>, epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(euler.<span class=\"number\">1</span>, <span class=\"number\">0.2</span>, epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(euler.<span class=\"number\">2</span>, <span class=\"number\">0.3</span>, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_homogeneous\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1577\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.to_homogeneous\" class=\"fn\">to_homogeneous</a>(\n    self,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U4::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U4::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 4, 4&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Converts this unit quaternion into its equivalent homogeneous transformation matrix.</p>\n<h5 id=\"example-16\"><a class=\"doc-anchor\" href=\"#example-16\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::z_axis(), f32::consts::FRAC_PI_6);\n<span class=\"kw\">let </span>expected = Matrix4::new(<span class=\"number\">0.8660254</span>, -<span class=\"number\">0.5</span>,      <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.5</span>,       <span class=\"number\">0.8660254</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">1.0</span>, <span class=\"number\">0.0</span>,\n                            <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>,       <span class=\"number\">0.0</span>, <span class=\"number\">1.0</span>);\n\n<span class=\"macro\">assert_relative_eq!</span>(rot.to_homogeneous(), expected, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_point\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1598\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.transform_point\" class=\"fn\">transform_point</a>(&amp;self, pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Rotate a point by this unit quaternion.</p>\n<p>This is the same as the multiplication <code>self * pt</code>.</p>\n<h5 id=\"example-17\"><a class=\"doc-anchor\" href=\"#example-17\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::y_axis(), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>transformed_point = rot.transform_point(<span class=\"kw-2\">&amp;</span>Point3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n\n<span class=\"macro\">assert_relative_eq!</span>(transformed_point, Point3::new(<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, -<span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transform_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1619\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.transform_vector\" class=\"fn\">transform_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Rotate a vector by this unit quaternion.</p>\n<p>This is the same as the multiplication <code>self * v</code>.</p>\n<h5 id=\"example-18\"><a class=\"doc-anchor\" href=\"#example-18\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::y_axis(), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>transformed_vector = rot.transform_vector(<span class=\"kw-2\">&amp;</span>Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n\n<span class=\"macro\">assert_relative_eq!</span>(transformed_vector, Vector3::new(<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, -<span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_point\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1640\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.inverse_transform_point\" class=\"fn\">inverse_transform_point</a>(\n    &amp;self,\n    pt: &amp;<a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/geometry/point/struct.OPoint.html\" title=\"struct nalgebra::geometry::point::OPoint\">OPoint</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;3&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Rotate a point by the inverse of this unit quaternion. This may be\ncheaper than inverting the unit quaternion and transforming the\npoint.</p>\n<h5 id=\"example-19\"><a class=\"doc-anchor\" href=\"#example-19\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::y_axis(), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>transformed_point = rot.inverse_transform_point(<span class=\"kw-2\">&amp;</span>Point3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n\n<span class=\"macro\">assert_relative_eq!</span>(transformed_point, Point3::new(-<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1663\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.inverse_transform_vector\" class=\"fn\">inverse_transform_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Rotate a vector by the inverse of this unit quaternion. This may be\ncheaper than inverting the unit quaternion and transforming the\nvector.</p>\n<h5 id=\"example-20\"><a class=\"doc-anchor\" href=\"#example-20\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::y_axis(), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>transformed_vector = rot.inverse_transform_vector(<span class=\"kw-2\">&amp;</span>Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n\n<span class=\"macro\">assert_relative_eq!</span>(transformed_vector, Vector3::new(-<span class=\"number\">3.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">1.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse_transform_unit_vector\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1684\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.inverse_transform_unit_vector\" class=\"fn\">inverse_transform_unit_vector</a>(\n    &amp;self,\n    v: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Rotate a vector by the inverse of this unit quaternion. This may be\ncheaper than inverting the unit quaternion and transforming the\nvector.</p>\n<h5 id=\"example-21\"><a class=\"doc-anchor\" href=\"#example-21\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>Vector3::z_axis(), f32::consts::FRAC_PI_2);\n<span class=\"kw\">let </span>transformed_vector = rot.inverse_transform_unit_vector(<span class=\"kw-2\">&amp;</span>Vector3::x_axis());\n\n<span class=\"macro\">assert_relative_eq!</span>(transformed_vector, -Vector3::y_axis(), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append_axisangle_linearized\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1693\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.append_axisangle_linearized\" class=\"fn\">append_axisangle_linearized</a>(\n    &amp;self,\n    axisangle: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Appends to <code>self</code> a rotation given in the axis-angle form, using a linearized formulation.</p>\n<p>This is faster, but approximate, way to compute <code>UnitQuaternion::new(axisangle) * self</code>.</p>\n</div></details></div></details>",0,"arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#200-202\">Source</a><a href=\"#impl-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,\n    &lt;T as <a class=\"trait\" href=\"simba/simd/simd_value/trait.SimdValue.html\" title=\"trait simba::simd::simd_value::SimdValue\">SimdValue</a>&gt;::<a class=\"associatedtype\" href=\"simba/simd/simd_value/trait.SimdValue.html#associatedtype.Element\" title=\"type simba::simd::simd_value::SimdValue::Element\">Element</a>: <a class=\"trait\" href=\"simba/simd/simd_real/trait.SimdRealField.html\" title=\"trait simba::simd::simd_real::SimdRealField\">SimdRealField</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.identity\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#220\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.identity\" class=\"fn\">identity</a>() -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>The rotation identity.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>q = UnitQuaternion::identity();\n<span class=\"kw\">let </span>q2 = UnitQuaternion::new(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>v = Vector3::new_random();\n<span class=\"kw\">let </span>p = Point3::from(v);\n\n<span class=\"macro\">assert_eq!</span>(q * q2, q2);\n<span class=\"macro\">assert_eq!</span>(q2 * q, q2);\n<span class=\"macro\">assert_eq!</span>(q * v, v);\n<span class=\"macro\">assert_eq!</span>(q * p, p);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#234-236\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.cast\" class=\"fn\">cast</a>&lt;To&gt;(self) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;To&gt;&gt;<div class=\"where\">where\n    To: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/scalar/subset/trait.SupersetOf.html\" title=\"trait simba::scalar::subset::SupersetOf\">SupersetOf</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Cast the components of <code>self</code> to another type.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>q = UnitQuaternion::from_euler_angles(<span class=\"number\">1.0f64</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>q2 = q.cast::&lt;f32&gt;();\n<span class=\"macro\">assert_relative_eq!</span>(q2, UnitQuaternion::from_euler_angles(<span class=\"number\">1.0f32</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_axis_angle\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#265-267\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.from_axis_angle\" class=\"fn\">from_axis_angle</a>&lt;SB&gt;(\n    axis: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;,\n    angle: T,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new quaternion from a unit vector (the rotation axis) and an angle\n(the rotation angle).</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axis = Vector3::y_axis();\n<span class=\"kw\">let </span>angle = f32::consts::FRAC_PI_2;\n<span class=\"comment\">// Point and vector being transformed in the tests.\n</span><span class=\"kw\">let </span>pt = Point3::new(<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>vec = Vector3::new(<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>q = UnitQuaternion::from_axis_angle(<span class=\"kw-2\">&amp;</span>axis, angle);\n\n<span class=\"macro\">assert_eq!</span>(q.axis().unwrap(), axis);\n<span class=\"macro\">assert_eq!</span>(q.angle(), angle);\n<span class=\"macro\">assert_relative_eq!</span>(q * pt, Point3::new(<span class=\"number\">6.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">4.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(q * vec, Vector3::new(<span class=\"number\">6.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">4.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);\n\n<span class=\"comment\">// A zero vector yields an identity.\n</span><span class=\"macro\">assert_eq!</span>(UnitQuaternion::from_scaled_axis(Vector3::&lt;f32&gt;::zeros()), UnitQuaternion::identity());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_quaternion\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#279\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.from_quaternion\" class=\"fn\">from_quaternion</a>(q: <a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new unit quaternion from a quaternion.</p>\n<p>The input quaternion will be normalized.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_euler_angles\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#298\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.from_euler_angles\" class=\"fn\">from_euler_angles</a>(roll: T, pitch: T, yaw: T) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new unit quaternion from Euler angles.</p>\n<p>The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>rot = UnitQuaternion::from_euler_angles(<span class=\"number\">0.1</span>, <span class=\"number\">0.2</span>, <span class=\"number\">0.3</span>);\n<span class=\"kw\">let </span>euler = rot.euler_angles();\n<span class=\"macro\">assert_relative_eq!</span>(euler.<span class=\"number\">0</span>, <span class=\"number\">0.1</span>, epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(euler.<span class=\"number\">1</span>, <span class=\"number\">0.2</span>, epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(euler.<span class=\"number\">2</span>, <span class=\"number\">0.3</span>, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_basis_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#319\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.from_basis_unchecked\" class=\"fn\">from_basis_unchecked</a>(\n    basis: &amp;[<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 1&gt;&gt;; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">3</a>],\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Builds an unit quaternion from a basis assumed to be orthonormal.</p>\n<p>In order to get a valid unit-quaternion, the input must be an\northonormal basis, i.e., all vectors are normalized, and the are\nall orthogonal to each other. These invariants are not checked\nby this method.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rotation_matrix\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#339\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.from_rotation_matrix\" class=\"fn\">from_rotation_matrix</a>(rotmat: &amp;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;T, 3&gt;) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Builds an unit quaternion from a rotation matrix.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axis = Vector3::y_axis();\n<span class=\"kw\">let </span>angle = <span class=\"number\">0.1</span>;\n<span class=\"kw\">let </span>rot = Rotation3::from_axis_angle(<span class=\"kw-2\">&amp;</span>axis, angle);\n<span class=\"kw\">let </span>q = UnitQuaternion::from_rotation_matrix(<span class=\"kw-2\">&amp;</span>rot);\n<span class=\"macro\">assert_relative_eq!</span>(q.to_rotation_matrix(), rot, epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(q.axis().unwrap(), rot.axis().unwrap(), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(q.angle(), rot.angle(), epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_matrix\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#413-415\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.from_matrix\" class=\"fn\">from_matrix</a>(\n    m: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 3&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Builds an unit quaternion by extracting the rotation part of the given transformation <code>m</code>.</p>\n<p>This is an iterative method. See <code>.from_matrix_eps</code> to provide mover\nconvergence parameters and starting solution.\nThis implements “A Robust Method to Extract the Rotational Part of Deformations” by Müller et al.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_matrix_eps\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#432-434\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.from_matrix_eps\" class=\"fn\">from_matrix_eps</a>(\n    m: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/array_storage/struct.ArrayStorage.html\" title=\"struct nalgebra::base::array_storage::ArrayStorage\">ArrayStorage</a>&lt;T, 3, 3&gt;&gt;,\n    eps: T,\n    max_iter: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>,\n    guess: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Builds an unit quaternion by extracting the rotation part of the given transformation <code>m</code>.</p>\n<p>This implements “A Robust Method to Extract the Rotational Part of Deformations” by Müller et al.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">§</a>Parameters</h5>\n<ul>\n<li><code>m</code>: the matrix from which the rotational part is to be extracted.</li>\n<li><code>eps</code>: the angular errors tolerated between the current rotation and the optimal one.</li>\n<li><code>max_iter</code>: the maximum number of iterations. Loops indefinitely until convergence if set to <code>0</code>.</li>\n<li><code>guess</code>: an estimate of the solution. Convergence will be significantly faster if an initial solution close\nto the actual solution is provided. Can be set to <code>UnitQuaternion::identity()</code> if no other\nguesses come to mind.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotation_between\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#455-459\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.rotation_between\" class=\"fn\">rotation_between</a>&lt;SB, SC&gt;(\n    a: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n    b: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SC&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,\n    SC: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>The unit quaternion needed to make <code>a</code> and <code>b</code> be collinear and point toward the same\ndirection. Returns <code>None</code> if both <code>a</code> and <code>b</code> are collinear and point to opposite directions, as then the\nrotation desired is not unique.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a = Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>b = Vector3::new(<span class=\"number\">3.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>);\n<span class=\"kw\">let </span>q = UnitQuaternion::rotation_between(<span class=\"kw-2\">&amp;</span>a, <span class=\"kw-2\">&amp;</span>b).unwrap();\n<span class=\"macro\">assert_relative_eq!</span>(q * a, b);\n<span class=\"macro\">assert_relative_eq!</span>(q.inverse() * b, a);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scaled_rotation_between\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#479-487\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.scaled_rotation_between\" class=\"fn\">scaled_rotation_between</a>&lt;SB, SC&gt;(\n    a: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n    b: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SC&gt;,\n    s: T,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,\n    SC: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and point toward the same\ndirection, raised to the power <code>s</code>.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a = Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>b = Vector3::new(<span class=\"number\">3.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>);\n<span class=\"kw\">let </span>q2 = UnitQuaternion::scaled_rotation_between(<span class=\"kw-2\">&amp;</span>a, <span class=\"kw-2\">&amp;</span>b, <span class=\"number\">0.2</span>).unwrap();\n<span class=\"kw\">let </span>q5 = UnitQuaternion::scaled_rotation_between(<span class=\"kw-2\">&amp;</span>a, <span class=\"kw-2\">&amp;</span>b, <span class=\"number\">0.5</span>).unwrap();\n<span class=\"macro\">assert_relative_eq!</span>(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(q5 * q5 * a, b, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotation_between_axis\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#514-521\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.rotation_between_axis\" class=\"fn\">rotation_between_axis</a>&lt;SB, SC&gt;(\n    a: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;,\n    b: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SC&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,\n    SC: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>The unit quaternion needed to make <code>a</code> and <code>b</code> be collinear and point toward the same\ndirection.</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a = Unit::new_normalize(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>b = Unit::new_normalize(Vector3::new(<span class=\"number\">3.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>));\n<span class=\"kw\">let </span>q = UnitQuaternion::rotation_between(<span class=\"kw-2\">&amp;</span>a, <span class=\"kw-2\">&amp;</span>b).unwrap();\n<span class=\"macro\">assert_relative_eq!</span>(q * a, b);\n<span class=\"macro\">assert_relative_eq!</span>(q.inverse() * b, a);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scaled_rotation_between_axis\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#541-549\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.scaled_rotation_between_axis\" class=\"fn\">scaled_rotation_between_axis</a>&lt;SB, SC&gt;(\n    na: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;&gt;,\n    nb: &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SC&gt;&gt;,\n    s: T,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,\n    SC: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>The smallest rotation needed to make <code>a</code> and <code>b</code> collinear and point toward the same\ndirection, raised to the power <code>s</code>.</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>a = Unit::new_normalize(Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"kw\">let </span>b = Unit::new_normalize(Vector3::new(<span class=\"number\">3.0</span>, <span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>));\n<span class=\"kw\">let </span>q2 = UnitQuaternion::scaled_rotation_between(<span class=\"kw-2\">&amp;</span>a, <span class=\"kw-2\">&amp;</span>b, <span class=\"number\">0.2</span>).unwrap();\n<span class=\"kw\">let </span>q5 = UnitQuaternion::scaled_rotation_between(<span class=\"kw-2\">&amp;</span>a, <span class=\"kw-2\">&amp;</span>b, <span class=\"number\">0.5</span>).unwrap();\n<span class=\"macro\">assert_relative_eq!</span>(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(q5 * q5 * a, b, epsilon = <span class=\"number\">1.0e-6</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.face_towards\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#600-603\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.face_towards\" class=\"fn\">face_towards</a>&lt;SB, SC&gt;(\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n    up: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SC&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,\n    SC: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates an unit quaternion that corresponds to the local frame of an observer standing at the\norigin and looking toward <code>dir</code>.</p>\n<p>It maps the <code>z</code> axis to the direction <code>dir</code>.</p>\n<h5 id=\"arguments\"><a class=\"doc-anchor\" href=\"#arguments\">§</a>Arguments</h5>\n<ul>\n<li>dir - The look direction. It does not need to be normalized.</li>\n<li>up - The vertical direction. It does not need to be normalized.\nThe only requirement of this parameter is to not be collinear to <code>dir</code>. Non-collinearity\nis not checked.</li>\n</ul>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>dir = Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>up = Vector3::y();\n\n<span class=\"kw\">let </span>q = UnitQuaternion::face_towards(<span class=\"kw-2\">&amp;</span>dir, <span class=\"kw-2\">&amp;</span>up);\n<span class=\"macro\">assert_relative_eq!</span>(q * Vector3::z(), dir.normalize());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_observer_frames\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#610-613\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.new_observer_frames\" class=\"fn\">new_observer_frames</a>&lt;SB, SC&gt;(\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n    up: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SC&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,\n    SC: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: renamed to <code>face_towards</code></span></div></span></summary><div class=\"docblock\"><p>Deprecated: Use <a href=\"nalgebra/base/unit/struct.Unit.html#method.face_towards\" title=\"associated function nalgebra::base::unit::Unit::face_towards\"><code>UnitQuaternion::face_towards</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.look_at_rh\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#641-644\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.look_at_rh\" class=\"fn\">look_at_rh</a>&lt;SB, SC&gt;(\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n    up: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SC&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,\n    SC: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Builds a right-handed look-at view matrix without translation.</p>\n<p>It maps the view direction <code>dir</code> to the <strong>negative</strong> <code>z</code> axis.\nThis conforms to the common notion of right handed look-at matrix from the computer\ngraphics community.</p>\n<h5 id=\"arguments-1\"><a class=\"doc-anchor\" href=\"#arguments-1\">§</a>Arguments</h5>\n<ul>\n<li>dir − The view direction. It does not need to be normalized.</li>\n<li>up - A vector approximately aligned with required the vertical axis. It does not need\nto be normalized. The only requirement of this parameter is to not be collinear to <code>dir</code>.</li>\n</ul>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>dir = Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>up = Vector3::y();\n\n<span class=\"kw\">let </span>q = UnitQuaternion::look_at_rh(<span class=\"kw-2\">&amp;</span>dir, <span class=\"kw-2\">&amp;</span>up);\n<span class=\"macro\">assert_relative_eq!</span>(q * dir.normalize(), -Vector3::z());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.look_at_lh\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#672-675\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.look_at_lh\" class=\"fn\">look_at_lh</a>&lt;SB, SC&gt;(\n    dir: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n    up: &amp;<a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SC&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,\n    SC: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Builds a left-handed look-at view matrix without translation.</p>\n<p>It maps the view direction <code>dir</code> to the <strong>positive</strong> <code>z</code> axis.\nThis conforms to the common notion of left handed look-at matrix from the computer\ngraphics community.</p>\n<h5 id=\"arguments-2\"><a class=\"doc-anchor\" href=\"#arguments-2\">§</a>Arguments</h5>\n<ul>\n<li>dir − The view direction. It does not need to be normalized.</li>\n<li>up - A vector approximately aligned with required the vertical axis. The only\nrequirement of this parameter is to not be collinear to <code>dir</code>.</li>\n</ul>\n<h5 id=\"example-11\"><a class=\"doc-anchor\" href=\"#example-11\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>dir = Vector3::new(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>, <span class=\"number\">3.0</span>);\n<span class=\"kw\">let </span>up = Vector3::y();\n\n<span class=\"kw\">let </span>q = UnitQuaternion::look_at_lh(<span class=\"kw-2\">&amp;</span>dir, <span class=\"kw-2\">&amp;</span>up);\n<span class=\"macro\">assert_relative_eq!</span>(q * dir.normalize(), Vector3::z());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#702-704\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.new\" class=\"fn\">new</a>&lt;SB&gt;(\n    axisangle: <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.</p>\n<p>If <code>axisangle</code> has a magnitude smaller than <code>T::default_epsilon()</code>, this returns the identity rotation.</p>\n<h5 id=\"example-12\"><a class=\"doc-anchor\" href=\"#example-12\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axisangle = Vector3::y() * f32::consts::FRAC_PI_2;\n<span class=\"comment\">// Point and vector being transformed in the tests.\n</span><span class=\"kw\">let </span>pt = Point3::new(<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>vec = Vector3::new(<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>q = UnitQuaternion::new(axisangle);\n\n<span class=\"macro\">assert_relative_eq!</span>(q * pt, Point3::new(<span class=\"number\">6.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">4.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(q * vec, Vector3::new(<span class=\"number\">6.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">4.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);\n\n<span class=\"comment\">// A zero vector yields an identity.\n</span><span class=\"macro\">assert_eq!</span>(UnitQuaternion::new(Vector3::&lt;f32&gt;::zeros()), UnitQuaternion::identity());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_eps\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#733-735\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.new_eps\" class=\"fn\">new_eps</a>&lt;SB&gt;(\n    axisangle: <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n    eps: T,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.</p>\n<p>If <code>axisangle</code> has a magnitude smaller than <code>eps</code>, this returns the identity rotation.</p>\n<h5 id=\"example-13\"><a class=\"doc-anchor\" href=\"#example-13\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axisangle = Vector3::y() * f32::consts::FRAC_PI_2;\n<span class=\"comment\">// Point and vector being transformed in the tests.\n</span><span class=\"kw\">let </span>pt = Point3::new(<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>vec = Vector3::new(<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>q = UnitQuaternion::new_eps(axisangle, <span class=\"number\">1.0e-6</span>);\n\n<span class=\"macro\">assert_relative_eq!</span>(q * pt, Point3::new(<span class=\"number\">6.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">4.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(q * vec, Vector3::new(<span class=\"number\">6.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">4.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);\n\n<span class=\"comment\">// An almost zero vector yields an identity.\n</span><span class=\"macro\">assert_eq!</span>(UnitQuaternion::new_eps(Vector3::new(<span class=\"number\">1.0e-8</span>, <span class=\"number\">1.0e-9</span>, <span class=\"number\">1.0e-7</span>), <span class=\"number\">1.0e-6</span>), UnitQuaternion::identity());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_scaled_axis\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#765-767\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.from_scaled_axis\" class=\"fn\">from_scaled_axis</a>&lt;SB&gt;(\n    axisangle: <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.</p>\n<p>If <code>axisangle</code> has a magnitude smaller than <code>T::default_epsilon()</code>, this returns the identity rotation.\nSame as <code>Self::new(axisangle)</code>.</p>\n<h5 id=\"example-14\"><a class=\"doc-anchor\" href=\"#example-14\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axisangle = Vector3::y() * f32::consts::FRAC_PI_2;\n<span class=\"comment\">// Point and vector being transformed in the tests.\n</span><span class=\"kw\">let </span>pt = Point3::new(<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>vec = Vector3::new(<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>q = UnitQuaternion::from_scaled_axis(axisangle);\n\n<span class=\"macro\">assert_relative_eq!</span>(q * pt, Point3::new(<span class=\"number\">6.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">4.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(q * vec, Vector3::new(<span class=\"number\">6.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">4.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);\n\n<span class=\"comment\">// A zero vector yields an identity.\n</span><span class=\"macro\">assert_eq!</span>(UnitQuaternion::from_scaled_axis(Vector3::&lt;f32&gt;::zeros()), UnitQuaternion::identity());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_scaled_axis_eps\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#795-797\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.from_scaled_axis_eps\" class=\"fn\">from_scaled_axis_eps</a>&lt;SB&gt;(\n    axisangle: <a class=\"struct\" href=\"nalgebra/base/matrix/struct.Matrix.html\" title=\"struct nalgebra::base::matrix::Matrix\">Matrix</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;1&gt;, SB&gt;,\n    eps: T,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    SB: <a class=\"trait\" href=\"nalgebra/base/storage/trait.Storage.html\" title=\"trait nalgebra::base::storage::Storage\">Storage</a>&lt;T, <a class=\"struct\" href=\"nalgebra/base/dimension/struct.Const.html\" title=\"struct nalgebra::base::dimension::Const\">Const</a>&lt;nalgebra::::base::dimension::U3::{constant#0}&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.</p>\n<p>If <code>axisangle</code> has a magnitude smaller than <code>eps</code>, this returns the identity rotation.\nSame as <code>Self::new_eps(axisangle, eps)</code>.</p>\n<h5 id=\"example-15\"><a class=\"doc-anchor\" href=\"#example-15\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>axisangle = Vector3::y() * f32::consts::FRAC_PI_2;\n<span class=\"comment\">// Point and vector being transformed in the tests.\n</span><span class=\"kw\">let </span>pt = Point3::new(<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>vec = Vector3::new(<span class=\"number\">4.0</span>, <span class=\"number\">5.0</span>, <span class=\"number\">6.0</span>);\n<span class=\"kw\">let </span>q = UnitQuaternion::from_scaled_axis_eps(axisangle, <span class=\"number\">1.0e-6</span>);\n\n<span class=\"macro\">assert_relative_eq!</span>(q * pt, Point3::new(<span class=\"number\">6.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">4.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);\n<span class=\"macro\">assert_relative_eq!</span>(q * vec, Vector3::new(<span class=\"number\">6.0</span>, <span class=\"number\">5.0</span>, -<span class=\"number\">4.0</span>), epsilon = <span class=\"number\">1.0e-6</span>);\n\n<span class=\"comment\">// An almost zero vector yields an identity.\n</span><span class=\"macro\">assert_eq!</span>(UnitQuaternion::from_scaled_axis_eps(Vector3::new(<span class=\"number\">1.0e-8</span>, <span class=\"number\">1.0e-9</span>, <span class=\"number\">1.0e-7</span>), <span class=\"number\">1.0e-6</span>), UnitQuaternion::identity());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mean_of\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion_construction.rs.html#827-829\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.mean_of\" class=\"fn\">mean_of</a>(\n    unit_quaternions: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;&gt;,\n) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Create the mean unit quaternion from a data structure implementing <code>IntoIterator</code>\nreturning unit quaternions.</p>\n<p>The method will panic if the iterator does not return any quaternions.</p>\n<p>Algorithm from: Oshman, Yaakov, and Avishy Carmi. “Attitude estimation from vector\nobservations using a genetic-algorithm-embedded quaternion particle filter.” Journal of\nGuidance, Control, and Dynamics 29.4 (2006): 879-891.</p>\n<h5 id=\"example-16\"><a class=\"doc-anchor\" href=\"#example-16\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>q1 = UnitQuaternion::from_euler_angles(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>);\n<span class=\"kw\">let </span>q2 = UnitQuaternion::from_euler_angles(-<span class=\"number\">0.1</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>);\n<span class=\"kw\">let </span>q3 = UnitQuaternion::from_euler_angles(<span class=\"number\">0.1</span>, <span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>);\n\n<span class=\"kw\">let </span>quat_vec = <span class=\"macro\">vec!</span>[q1, q2, q3];\n<span class=\"kw\">let </span>q_mean = UnitQuaternion::mean_of(quat_vec);\n\n<span class=\"kw\">let </span>euler_angles_mean = q_mean.euler_angles();\n<span class=\"macro\">assert_relative_eq!</span>(euler_angles_mean.<span class=\"number\">0</span>, <span class=\"number\">0.0</span>, epsilon = <span class=\"number\">1.0e-7</span>)</code></pre></div>\n</div></details></div></details>",0,"arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Unit%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#173\">Source</a><a href=\"#impl-Unit%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/unit/trait.Normed.html\" title=\"trait nalgebra::base::unit::Normed\">Normed</a>,</div></h3><div class=\"docblock\"><h4 id=\"construction-with-normalization\"><a class=\"doc-anchor\" href=\"#construction-with-normalization\">§</a>Construction with normalization</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_normalize\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#176\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.new_normalize\" class=\"fn\">new_normalize</a>(value: T) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Normalize the given vector and return it wrapped on a <code>Unit</code> structure.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#184-186\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.try_new\" class=\"fn\">try_new</a>(value: T, min_norm: &lt;T as <a class=\"trait\" href=\"nalgebra/base/unit/trait.Normed.html\" title=\"trait nalgebra::base::unit::Normed\">Normed</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/unit/trait.Normed.html#associatedtype.Norm\" title=\"type nalgebra::base::unit::Normed::Norm\">Norm</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;&gt;<div class=\"where\">where\n    &lt;T as <a class=\"trait\" href=\"nalgebra/base/unit/trait.Normed.html\" title=\"trait nalgebra::base::unit::Normed\">Normed</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/unit/trait.Normed.html#associatedtype.Norm\" title=\"type nalgebra::base::unit::Normed::Norm\">Norm</a>: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Attempts to normalize the given vector and return it wrapped on a <code>Unit</code> structure.</p>\n<p>Returns <code>None</code> if the norm was smaller or equal to <code>min_norm</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_and_get\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#193\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.new_and_get\" class=\"fn\">new_and_get</a>(value: T) -&gt; (<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;, &lt;T as <a class=\"trait\" href=\"nalgebra/base/unit/trait.Normed.html\" title=\"trait nalgebra::base::unit::Normed\">Normed</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/unit/trait.Normed.html#associatedtype.Norm\" title=\"type nalgebra::base::unit::Normed::Norm\">Norm</a>)</h4></section></summary><div class=\"docblock\"><p>Normalize the given vector and return it wrapped on a <code>Unit</code> structure and its norm.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new_and_get\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#203-205\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.try_new_and_get\" class=\"fn\">try_new_and_get</a>(\n    value: T,\n    min_norm: &lt;T as <a class=\"trait\" href=\"nalgebra/base/unit/trait.Normed.html\" title=\"trait nalgebra::base::unit::Normed\">Normed</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/unit/trait.Normed.html#associatedtype.Norm\" title=\"type nalgebra::base::unit::Normed::Norm\">Norm</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;, &lt;T as <a class=\"trait\" href=\"nalgebra/base/unit/trait.Normed.html\" title=\"trait nalgebra::base::unit::Normed\">Normed</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/unit/trait.Normed.html#associatedtype.Norm\" title=\"type nalgebra::base::unit::Normed::Norm\">Norm</a>)&gt;<div class=\"where\">where\n    &lt;T as <a class=\"trait\" href=\"nalgebra/base/unit/trait.Normed.html\" title=\"trait nalgebra::base::unit::Normed\">Normed</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/unit/trait.Normed.html#associatedtype.Norm\" title=\"type nalgebra::base::unit::Normed::Norm\">Norm</a>: <a class=\"trait\" href=\"simba/scalar/real/trait.RealField.html\" title=\"trait simba::scalar::real::RealField\">RealField</a>,</div></h4></section></summary><div class=\"docblock\"><p>Normalize the given vector and return it wrapped on a <code>Unit</code> structure and its norm.</p>\n<p>Returns <code>None</code> if the norm was smaller or equal to <code>min_norm</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.renormalize\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#224\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.renormalize\" class=\"fn\">renormalize</a>(&amp;mut self) -&gt; &lt;T as <a class=\"trait\" href=\"nalgebra/base/unit/trait.Normed.html\" title=\"trait nalgebra::base::unit::Normed\">Normed</a>&gt;::<a class=\"associatedtype\" href=\"nalgebra/base/unit/trait.Normed.html#associatedtype.Norm\" title=\"type nalgebra::base::unit::Normed::Norm\">Norm</a></h4></section></summary><div class=\"docblock\"><p>Normalizes this vector again. This is useful when repeated computations\nmight cause a drift in the norm because of float inaccuracies.</p>\n<p>Returns the norm before re-normalization. See <code>.renormalize_fast</code> for a faster alternative\nthat may be slightly less accurate if <code>self</code> drifted significantly from having a unit length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.renormalize_fast\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#234\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.renormalize_fast\" class=\"fn\">renormalize_fast</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Normalizes this vector again using a first-order Taylor approximation.\nThis is useful when repeated computations might cause a drift in the norm\nbecause of float inaccuracies.</p>\n</div></details></div></details>",0,"arci::UnitQuaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Unit%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#243\">Source</a><a href=\"#impl-Unit%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;</h3><div class=\"docblock\"><h4 id=\"data-extraction-and-construction-without-normalization\"><a class=\"doc-anchor\" href=\"#data-extraction-and-construction-without-normalization\">§</a>Data extraction and construction without normalization</h4></div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#246\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(value: T) -&gt; <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Wraps the given value, assuming it is already normalized.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ref_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#252\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.from_ref_unchecked\" class=\"fn\">from_ref_unchecked</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; &amp;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Wraps the given reference, assuming it is already normalized.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#258\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Retrieves the underlying value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#266\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.unwrap\" class=\"fn\">unwrap</a>(self) -&gt; T</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: use <code>.into_inner()</code> instead</span></div></span></summary><div class=\"docblock\"><p>Retrieves the underlying value.\nDeprecated: use <a href=\"nalgebra/base/unit/struct.Unit.html#method.into_inner\" title=\"method nalgebra::base::unit::Unit::into_inner\"><code>Unit::into_inner</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#274\">Source</a><h4 class=\"code-header\">pub fn <a href=\"nalgebra/base/unit/struct.Unit.html#tymethod.as_mut_unchecked\" class=\"fn\">as_mut_unchecked</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the underlying value. This is <code>_unchecked</code> because modifying\nthe underlying value in such a way that it no longer has unit length may lead to unexpected\nresults.</p>\n</div></details></div></details>",0,"arci::UnitQuaternion"],["<section id=\"impl-Copy-for-Unit%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/base/unit.rs.html#28\">Source</a><a href=\"#impl-Copy-for-Unit%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","arci::UnitQuaternion"],["<section id=\"impl-Eq-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/geometry/quaternion.rs.html#1083\">Source</a><a href=\"#impl-Eq-for-Unit%3CQuaternion%3CT%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;T&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"nalgebra/base/scalar/trait.Scalar.html\" title=\"trait nalgebra::base::scalar::Scalar\">Scalar</a> + <a class=\"trait\" href=\"simba/scalar/field/trait.ClosedNeg.html\" title=\"trait simba::scalar::field::ClosedNeg\">ClosedNeg</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","arci::UnitQuaternion"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[445352]}