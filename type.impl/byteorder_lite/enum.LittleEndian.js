(function() {
    var type_impls = Object.fromEntries([["byteorder_lite",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ByteOrder-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2057-2319\">Source</a><a href=\"#impl-ByteOrder-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"byteorder_lite/trait.ByteOrder.html\" title=\"trait byteorder_lite::ByteOrder\">ByteOrder</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2059-2061\">Source</a><a href=\"#method.read_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u16\" class=\"fn\">read_u16</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class='docblock'>Reads an unsigned 16 bit integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2064-2066\">Source</a><a href=\"#method.read_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u32\" class=\"fn\">read_u32</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Reads an unsigned 32 bit integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2069-2071\">Source</a><a href=\"#method.read_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u64\" class=\"fn\">read_u64</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Reads an unsigned 64 bit integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2074-2076\">Source</a><a href=\"#method.read_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u128\" class=\"fn\">read_u128</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Reads an unsigned 128 bit integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_uint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2079-2084\">Source</a><a href=\"#method.read_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_uint\" class=\"fn\">read_uint</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Reads an unsigned n-bytes integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_uint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_uint128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2087-2092\">Source</a><a href=\"#method.read_uint128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_uint128\" class=\"fn\">read_uint128</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class='docblock'>Reads an unsigned n-bytes integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_uint128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2095-2097\">Source</a><a href=\"#method.write_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u16\" class=\"fn\">write_u16</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2100-2102\">Source</a><a href=\"#method.write_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u32\" class=\"fn\">write_u32</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2105-2107\">Source</a><a href=\"#method.write_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u64\" class=\"fn\">write_u64</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2110-2112\">Source</a><a href=\"#method.write_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u128\" class=\"fn\">write_u128</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_uint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2115-2120\">Source</a><a href=\"#method.write_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_uint\" class=\"fn\">write_uint</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_uint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_uint128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2123-2128\">Source</a><a href=\"#method.write_uint128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_uint128\" class=\"fn\">write_uint128</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_uint128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u16_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2131-2133\">Source</a><a href=\"#method.read_u16_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u16_into\" class=\"fn\">read_u16_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>])</h4></section></summary><div class='docblock'>Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u16_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2136-2138\">Source</a><a href=\"#method.read_u32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u32_into\" class=\"fn\">read_u32_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>])</h4></section></summary><div class='docblock'>Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2141-2143\">Source</a><a href=\"#method.read_u64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u64_into\" class=\"fn\">read_u64_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>])</h4></section></summary><div class='docblock'>Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u128_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2146-2148\">Source</a><a href=\"#method.read_u128_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u128_into\" class=\"fn\">read_u128_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>])</h4></section></summary><div class='docblock'>Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_u128_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i16_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2151-2153\">Source</a><a href=\"#method.read_i16_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_i16_into\" class=\"fn\">read_i16_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>])</h4></section></summary><div class='docblock'>Reads signed 16 bit integers from <code>src</code> to <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_i16_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2156-2158\">Source</a><a href=\"#method.read_i32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_i32_into\" class=\"fn\">read_i32_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>])</h4></section></summary><div class='docblock'>Reads signed 32 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_i32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2161-2163\">Source</a><a href=\"#method.read_i64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_i64_into\" class=\"fn\">read_i64_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>])</h4></section></summary><div class='docblock'>Reads signed 64 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_i64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i128_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2166-2168\">Source</a><a href=\"#method.read_i128_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_i128_into\" class=\"fn\">read_i128_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>])</h4></section></summary><div class='docblock'>Reads signed 128 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_i128_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2171-2173\">Source</a><a href=\"#method.read_f32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_f32_into\" class=\"fn\">read_f32_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>])</h4></section></summary><div class='docblock'>Reads IEEE754 single-precision (4 bytes) floating point numbers from\n<code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_f32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2176-2178\">Source</a><a href=\"#method.read_f64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_f64_into\" class=\"fn\">read_f64_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>])</h4></section></summary><div class='docblock'>Reads IEEE754 single-precision (4 bytes) floating point numbers from\n<code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.read_f64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u16_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2181-2183\">Source</a><a href=\"#method.write_u16_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u16_into\" class=\"fn\">write_u16_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u16_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2186-2188\">Source</a><a href=\"#method.write_u32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u32_into\" class=\"fn\">write_u32_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2191-2193\">Source</a><a href=\"#method.write_u64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u64_into\" class=\"fn\">write_u64_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u128_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2196-2198\">Source</a><a href=\"#method.write_u128_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u128_into\" class=\"fn\">write_u128_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_u128_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i16_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2201-2203\">Source</a><a href=\"#method.write_i16_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_i16_into\" class=\"fn\">write_i16_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes signed 16 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_i16_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2206-2208\">Source</a><a href=\"#method.write_i32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_i32_into\" class=\"fn\">write_i32_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes signed 32 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_i32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2211-2213\">Source</a><a href=\"#method.write_i64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_i64_into\" class=\"fn\">write_i64_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes signed 64 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_i64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i128_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2216-2218\">Source</a><a href=\"#method.write_i128_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_i128_into\" class=\"fn\">write_i128_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes signed 128 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_i128_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_f32_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2221-2223\">Source</a><a href=\"#method.write_f32_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_f32_into\" class=\"fn\">write_f32_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes IEEE754 single-precision (4 bytes) floating point numbers from\n<code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_f32_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_f64_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2226-2228\">Source</a><a href=\"#method.write_f64_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_f64_into\" class=\"fn\">write_f64_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes IEEE754 double-precision (8 bytes) floating point numbers from\n<code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.write_f64_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2231-2237\">Source</a><a href=\"#method.from_slice_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_u16\" class=\"fn\">from_slice_u16</a>(numbers: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>])</h4></section></summary><div class='docblock'>Converts the given slice of unsigned 16 bit integers to a particular\nendianness. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_u16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2240-2246\">Source</a><a href=\"#method.from_slice_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_u32\" class=\"fn\">from_slice_u32</a>(numbers: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>])</h4></section></summary><div class='docblock'>Converts the given slice of unsigned 32 bit integers to a particular\nendianness. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_u32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2249-2255\">Source</a><a href=\"#method.from_slice_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_u64\" class=\"fn\">from_slice_u64</a>(numbers: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>])</h4></section></summary><div class='docblock'>Converts the given slice of unsigned 64 bit integers to a particular\nendianness. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_u64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_u128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2258-2264\">Source</a><a href=\"#method.from_slice_u128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_u128\" class=\"fn\">from_slice_u128</a>(numbers: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u128.html\">u128</a>])</h4></section></summary><div class='docblock'>Converts the given slice of unsigned 128 bit integers to a particular\nendianness. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_u128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2267-2273\">Source</a><a href=\"#method.from_slice_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_i16\" class=\"fn\">from_slice_i16</a>(numbers: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>])</h4></section></summary><div class='docblock'>Converts the given slice of signed 16 bit integers to a particular\nendianness. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_i16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2276-2282\">Source</a><a href=\"#method.from_slice_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_i32\" class=\"fn\">from_slice_i32</a>(numbers: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>])</h4></section></summary><div class='docblock'>Converts the given slice of signed 32 bit integers to a particular\nendianness. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_i32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2285-2291\">Source</a><a href=\"#method.from_slice_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_i64\" class=\"fn\">from_slice_i64</a>(numbers: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>])</h4></section></summary><div class='docblock'>Converts the given slice of signed 64 bit integers to a particular\nendianness. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_i64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2294-2300\">Source</a><a href=\"#method.from_slice_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_i128\" class=\"fn\">from_slice_i128</a>(numbers: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>])</h4></section></summary><div class='docblock'>Converts the given slice of signed 128 bit integers to a particular\nendianness. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2303-2309\">Source</a><a href=\"#method.from_slice_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_f32\" class=\"fn\">from_slice_f32</a>(numbers: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>])</h4></section></summary><div class='docblock'>Converts the given slice of IEEE754 single-precision (4 bytes) floating\npoint numbers to a particular endianness. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_f32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#2312-2318\">Source</a><a href=\"#method.from_slice_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_f64\" class=\"fn\">from_slice_f64</a>(numbers: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>])</h4></section></summary><div class='docblock'>Converts the given slice of IEEE754 double-precision (8 bytes) floating\npoint numbers to a particular endianness. <a href=\"byteorder_lite/trait.ByteOrder.html#tymethod.from_slice_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u24\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#197-199\">Source</a><a href=\"#method.read_u24\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_u24\" class=\"fn\">read_u24</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_u24\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u48\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#237-239\">Source</a><a href=\"#method.read_u48\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_u48\" class=\"fn\">read_u48</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class='docblock'>Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_u48\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u24\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#355-357\">Source</a><a href=\"#method.write_u24\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_u24\" class=\"fn\">write_u24</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_u24\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_u48\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#395-397\">Source</a><a href=\"#method.write_u48\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_u48\" class=\"fn\">write_u48</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_u48\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#495-497\">Source</a><a href=\"#method.read_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i16\" class=\"fn\">read_i16</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class='docblock'>Reads a signed 16 bit integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i24\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#517-519\">Source</a><a href=\"#method.read_i24\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i24\" class=\"fn\">read_i24</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Reads a signed 24 bit integer from <code>buf</code>, stored in i32. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i24\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#539-541\">Source</a><a href=\"#method.read_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i32\" class=\"fn\">read_i32</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>Reads a signed 32 bit integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i48\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#561-563\">Source</a><a href=\"#method.read_i48\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i48\" class=\"fn\">read_i48</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Reads a signed 48 bit integer from <code>buf</code>, stored in i64. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i48\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#583-585\">Source</a><a href=\"#method.read_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i64\" class=\"fn\">read_i64</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Reads a signed 64 bit integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#605-607\">Source</a><a href=\"#method.read_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i128\" class=\"fn\">read_i128</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Reads a signed 128 bit integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#628-630\">Source</a><a href=\"#method.read_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_int\" class=\"fn\">read_int</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class='docblock'>Reads a signed n-bytes integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_int128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#651-653\">Source</a><a href=\"#method.read_int128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_int128\" class=\"fn\">read_int128</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class='docblock'>Reads a signed n-bytes integer from <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_int128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#674-676\">Source</a><a href=\"#method.read_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_f32\" class=\"fn\">read_f32</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Reads a IEEE754 single-precision (4 bytes) floating point number. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_f32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#697-699\">Source</a><a href=\"#method.read_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_f64\" class=\"fn\">read_f64</a>(buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class='docblock'>Reads a IEEE754 double-precision (8 bytes) floating point number. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#719-721\">Source</a><a href=\"#method.write_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i16\" class=\"fn\">write_i16</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Writes a signed 16 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i16\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i24\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#741-743\">Source</a><a href=\"#method.write_i24\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i24\" class=\"fn\">write_i24</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i24\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#763-765\">Source</a><a href=\"#method.write_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i32\" class=\"fn\">write_i32</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Writes a signed 32 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i48\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#785-787\">Source</a><a href=\"#method.write_i48\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i48\" class=\"fn\">write_i48</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i48\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#807-809\">Source</a><a href=\"#method.write_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i64\" class=\"fn\">write_i64</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Writes a signed 64 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#829-831\">Source</a><a href=\"#method.write_i128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i128\" class=\"fn\">write_i128</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Writes a signed 128 bit integer <code>n</code> to <code>buf</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_int\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#852-854\">Source</a><a href=\"#method.write_int\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_int\" class=\"fn\">write_int</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_int\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_int128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#875-877\">Source</a><a href=\"#method.write_int128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_int128\" class=\"fn\">write_int128</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i128.html\">i128</a>, nbytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_int128\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#898-900\">Source</a><a href=\"#method.write_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_f32\" class=\"fn\">write_f32</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Writes a IEEE754 single-precision (4 bytes) floating point number. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_f32\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#921-923\">Source</a><a href=\"#method.write_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_f64\" class=\"fn\">write_f64</a>(buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Writes a IEEE754 double-precision (8 bytes) floating point number. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_f64\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f32_into_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1160-1162\">Source</a><a href=\"#method.read_f32_into_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_f32_into_unchecked\" class=\"fn\">read_f32_into_unchecked</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>])</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.3.0: please use <code>read_f32_into</code> instead</span></div></span><div class='docblock'><strong>DEPRECATED</strong>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_f32_into_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f64_into_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1216-1218\">Source</a><a href=\"#method.read_f64_into_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_f64_into_unchecked\" class=\"fn\">read_f64_into_unchecked</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>])</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.3.0: please use <code>read_f64_into</code> instead</span></div></span><div class='docblock'><strong>DEPRECATED</strong>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.read_f64_into_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_i8_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1335-1340\">Source</a><a href=\"#method.write_i8_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i8_into\" class=\"fn\">write_i8_into</a>(src: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>], dst: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>])</h4></section></summary><div class='docblock'>Writes signed 8 bit integers from <code>src</code> into <code>dst</code>. <a href=\"byteorder_lite/trait.ByteOrder.html#method.write_i8_into\">Read more</a></div></details></div></details>","ByteOrder","byteorder_lite::LE","byteorder_lite::NativeEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#impl-Clone-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","byteorder_lite::LE","byteorder_lite::NativeEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#impl-Debug-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","byteorder_lite::LE","byteorder_lite::NativeEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1698-1702\">Source</a><a href=\"#impl-Default-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1699-1701\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","byteorder_lite::LE","byteorder_lite::NativeEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#impl-Hash-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","byteorder_lite::LE","byteorder_lite::NativeEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#impl-Ord-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","byteorder_lite::LE","byteorder_lite::NativeEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#impl-PartialEq-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","byteorder_lite::LE","byteorder_lite::NativeEndian"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#impl-PartialOrd-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","byteorder_lite::LE","byteorder_lite::NativeEndian"],["<section id=\"impl-Copy-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#impl-Copy-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section>","Copy","byteorder_lite::LE","byteorder_lite::NativeEndian"],["<section id=\"impl-Eq-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#impl-Eq-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section>","Eq","byteorder_lite::LE","byteorder_lite::NativeEndian"],["<section id=\"impl-StructuralPartialEq-for-LittleEndian\" class=\"impl\"><a class=\"src rightside\" href=\"src/byteorder_lite/lib.rs.html#1695\">Source</a><a href=\"#impl-StructuralPartialEq-for-LittleEndian\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"byteorder_lite/enum.LittleEndian.html\" title=\"enum byteorder_lite::LittleEndian\">LittleEndian</a></h3></section>","StructuralPartialEq","byteorder_lite::LE","byteorder_lite::NativeEndian"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[80290]}