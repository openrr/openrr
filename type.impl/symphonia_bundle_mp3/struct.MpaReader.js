(function() {
    var type_impls = Object.fromEntries([["symphonia_bundle_mp3",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FormatReader-for-MpaReader\" class=\"impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#94-382\">Source</a><a href=\"#impl-FormatReader-for-MpaReader\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"symphonia_core/formats/trait.FormatReader.html\" title=\"trait symphonia_core::formats::FormatReader\">FormatReader</a> for <a class=\"struct\" href=\"symphonia_bundle_mp3/struct.MpaReader.html\" title=\"struct symphonia_bundle_mp3::MpaReader\">MpaReader</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#95-169\">Source</a><a href=\"#method.try_new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"symphonia_core/formats/trait.FormatReader.html#tymethod.try_new\" class=\"fn\">try_new</a>(source: <a class=\"struct\" href=\"symphonia_core/io/media_source_stream/struct.MediaSourceStream.html\" title=\"struct symphonia_core::io::media_source_stream::MediaSourceStream\">MediaSourceStream</a>, options: &amp;<a class=\"struct\" href=\"symphonia_core/formats/struct.FormatOptions.html\" title=\"struct symphonia_core::formats::FormatOptions\">FormatOptions</a>) -&gt; <a class=\"type\" href=\"symphonia_core/errors/type.Result.html\" title=\"type symphonia_core::errors::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Attempt to instantiate a <code>FormatReader</code> using the provided <code>FormatOptions</code> and\n<code>MediaSourceStream</code>. The reader will probe the container to verify format support, determine\nthe number of tracks, and read any initial metadata.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_packet\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#171-212\">Source</a><a href=\"#method.next_packet\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"symphonia_core/formats/trait.FormatReader.html#tymethod.next_packet\" class=\"fn\">next_packet</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"symphonia_core/errors/type.Result.html\" title=\"type symphonia_core::errors::Result\">Result</a>&lt;<a class=\"struct\" href=\"symphonia_core/formats/struct.Packet.html\" title=\"struct symphonia_core::formats::Packet\">Packet</a>&gt;</h4></section></summary><div class='docblock'>Get the next packet from the container. <a href=\"symphonia_core/formats/trait.FormatReader.html#tymethod.next_packet\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#214-216\">Source</a><a href=\"#method.metadata\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"symphonia_core/formats/trait.FormatReader.html#tymethod.metadata\" class=\"fn\">metadata</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"symphonia_core/meta/struct.Metadata.html\" title=\"struct symphonia_core::meta::Metadata\">Metadata</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Gets the metadata revision log.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cues\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#218-220\">Source</a><a href=\"#method.cues\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"symphonia_core/formats/trait.FormatReader.html#tymethod.cues\" class=\"fn\">cues</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"symphonia_core/formats/struct.Cue.html\" title=\"struct symphonia_core::formats::Cue\">Cue</a>]</h4></section></summary><div class='docblock'>Gets a list of all <code>Cue</code>s.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tracks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#222-224\">Source</a><a href=\"#method.tracks\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"symphonia_core/formats/trait.FormatReader.html#tymethod.tracks\" class=\"fn\">tracks</a>(&amp;self) -&gt; &amp;[<a class=\"struct\" href=\"symphonia_core/formats/struct.Track.html\" title=\"struct symphonia_core::formats::Track\">Track</a>]</h4></section></summary><div class='docblock'>Gets a list of tracks in the container.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#226-377\">Source</a><a href=\"#method.seek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"symphonia_core/formats/trait.FormatReader.html#tymethod.seek\" class=\"fn\">seek</a>(&amp;mut self, mode: <a class=\"enum\" href=\"symphonia_core/formats/enum.SeekMode.html\" title=\"enum symphonia_core::formats::SeekMode\">SeekMode</a>, to: <a class=\"enum\" href=\"symphonia_core/formats/enum.SeekTo.html\" title=\"enum symphonia_core::formats::SeekTo\">SeekTo</a>) -&gt; <a class=\"type\" href=\"symphonia_core/errors/type.Result.html\" title=\"type symphonia_core::errors::Result\">Result</a>&lt;<a class=\"struct\" href=\"symphonia_core/formats/struct.SeekedTo.html\" title=\"struct symphonia_core::formats::SeekedTo\">SeekedTo</a>&gt;</h4></section></summary><div class='docblock'>Seek, as precisely as possible depending on the mode, to the <code>Time</code> or track <code>TimeStamp</code>\nrequested. Returns the requested and actual <code>TimeStamps</code> seeked to, as well as the <code>Track</code>. <a href=\"symphonia_core/formats/trait.FormatReader.html#tymethod.seek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#379-381\">Source</a><a href=\"#method.into_inner\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"symphonia_core/formats/trait.FormatReader.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;Self&gt;) -&gt; <a class=\"struct\" href=\"symphonia_core/io/media_source_stream/struct.MediaSourceStream.html\" title=\"struct symphonia_core::io::media_source_stream::MediaSourceStream\">MediaSourceStream</a></h4></section></summary><div class='docblock'>Destroys the <code>FormatReader</code> and returns the underlying media source stream</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_track\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/symphonia_core/formats.rs.html#202\">Source</a><a href=\"#method.default_track\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"symphonia_core/formats/trait.FormatReader.html#method.default_track\" class=\"fn\">default_track</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"symphonia_core/formats/struct.Track.html\" title=\"struct symphonia_core::formats::Track\">Track</a>&gt;</h4></section></summary><div class='docblock'>Gets the default track. If the <code>FormatReader</code> has a method of determining the default track,\nthis function should return it. Otherwise, the first track is returned. If no tracks are\npresent then <code>None</code> is returned.</div></details></div></details>","FormatReader","symphonia_bundle_mp3::Mp3Reader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueryDescriptor-for-MpaReader\" class=\"impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#38-92\">Source</a><a href=\"#impl-QueryDescriptor-for-MpaReader\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"symphonia_core/probe/trait.QueryDescriptor.html\" title=\"trait symphonia_core::probe::QueryDescriptor\">QueryDescriptor</a> for <a class=\"struct\" href=\"symphonia_bundle_mp3/struct.MpaReader.html\" title=\"struct symphonia_bundle_mp3::MpaReader\">MpaReader</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#39-87\">Source</a><a href=\"#method.query\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"symphonia_core/probe/trait.QueryDescriptor.html#tymethod.query\" class=\"fn\">query</a>() -&gt; &amp;'static [<a class=\"struct\" href=\"symphonia_core/probe/struct.Descriptor.html\" title=\"struct symphonia_core::probe::Descriptor\">Descriptor</a>]</h4></section></summary><div class='docblock'>Returns a list of descriptors.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.score\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/symphonia_bundle_mp3/demuxer.rs.html#89-91\">Source</a><a href=\"#method.score\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"symphonia_core/probe/trait.QueryDescriptor.html#tymethod.score\" class=\"fn\">score</a>(_context: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Using the provided context buffer, score calculate and returns a value between 0 and 255\nindicating the confidence of the reader in decoding or parsing the source stream.</div></details></div></details>","QueryDescriptor","symphonia_bundle_mp3::Mp3Reader"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10153]}