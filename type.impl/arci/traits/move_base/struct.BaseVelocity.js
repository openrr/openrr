(function() {
    var type_impls = Object.fromEntries([["openrr_base",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BaseVelocity\" class=\"impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#12\">Source</a><a href=\"#impl-BaseVelocity\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#13\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arci/traits/move_base/struct.BaseVelocity.html#tymethod.new\" class=\"fn\">new</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>, theta: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h4></section></div></details>",0,"openrr_base::utils::BaseAcceleration"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-BaseVelocity\" class=\"impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#5\">Source</a><a href=\"#impl-Clone-for-BaseVelocity\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#5\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","openrr_base::utils::BaseAcceleration"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-BaseVelocity\" class=\"impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#5\">Source</a><a href=\"#impl-Debug-for-BaseVelocity\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#5\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","openrr_base::utils::BaseAcceleration"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-BaseVelocity\" class=\"impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#5\">Source</a><a href=\"#impl-Default-for-BaseVelocity\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#5\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","openrr_base::utils::BaseAcceleration"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3Cf64%3E-for-BaseVelocity\" class=\"impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#32\">Source</a><a href=\"#impl-Mul%3Cf64%3E-for-BaseVelocity\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h3><div class=\"docblock\"><p>Multiply scalar value for velocity</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>assert_approx_eq::assert_approx_eq;\n<span class=\"kw\">use </span>arci::BaseVelocity;\n\n<span class=\"kw\">let </span>vel = BaseVelocity::new(<span class=\"number\">0.1</span>, -<span class=\"number\">0.2</span>, <span class=\"number\">1.0</span>);\n<span class=\"kw\">let </span>twice = vel * <span class=\"number\">2.0</span>;\n<span class=\"macro\">assert_approx_eq!</span>(twice.x, <span class=\"number\">0.2</span>);\n<span class=\"macro\">assert_approx_eq!</span>(twice.y, -<span class=\"number\">0.4</span>);\n<span class=\"macro\">assert_approx_eq!</span>(twice.theta, <span class=\"number\">2.0</span>);</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#33\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#35\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>) -&gt; &lt;<a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<f64>","openrr_base::utils::BaseAcceleration"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3Cf64%3E-for-BaseVelocity\" class=\"impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#58\">Source</a><a href=\"#impl-MulAssign%3Cf64%3E-for-BaseVelocity\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h3><div class=\"docblock\"><p>Multiply scalar value for velocity</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>assert_approx_eq::assert_approx_eq;\n<span class=\"kw\">use </span>arci::BaseVelocity;\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>vel = BaseVelocity::new(<span class=\"number\">0.1</span>, -<span class=\"number\">0.2</span>, <span class=\"number\">1.0</span>);\nvel <span class=\"kw-2\">*</span>= <span class=\"number\">2.0</span>;\n<span class=\"macro\">assert_approx_eq!</span>(vel.x, <span class=\"number\">0.2</span>);\n<span class=\"macro\">assert_approx_eq!</span>(vel.y, -<span class=\"number\">0.4</span>);\n<span class=\"macro\">assert_approx_eq!</span>(vel.theta, <span class=\"number\">2.0</span>);</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#59\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<f64>","openrr_base::utils::BaseAcceleration"],["<section id=\"impl-Copy-for-BaseVelocity\" class=\"impl\"><a class=\"src rightside\" href=\"src/arci/traits/move_base.rs.html#5\">Source</a><a href=\"#impl-Copy-for-BaseVelocity\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"arci/traits/move_base/struct.BaseVelocity.html\" title=\"struct arci::traits::move_base::BaseVelocity\">BaseVelocity</a></h3></section>","Copy","openrr_base::utils::BaseAcceleration"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[13657]}