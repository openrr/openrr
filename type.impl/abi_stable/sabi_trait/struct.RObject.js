(function() {
    var type_impls = Object.fromEntries([["abi_stable",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#163-172\">Source</a><a href=\"#impl-Clone-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>,\n    Self: CloneImpl&lt;&lt;P as <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html#associatedtype.Kind\" title=\"type abi_stable::pointer_trait::GetPointerKind::Kind\">Kind</a>&gt;,</div></h3><div class=\"docblock\"><p>Clone is implemented for references and smart pointers,\nusing <code>GetPointerKind</code> to decide whether <code>P</code> is a smart pointer or a reference.</p>\n</div></section></summary><div class=\"docblock\"><p>RObject does not implement Clone if <code>P</code> == <code>&amp;mut ()</code> :</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_trait::{doc_examples::ConstExample_TO, TD_Opaque},\n    std_types::<span class=\"kw-2\">*</span>,\n};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>object = ConstExample_TO::from_value(<span class=\"number\">10usize</span>, TD_Opaque);\n<span class=\"kw\">let </span>borrow = object.sabi_reborrow_mut();\n<span class=\"kw\">let _ </span>= borrow.clone();</code></pre></div>\n<p>Here is the same example with <code>sabi_reborrow</code></p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_trait::{doc_examples::ConstExample_TO, TD_Opaque},\n    std_types::<span class=\"kw-2\">*</span>,\n};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>object = ConstExample_TO::from_value(<span class=\"number\">10usize</span>, TD_Opaque);\n<span class=\"kw\">let </span>borrow = object.sabi_reborrow();\n<span class=\"kw\">let _ </span>= borrow.clone();</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#169-171\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#174-188\">Source</a><a href=\"#impl-Debug-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Debug = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Debug.html\" title=\"struct abi_stable::type_level::trait_marker::Debug\">Debug</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#179-187\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#190-204\">Source</a><a href=\"#impl-Display-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Display = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Display.html\" title=\"struct abi_stable::type_level::trait_marker::Display\">Display</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#195-203\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-RObject%3C'_,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#825-839\">Source</a><a href=\"#impl-Drop-for-RObject%3C'_,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'_, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#829-838\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#206-215\">Source</a><a href=\"#impl-Error-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Display = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Display.html\" title=\"struct abi_stable::type_level::trait_marker::Display\">Display</a>&gt;, Debug = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Debug.html\" title=\"struct abi_stable::type_level::trait_marker::Debug\">Debug</a>&gt;, Error = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Error.html\" title=\"struct abi_stable::type_level::trait_marker::Error\">Error</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/error.rs.html#105\">Source</a></span><a href=\"#method.source\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/error.rs.html#131\">Source</a></span><a href=\"#method.description\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/error.rs.html#141\">Source</a></span><a href=\"#method.cause\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/error.rs.html#204\">Source</a><a href=\"#method.provide\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'a&gt;(&amp;'a self, request: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/error/struct.Request.html\" title=\"struct core::error::Request\">Request</a>&lt;'a&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStaticEquivalent_-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#77\">Source</a><a href=\"#impl-GetStaticEquivalent_-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a> for <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a> + <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a> + <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>,\n    V: <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">__GetStaticEquivalent_</a> + <a class=\"trait\" href=\"abi_stable/abi_stability/stable_abi_trait/trait.PrefixStableAbi.html\" title=\"trait abi_stable::abi_stability::stable_abi_trait::PrefixStableAbi\">PrefixStableAbi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.StaticEquivalent\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#77\">Source</a><a href=\"#associatedtype.StaticEquivalent\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" class=\"associatedtype\">StaticEquivalent</a> = _static_RObject&lt;'static, &lt;P as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>, &lt;I as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>, &lt;V as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>&gt;</h4></section></summary><div class='docblock'>The <code>'static</code> equivalent of <code>Self</code></div></details></div></details>","GetStaticEquivalent_","abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RObject%3C'borr,+RRef%3C'a,+()%3E,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#276-313\">Source</a><a href=\"#impl-RObject%3C'borr,+RRef%3C'a,+()%3E,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, 'a, I, V&gt; <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'borr, <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RRef.html\" title=\"struct abi_stable::sabi_types::RRef\">RRef</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_vtable_const\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#300-312\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.with_vtable_const\" class=\"fn\">with_vtable_const</a>&lt;T, Downcasting&gt;(\n    ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;'a T</a>,\n    vtable: <a class=\"struct\" href=\"abi_stable/prefix_type/struct.PrefixRef.html\" title=\"struct abi_stable::prefix_type::PrefixRef\">PrefixRef</a>&lt;V&gt;,\n) -&gt; Self<div class=\"where\">where\n    T: 'borr,</div></h4></section></summary><div class=\"docblock\"><p>This function allows constructing an RObject in a constant/static.</p>\n<p>This is mostly intended for <code>#[sabi_trait]</code>-generated trait objects</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>This has the same safety requirements as <code>RObject::with_vtable</code></p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<p>Because this is intended for <code>#[sabi_trait]</code> generated trait objects,\nthis demonstrates how to construct one in a constant.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::sabi_trait::{\n    doc_examples::ConstExample_CTO,\n    prelude::TD_Opaque,\n};\n\n<span class=\"kw\">const </span>EXAMPLE0: ConstExample_CTO&lt;<span class=\"lifetime\">'static</span>, <span class=\"lifetime\">'static</span>&gt; =\n    ConstExample_CTO::from_const(<span class=\"kw-2\">&amp;</span><span class=\"number\">0usize</span>, TD_Opaque);\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#239-274\">Source</a><a href=\"#impl-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_vtable\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#262-273\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.with_vtable\" class=\"fn\">with_vtable</a>&lt;OrigPtr&gt;(\n    ptr: OrigPtr,\n    vtable: <a class=\"struct\" href=\"abi_stable/prefix_type/struct.PrefixRef.html\" title=\"struct abi_stable::prefix_type::PrefixRef\">PrefixRef</a>&lt;V&gt;,\n) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    OrigPtr: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html\" title=\"trait abi_stable::pointer_trait::CanTransmuteElement\">CanTransmuteElement</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, TransmutedPtr = P&gt;,\n    OrigPtr::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html#associatedtype.PtrTarget\" title=\"type abi_stable::pointer_trait::GetPointerKind::PtrTarget\">PtrTarget</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'lt,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Constructs an RObject from a pointer and an extra vtable.</p>\n<p>This is mostly intended to be called by <code>#[sabi_trait]</code> generated trait objects.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>These are the requirements for the caller:</p>\n<ul>\n<li>\n<p><code>P</code> must be a pointer to the type that the vtable functions\ntake as the first parameter.</p>\n</li>\n<li>\n<p>The vtable must not come from a reborrowed <code>RObject</code>\n(created using <code>RObject::reborrow</code> or <code>RObject::reborrow_mut</code>).</p>\n</li>\n<li>\n<p>The vtable must be the <code>SomeVTableName</code> of a struct declared with\n<code>#[derive(StableAbi)] #[sabi(kind(Prefix(prefix_ref= SomeVTableName)))]</code>.</p>\n</li>\n<li>\n<p>The vtable must have <code>RObjectVtable_Ref</code> as its first declared field</p>\n</li>\n</ul>\n</div></details></div></details>",0,"abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#315-631\">Source</a><a href=\"#impl-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_into\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#371-381\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.downcast_into\" class=\"fn\">downcast_into</a>&lt;T&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;P::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html#associatedtype.TransmutedPtr\" title=\"type abi_stable::pointer_trait::CanTransmuteElement::TransmutedPtr\">TransmutedPtr</a>, <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.UneraseError.html\" title=\"struct abi_stable::sabi_trait::UneraseError\">UneraseError</a>&lt;Self&gt;&gt;<div class=\"where\">where\n    T: 'static,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html\" title=\"trait abi_stable::pointer_trait::CanTransmuteElement\">CanTransmuteElement</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Attempts to unerase this trait object into the pointer it was constructed with.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This will return an error in any of these conditions:</p>\n<ul>\n<li>\n<p>It is called in a dynamic library/binary outside\nthe one from which this RObject was constructed.</p>\n</li>\n<li>\n<p>The trait object wrapping this <code>RObject</code> was constructed with a\n<code>TD_CanDowncast</code> argument.</p>\n</li>\n<li>\n<p><code>T</code> is not the concrete type this <code>RObject&lt;_&gt;</code> was constructed with.</p>\n</li>\n</ul>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_trait::doc_examples::Doer_TO, std_types::RBox,\n    type_level::downcasting::TD_CanDowncast,\n};\n\n<span class=\"kw\">let </span>to = || Doer_TO::from_value(<span class=\"number\">5usize</span>, TD_CanDowncast);\n\n<span class=\"comment\">// `to.obj` is an RObject\n</span><span class=\"macro\">assert_eq!</span>(\n    to().obj.downcast_into::&lt;usize&gt;().ok(),\n    <span class=\"prelude-val\">Some</span>(RBox::new(<span class=\"number\">5usize</span>))\n);\n<span class=\"macro\">assert_eq!</span>(to().obj.downcast_into::&lt;u8&gt;().ok(), <span class=\"prelude-val\">None</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_as\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#435-442\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.downcast_as\" class=\"fn\">downcast_as</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>, <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.UneraseError.html\" title=\"struct abi_stable::sabi_trait::UneraseError\">UneraseError</a>&lt;&amp;Self&gt;&gt;<div class=\"where\">where\n    T: 'static,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html\" title=\"trait abi_stable::pointer_trait::CanTransmuteElement\">CanTransmuteElement</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Attempts to unerase this trait object into a reference of\nthe value was constructed with.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This will return an error in any of these conditions:</p>\n<ul>\n<li>\n<p>It is called in a dynamic library/binary outside\nthe one from which this RObject was constructed.</p>\n</li>\n<li>\n<p>The trait object wrapping this <code>RObject</code> was constructed with a\n<code>TD_CanDowncast</code> argument.</p>\n</li>\n<li>\n<p><code>T</code> is not the concrete type this <code>RObject&lt;_&gt;</code> was constructed with.</p>\n</li>\n</ul>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_trait::doc_examples::Doer_TO, std_types::RArc,\n    type_level::downcasting::TD_CanDowncast, RMut, RRef,\n};\n\n{\n    <span class=\"kw\">let </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RArc&lt;()&gt;&gt; =\n        Doer_TO::from_ptr(RArc::new(<span class=\"number\">8usize</span>), TD_CanDowncast);\n\n    <span class=\"comment\">// `to.obj` is an RObject\n    </span><span class=\"macro\">assert_eq!</span>(to.obj.downcast_as::&lt;usize&gt;().ok(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">8usize</span>));\n    <span class=\"macro\">assert_eq!</span>(to.obj.downcast_as::&lt;u8&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n{\n    <span class=\"comment\">// `#[sabi_trait]` trait objects constructed from `&amp;`\n    // use `RRef&lt;'_, ()&gt;` instead of `&amp;'_ ()`\n    // since `&amp;T` can't soundly be transmuted back and forth into `&amp;()`\n    </span><span class=\"kw\">let </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RRef&lt;<span class=\"lifetime\">'_</span>, ()&gt;&gt; = Doer_TO::from_ptr(<span class=\"kw-2\">&amp;</span><span class=\"number\">13usize</span>, TD_CanDowncast);\n\n    <span class=\"macro\">assert_eq!</span>(to.obj.downcast_as::&lt;usize&gt;().ok(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">13usize</span>));\n    <span class=\"macro\">assert_eq!</span>(to.obj.downcast_as::&lt;u8&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n{\n    <span class=\"kw\">let </span>mmut = <span class=\"kw-2\">&amp;mut </span><span class=\"number\">21usize</span>;\n    <span class=\"comment\">// `#[sabi_trait]` trait objects constructed from `&amp;mut`\n    // use `RMut&lt;'_, ()&gt;` instead of `&amp;'_ mut ()`\n    // since `&amp;mut T` can't soundly be transmuted back and forth into `&amp;mut ()`\n    </span><span class=\"kw\">let </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RMut&lt;<span class=\"lifetime\">'_</span>, ()&gt;&gt; = Doer_TO::from_ptr(mmut, TD_CanDowncast);\n\n    <span class=\"macro\">assert_eq!</span>(to.obj.downcast_as::&lt;usize&gt;().ok(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">21usize</span>));\n    <span class=\"macro\">assert_eq!</span>(to.obj.downcast_as::&lt;u8&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_as_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#488-495\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.downcast_as_mut\" class=\"fn\">downcast_as_mut</a>&lt;T&gt;(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a>, <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.UneraseError.html\" title=\"struct abi_stable::sabi_trait::UneraseError\">UneraseError</a>&lt;&amp;mut Self&gt;&gt;<div class=\"where\">where\n    T: 'static,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html\" title=\"trait abi_stable::pointer_trait::CanTransmuteElement\">CanTransmuteElement</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Attempts to unerase this trait object into a mutable reference of\nthe value was constructed with.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>This will return an error in any of these conditions:</p>\n<ul>\n<li>\n<p>It is called in a dynamic library/binary outside\nthe one from which this RObject was constructed.</p>\n</li>\n<li>\n<p>The trait object wrapping this <code>RObject</code> was constructed with a\n<code>TD_CanDowncast</code> argument.</p>\n</li>\n<li>\n<p><code>T</code> is not the concrete type this <code>RObject&lt;_&gt;</code> was constructed with.</p>\n</li>\n</ul>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_trait::doc_examples::Doer_TO, std_types::RBox,\n    type_level::downcasting::TD_CanDowncast, RMut, RRef,\n};\n\n{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RBox&lt;()&gt;&gt; =\n        Doer_TO::from_value(<span class=\"number\">34usize</span>, TD_CanDowncast);\n\n    <span class=\"comment\">// `to.obj` is an RObject\n    </span><span class=\"macro\">assert_eq!</span>(to.obj.downcast_as_mut::&lt;usize&gt;().ok(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">34usize</span>));\n    <span class=\"macro\">assert_eq!</span>(to.obj.downcast_as_mut::&lt;u8&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n{\n    <span class=\"kw\">let </span>mmut = <span class=\"kw-2\">&amp;mut </span><span class=\"number\">55usize</span>;\n    <span class=\"comment\">// `#[sabi_trait]` trait objects constructed from `&amp;mut`\n    // use `RMut&lt;'_, ()&gt;` instead of `&amp;'_ mut ()`\n    // since `&amp;mut T` can't soundly be transmuted back and forth into `&amp;mut ()`\n    </span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RMut&lt;<span class=\"lifetime\">'_</span>, ()&gt;&gt; = Doer_TO::from_ptr(mmut, TD_CanDowncast);\n\n    <span class=\"macro\">assert_eq!</span>(to.obj.downcast_as_mut::&lt;usize&gt;().ok(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">55usize</span>));\n    <span class=\"macro\">assert_eq!</span>(to.obj.downcast_as_mut::&lt;u8&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_downcast_into\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#524-530\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.unchecked_downcast_into\" class=\"fn\">unchecked_downcast_into</a>&lt;T&gt;(self) -&gt; P::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html#associatedtype.TransmutedPtr\" title=\"type abi_stable::pointer_trait::CanTransmuteElement::TransmutedPtr\">TransmutedPtr</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html\" title=\"trait abi_stable::pointer_trait::CanTransmuteElement\">CanTransmuteElement</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps the <code>RObject&lt;_&gt;</code> into a pointer to T,\nwithout checking whether <code>T</code> is the type that the RObject was constructed with.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>You must check that <code>T</code> is the type that RObject was constructed\nwith through other means.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_trait::doc_examples::Doer_TO, std_types::RBox,\n    type_level::downcasting::TD_Opaque,\n};\n\n<span class=\"kw\">let </span>to = || Doer_TO::from_value(<span class=\"number\">5usize</span>, TD_Opaque);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"comment\">// `to.obj` is an RObject\n    </span><span class=\"macro\">assert_eq!</span>(\n        to().obj.unchecked_downcast_into::&lt;usize&gt;(),\n        RBox::new(<span class=\"number\">5usize</span>)\n    );\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_downcast_as\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#580-585\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.unchecked_downcast_as\" class=\"fn\">unchecked_downcast_as</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps the <code>RObject&lt;_&gt;</code> into a reference to T,\nwithout checking whether <code>T</code> is the type that the RObject was constructed with.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>You must check that <code>T</code> is the type that RObject was constructed\nwith through other means.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_trait::doc_examples::Doer_TO, std_types::RArc,\n    type_level::downcasting::TD_Opaque, RMut, RRef,\n};\n\n{\n    <span class=\"kw\">let </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RArc&lt;()&gt;&gt; = Doer_TO::from_ptr(RArc::new(<span class=\"number\">8usize</span>), TD_Opaque);\n\n    <span class=\"kw\">unsafe </span>{\n        <span class=\"comment\">// `to.obj` is an RObject\n        </span><span class=\"macro\">assert_eq!</span>(to.obj.unchecked_downcast_as::&lt;usize&gt;(), <span class=\"kw-2\">&amp;</span><span class=\"number\">8usize</span>);\n    }\n}\n{\n    <span class=\"comment\">// `#[sabi_trait]` trait objects constructed from `&amp;`\n    // use `RRef&lt;'_, ()&gt;` instead of `&amp;'_ ()`\n    // since `&amp;T` can't soundly be transmuted back and forth into `&amp;()`\n    </span><span class=\"kw\">let </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RRef&lt;<span class=\"lifetime\">'_</span>, ()&gt;&gt; = Doer_TO::from_ptr(<span class=\"kw-2\">&amp;</span><span class=\"number\">13usize</span>, TD_Opaque);\n\n    <span class=\"kw\">unsafe </span>{\n        <span class=\"macro\">assert_eq!</span>(to.obj.unchecked_downcast_as::&lt;usize&gt;(), <span class=\"kw-2\">&amp;</span><span class=\"number\">13usize</span>);\n    }\n}\n{\n    <span class=\"kw\">let </span>mmut = <span class=\"kw-2\">&amp;mut </span><span class=\"number\">21usize</span>;\n    <span class=\"comment\">// `#[sabi_trait]` trait objects constructed from `&amp;mut`\n    // use `RMut&lt;'_, ()&gt;` instead of `&amp;'_ mut ()`\n    // since `&amp;mut T` can't soundly be transmuted back and forth into `&amp;mut ()`\n    </span><span class=\"kw\">let </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RMut&lt;<span class=\"lifetime\">'_</span>, ()&gt;&gt; = Doer_TO::from_ptr(mmut, TD_Opaque);\n\n    <span class=\"kw\">unsafe </span>{\n        <span class=\"macro\">assert_eq!</span>(to.obj.unchecked_downcast_as::&lt;usize&gt;(), <span class=\"kw-2\">&amp;</span><span class=\"number\">21usize</span>);\n    }\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_downcast_as_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#625-630\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.unchecked_downcast_as_mut\" class=\"fn\">unchecked_downcast_as_mut</a>&lt;T&gt;(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps the <code>RObject&lt;_&gt;</code> into a mutable reference to T,\nwithout checking whether <code>T</code> is the type that the RObject was constructed with.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<p>You must check that <code>T</code> is the type that RObject was constructed\nwith through other means.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_trait::doc_examples::Doer_TO, std_types::RBox,\n    type_level::downcasting::TD_Opaque, RMut, RRef,\n};\n\n{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RBox&lt;()&gt;&gt; = Doer_TO::from_value(<span class=\"number\">34usize</span>, TD_Opaque);\n\n    <span class=\"kw\">unsafe </span>{\n        <span class=\"comment\">// `to.obj` is an RObject\n        </span><span class=\"macro\">assert_eq!</span>(to.obj.unchecked_downcast_as_mut::&lt;usize&gt;(), <span class=\"kw-2\">&amp;mut </span><span class=\"number\">34usize</span>);\n    }\n}\n{\n    <span class=\"kw\">let </span>mmut = <span class=\"kw-2\">&amp;mut </span><span class=\"number\">55usize</span>;\n    <span class=\"comment\">// `#[sabi_trait]` trait objects constructed from `&amp;mut`\n    // use `RMut&lt;'_, ()&gt;` instead of `&amp;'_ mut ()`\n    // since `&amp;mut T` can't soundly be transmuted back and forth into `&amp;mut ()`\n    </span><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RMut&lt;<span class=\"lifetime\">'_</span>, ()&gt;&gt; = Doer_TO::from_ptr(mmut, TD_Opaque);\n\n    <span class=\"kw\">unsafe </span>{\n        <span class=\"macro\">assert_eq!</span>(to.obj.unchecked_downcast_as_mut::&lt;usize&gt;(), <span class=\"kw-2\">&amp;mut </span><span class=\"number\">55usize</span>);\n    }\n}\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#653-747\">Source</a><a href=\"#impl-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reborrow\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#688-699\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.reborrow\" class=\"fn\">reborrow</a>&lt;'re&gt;(&amp;'re self) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RRef.html\" title=\"struct abi_stable::sabi_types::RRef\">RRef</a>&lt;'re, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,\n    PrivStruct: <a class=\"trait\" href=\"abi_stable/sabi_trait/trait.ReborrowBounds.html\" title=\"trait abi_stable::sabi_trait::ReborrowBounds\">ReborrowBounds</a>&lt;I::<a class=\"associatedtype\" href=\"abi_stable/trait.InterfaceType.html#associatedtype.Send\" title=\"type abi_stable::InterfaceType::Send\">Send</a>, I::<a class=\"associatedtype\" href=\"abi_stable/trait.InterfaceType.html#associatedtype.Sync\" title=\"type abi_stable::InterfaceType::Sync\">Sync</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a shared reborrow of this RObject.</p>\n<p>This is only callable if <code>RObject</code> is either <code>Send + Sync</code> or <code>!Send + !Sync</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_trait::doc_examples::Doer_TO, std_types::RBox,\n    type_level::downcasting::TD_Opaque, RMut, RRef,\n};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RBox&lt;()&gt;&gt; = Doer_TO::from_value(<span class=\"number\">13usize</span>, TD_Opaque);\n\n<span class=\"comment\">// `to.obj` is an RObject\n</span><span class=\"macro\">assert_eq!</span>(debug_string(to.obj.reborrow()), <span class=\"string\">\"13\"</span>);\n<span class=\"macro\">assert_eq!</span>(debug_string(to.obj.reborrow()), <span class=\"string\">\"13\"</span>);\n\n<span class=\"comment\">// `#[sabi_trait]` trait objects have an equivalent `sabi_reborrow` method.\n</span><span class=\"macro\">assert_eq!</span>(debug_string(to.sabi_reborrow()), <span class=\"string\">\"13\"</span>);\n<span class=\"macro\">assert_eq!</span>(debug_string(to.sabi_reborrow()), <span class=\"string\">\"13\"</span>);\n\n<span class=\"kw\">fn </span>debug_string&lt;T&gt;(to: T) -&gt; String\n<span class=\"kw\">where\n    </span>T: std::fmt::Debug,\n{\n    <span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, to)\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reborrow_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#735-746\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.reborrow_mut\" class=\"fn\">reborrow_mut</a>&lt;'re&gt;(&amp;'re mut self) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RMut.html\" title=\"struct abi_stable::sabi_types::RMut\">RMut</a>&lt;'re, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,\n    PrivStruct: <a class=\"trait\" href=\"abi_stable/sabi_trait/trait.ReborrowBounds.html\" title=\"trait abi_stable::sabi_trait::ReborrowBounds\">ReborrowBounds</a>&lt;I::<a class=\"associatedtype\" href=\"abi_stable/trait.InterfaceType.html#associatedtype.Send\" title=\"type abi_stable::InterfaceType::Send\">Send</a>, I::<a class=\"associatedtype\" href=\"abi_stable/trait.InterfaceType.html#associatedtype.Sync\" title=\"type abi_stable::InterfaceType::Sync\">Sync</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a mutable reborrow of this RObject.</p>\n<p>The reborrowed RObject cannot use these methods:</p>\n<ul>\n<li>RObject::clone</li>\n</ul>\n<p>This is only callable if <code>RObject</code> is either <code>Send + Sync</code> or <code>!Send + !Sync</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_trait::doc_examples::{Doer, Doer_TO},\n    std_types::RBox,\n    type_level::downcasting::TD_Opaque,\n    RMut, RRef,\n};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: Doer_TO&lt;<span class=\"lifetime\">'_</span>, RBox&lt;()&gt;&gt; = Doer_TO::from_value(<span class=\"number\">2usize</span>, TD_Opaque);\n\n<span class=\"comment\">// `#[sabi_trait]` trait objects have an equivalent `sabi_reborrow_mut` method,\n// which delegate to this method.\n</span><span class=\"macro\">assert_eq!</span>(increment(to.sabi_reborrow_mut()).value(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(increment(to.sabi_reborrow_mut()).value(), <span class=\"number\">4</span>);\n\n<span class=\"kw\">fn </span>increment&lt;T&gt;(<span class=\"kw-2\">mut </span>to: T) -&gt; T\n<span class=\"kw\">where\n    </span>T: Doer,\n{\n    to.add_into(<span class=\"number\">1</span>);\n    to\n}\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#749-812\">Source</a><a href=\"#impl-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_et_vtable\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#755-757\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.sabi_et_vtable\" class=\"fn\">sabi_et_vtable</a>(&amp;self) -&gt; <a class=\"struct\" href=\"abi_stable/prefix_type/struct.PrefixRef.html\" title=\"struct abi_stable::prefix_type::PrefixRef\">PrefixRef</a>&lt;V&gt;</h4></section></summary><div class=\"docblock\"><p>Gets the vtable.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_robject_vtable\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#761-763\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.sabi_robject_vtable\" class=\"fn\">sabi_robject_vtable</a>(&amp;self) -&gt; RObjectVtable_Ref&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, P, I&gt;</h4></section></summary><div class=\"docblock\"><p>The vtable common to all <code>#[sabi_trait]</code> generated trait objects.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_erased_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#772-777\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.sabi_erased_ref\" class=\"fn\">sabi_erased_ref</a>(&amp;self) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RRef.html\" title=\"struct abi_stable::sabi_types::RRef\">RRef</a>&lt;'_, <a class=\"struct\" href=\"abi_stable/marker_type/struct.ErasedObject.html\" title=\"struct abi_stable::marker_type::ErasedObject\">ErasedObject</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Gets an <code>RRef</code> pointing to the erased object.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_erased_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#780-785\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.sabi_erased_mut\" class=\"fn\">sabi_erased_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RMut.html\" title=\"struct abi_stable::sabi_types::RMut\">RMut</a>&lt;'_, <a class=\"struct\" href=\"abi_stable/marker_type/struct.ErasedObject.html\" title=\"struct abi_stable::marker_type::ErasedObject\">ErasedObject</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Gets an <code>RMut</code> pointing to the erased object.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_as_rref\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#788-793\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.sabi_as_rref\" class=\"fn\">sabi_as_rref</a>(&amp;self) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RRef.html\" title=\"struct abi_stable::sabi_types::RRef\">RRef</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Gets an <code>RRef</code> pointing to the erased object.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_as_rmut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#796-801\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.sabi_as_rmut\" class=\"fn\">sabi_as_rmut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RMut.html\" title=\"struct abi_stable::sabi_types::RMut\">RMut</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Gets an <code>RMut</code> pointing to the erased object.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_with_value\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#805-811\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.sabi_with_value\" class=\"fn\">sabi_with_value</a>&lt;F, R&gt;(self, f: F) -&gt; R<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.OwnedPointer.html\" title=\"trait abi_stable::pointer_trait::OwnedPointer\">OwnedPointer</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"struct\" href=\"abi_stable/sabi_types/struct.MovePtr.html\" title=\"struct abi_stable::sabi_types::MovePtr\">MovePtr</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Calls the <code>f</code> callback with an <code>MovePtr</code> pointing to the erased object.</p>\n</div></details></div></details>",0,"abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RObject%3C'lt,+RArc%3C()%3E,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#814-823\">Source</a><a href=\"#impl-RObject%3C'lt,+RArc%3C()%3E,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, I, V&gt; <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, <a class=\"struct\" href=\"abi_stable/std_types/struct.RArc.html\" title=\"struct abi_stable::std_types::RArc\">RArc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I, V&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shallow_clone\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#816-822\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/sabi_trait/struct.RObject.html#tymethod.shallow_clone\" class=\"fn\">shallow_clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Does a shallow clone of the object, just incrementing the reference counter</p>\n</div></details></div></details>",0,"abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StableAbi-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#77\">Source</a><a href=\"#impl-StableAbi-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">StableAbi</a> for <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a> + <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a> + <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>,\n    V: <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">__GetStaticEquivalent_</a> + <a class=\"trait\" href=\"abi_stable/abi_stability/stable_abi_trait/trait.PrefixStableAbi.html\" title=\"trait abi_stable::abi_stability::stable_abi_trait::PrefixStableAbi\">PrefixStableAbi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LAYOUT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#77\">Source</a><a href=\"#associatedconstant.LAYOUT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/trait.StableAbi.html#associatedconstant.LAYOUT\" class=\"constant\">LAYOUT</a>: &amp;'static <a class=\"struct\" href=\"abi_stable/type_layout/struct.TypeLayout.html\" title=\"struct abi_stable::type_layout::TypeLayout\">TypeLayout</a></h4></section></summary><div class='docblock'>The layout of the type provided by implementors.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IsNonZeroType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#77\">Source</a><a href=\"#associatedtype.IsNonZeroType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/trait.StableAbi.html#associatedtype.IsNonZeroType\" class=\"associatedtype\">IsNonZeroType</a> = <a class=\"struct\" href=\"abi_stable/reexports/struct.False.html\" title=\"struct abi_stable::reexports::False\">False</a></h4></section></summary><div class='docblock'>Whether this type has a single invalid bit-pattern. <a href=\"abi_stable/trait.StableAbi.html#associatedtype.IsNonZeroType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ABI_CONSTS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#76-79\">Source</a><a href=\"#associatedconstant.ABI_CONSTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/trait.StableAbi.html#associatedconstant.ABI_CONSTS\" class=\"constant\">ABI_CONSTS</a>: <a class=\"struct\" href=\"abi_stable/abi_stability/stable_abi_trait/struct.AbiConsts.html\" title=\"struct abi_stable::abi_stability::stable_abi_trait::AbiConsts\">AbiConsts</a> = _</h4></section></summary><div class='docblock'><code>const</code>-equivalents of the associated types.</div></details></div></details>","StableAbi","abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<section id=\"impl-Send-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#217-222\">Source</a><a href=\"#impl-Send-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Send = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Send.html\" title=\"struct abi_stable::type_level::trait_marker::Send\">Send</a>&gt;&gt;,</div></h3></section>","Send","abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<section id=\"impl-Sync-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#224-229\">Source</a><a href=\"#impl-Sync-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Sync = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Sync.html\" title=\"struct abi_stable::type_level::trait_marker::Sync\">Sync</a>&gt;&gt;,</div></h3></section>","Sync","abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"],["<section id=\"impl-Unpin-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/sabi_trait/robject.rs.html#231-237\">Source</a><a href=\"#impl-Unpin-for-RObject%3C'lt,+P,+I,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, P, I, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"abi_stable/sabi_trait/struct.RObject.html\" title=\"struct abi_stable::sabi_trait::RObject\">RObject</a>&lt;'lt, P, I, V&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Unpin = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Unpin.html\" title=\"struct abi_stable::type_level::trait_marker::Unpin\">Unpin</a>&gt;&gt;,</div></h3></section>","Unpin","abi_stable::abi_stability::extra_checks::TypeChecker_trait::TypeChecker_Backend","abi_stable::abi_stability::extra_checks::ExtraChecks_trait::ExtraChecks_Backend","abi_stable::sabi_trait::doc_examples::Doer_trait::Doer_Backend","abi_stable::sabi_trait::doc_examples::Action_trait::Action_Backend"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[76437]}