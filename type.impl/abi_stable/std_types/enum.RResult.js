(function() {
    var type_impls = Object.fromEntries([["abi_stable",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-Clone-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-Debug-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, E&gt; <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    E: <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(__deserializer: __D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __D::<a class=\"associatedtype\" href=\"serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CResult%3CT,+E%3E%3E-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#508-517\">Source</a><a href=\"#impl-From%3CResult%3CT,+E%3E%3E-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;&gt; for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#508-517\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(this: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Result<T, E>>","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStaticEquivalent_-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#10\">Source</a><a href=\"#impl-GetStaticEquivalent_-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,\n    E: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.StaticEquivalent\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#10\">Source</a><a href=\"#associatedtype.StaticEquivalent\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" class=\"associatedtype\">StaticEquivalent</a> = _static_RResult&lt;&lt;T as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>, &lt;E as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>&gt;</h4></section></summary><div class='docblock'>The <code>'static</code> equivalent of <code>Self</code></div></details></div></details>","GetStaticEquivalent_","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-Hash-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoReprRust-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#519-528\">Source</a><a href=\"#impl-IntoReprRust-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; <a class=\"trait\" href=\"abi_stable/traits/trait.IntoReprRust.html\" title=\"trait abi_stable::traits::IntoReprRust\">IntoReprRust</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ReprRust\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#519-528\">Source</a><a href=\"#associatedtype.ReprRust\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/traits/trait.IntoReprRust.html#associatedtype.ReprRust\" class=\"associatedtype\">ReprRust</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;</h4></section></summary><div class='docblock'>The <code>#[repr(Rust)]</code> equivalent.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_rust\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#519-528\">Source</a><a href=\"#method.into_rust\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"abi_stable/traits/trait.IntoReprRust.html#tymethod.into_rust\" class=\"fn\">into_rust</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoReprRust.html#associatedtype.ReprRust\" title=\"type abi_stable::traits::IntoReprRust::ReprRust\">ReprRust</a></h4></section></summary><div class='docblock'>Performs the conversion</div></details></div></details>","IntoReprRust","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-Ord-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-PartialEq-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-PartialOrd-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#23-506\">Source</a><a href=\"#impl-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#36-41\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;E</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>RResult&lt;T, E&gt;</code> to <code>RResult&lt;&amp;T, &amp;E&gt;</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).as_ref(), ROk(<span class=\"kw-2\">&amp;</span><span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).as_ref(), RErr(<span class=\"kw-2\">&amp;</span><span class=\"number\">5</span>));\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#55-60\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut E</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>RResult&lt;T, E&gt;</code> to <code>RResult&lt;&amp;mut T, &amp;mut E&gt;</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).as_mut(), ROk(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).as_mut(), RErr(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">5</span>));\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_rok\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#74-76\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.is_rok\" class=\"fn\">is_rok</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether <code>self</code> is an <code>ROk</code></p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).is_rok(), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).is_rok(), <span class=\"bool-val\">false</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ok\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#90-92\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.is_ok\" class=\"fn\">is_ok</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether <code>self</code> is an <code>ROk</code></p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).is_ok(), <span class=\"bool-val\">true</span>);\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).is_ok(), <span class=\"bool-val\">false</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_rerr\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#106-108\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.is_rerr\" class=\"fn\">is_rerr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether <code>self</code> is an <code>RErr</code></p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).is_rerr(), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).is_rerr(), <span class=\"bool-val\">true</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_err\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#122-124\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.is_err\" class=\"fn\">is_err</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether <code>self</code> is an <code>RErr</code></p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).is_err(), <span class=\"bool-val\">false</span>);\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).is_err(), <span class=\"bool-val\">true</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_result\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#138-140\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.into_result\" class=\"fn\">into_result</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>RResult&lt;T, E&gt;</code> to <code>Result&lt;T, E&gt;</code>.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).into_result(), <span class=\"prelude-val\">Ok</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).into_result(), <span class=\"prelude-val\">Err</span>(<span class=\"number\">5</span>));\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#155-163\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.map\" class=\"fn\">map</a>&lt;U, F&gt;(self, op: F) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;U, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Converts the <code>RResult&lt;T, E&gt;</code> to a <code>RResult&lt;U, E&gt;</code> by transforming the value in\n<code>ROk</code> using the <code>op</code> closure.</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).map(|x| x * <span class=\"number\">3</span>), ROk(<span class=\"number\">30</span>));\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).map(|x| x / <span class=\"number\">2</span>), RErr(<span class=\"number\">5</span>));\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_err\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#178-186\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.map_err\" class=\"fn\">map_err</a>&lt;F, O&gt;(self, op: O) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, F&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(E) -&gt; F,</div></h4></section></summary><div class=\"docblock\"><p>Converts the <code>RResult&lt;T, E&gt;</code> to a <code>RResult&lt;U, F&gt;</code> by\ntransforming the value in <code>RErr</code> using the <code>op</code> closure.</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).map_err(|x| x * <span class=\"number\">3</span>), ROk(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).map_err(|x| x / <span class=\"number\">2</span>), RErr(<span class=\"number\">2</span>));\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_or_else\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#202-208\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.map_or_else\" class=\"fn\">map_or_else</a>&lt;U, M, F&gt;(self, with_err: F, with_ok: M) -&gt; U<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(E) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Converts the <code>RResult&lt;T, E&gt;</code> to a <code>U</code> by\ntransforming the value in <code>ROk</code> using the <code>with_ok</code> closure,\notherwise transforming the value in RErr using the <code>with_err</code> closure,</p>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).map_or_else(|<span class=\"kw\">_</span>| <span class=\"number\">77</span>, |x| x * <span class=\"number\">3</span>), <span class=\"number\">30</span>);\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).map_or_else(|e| e * <span class=\"number\">4</span>, |x| x / <span class=\"number\">2</span>), <span class=\"number\">20</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#237-245\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.and_then\" class=\"fn\">and_then</a>&lt;U, F&gt;(self, op: F) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;U, E&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;U, E&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the result of calling the <code>op</code> closure with the value in <code>ROk</code>,\notherwise returning the <code>RErr</code> unmodified.</p>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(\n    ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).and_then(|x| ROk::&lt;u32, u32&gt;(x * <span class=\"number\">3</span>)),\n    ROk(<span class=\"number\">30</span>),\n);\n<span class=\"macro\">assert_eq!</span>(\n    ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).and_then(|x| RErr::&lt;u32, u32&gt;(x * <span class=\"number\">3</span>)),\n    RErr(<span class=\"number\">30</span>),\n);\n<span class=\"macro\">assert_eq!</span>(\n    RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).and_then(|x| ROk::&lt;u32, u32&gt;(x / <span class=\"number\">2</span>)),\n    RErr(<span class=\"number\">5</span>),\n);\n<span class=\"macro\">assert_eq!</span>(\n    RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).and_then(|x| RErr::&lt;u32, u32&gt;(x / <span class=\"number\">2</span>)),\n    RErr(<span class=\"number\">5</span>),\n);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or_else\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#274-282\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.or_else\" class=\"fn\">or_else</a>&lt;F, O&gt;(self, op: O) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, F&gt;<div class=\"where\">where\n    O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(E) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, F&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns the result of calling the <code>op</code> closure with the value in <code>RErr</code>,\notherwise returning the <code>ROk</code> unmodified.</p>\n<h5 id=\"example-11\"><a class=\"doc-anchor\" href=\"#example-11\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(\n    ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).or_else(|e| ROk::&lt;u32, u32&gt;(e * <span class=\"number\">3</span>)),\n    ROk(<span class=\"number\">10</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).or_else(|e| RErr::&lt;u32, u32&gt;(e * <span class=\"number\">3</span>)),\n    ROk(<span class=\"number\">10</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).or_else(|e| ROk::&lt;u32, u32&gt;(e / <span class=\"number\">2</span>)),\n    ROk(<span class=\"number\">2</span>)\n);\n<span class=\"macro\">assert_eq!</span>(\n    RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).or_else(|e| RErr::&lt;u32, u32&gt;(e / <span class=\"number\">2</span>)),\n    RErr(<span class=\"number\">2</span>)\n);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#306-311\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.unwrap\" class=\"fn\">unwrap</a>(self) -&gt; T<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps <code>self</code>, returning the value in <code>ROk</code>.</p>\n<h5 id=\"panic\"><a class=\"doc-anchor\" href=\"#panic\">§</a>Panic</h5>\n<p>Panics with an error message if <code>self</code> is an <code>RErr</code>,\nusing <code>E</code>s Debug implementation.</p>\n<h5 id=\"example-12\"><a class=\"doc-anchor\" href=\"#example-12\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;<span class=\"kw\">_</span>, ()&gt;(<span class=\"number\">500</span>).unwrap(), <span class=\"number\">500</span>);\n</code></pre></div>\n<p>This one panics:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let _ </span>= RErr::&lt;(), <span class=\"kw\">_</span>&gt;(<span class=\"string\">\"Oh noooo!\"</span>).unwrap();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expect\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#336-341\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.expect\" class=\"fn\">expect</a>(self, message: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; T<div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps <code>self</code>, returning the value in <code>ROk</code>.</p>\n<h5 id=\"panic-1\"><a class=\"doc-anchor\" href=\"#panic-1\">§</a>Panic</h5>\n<p>Panics with an error message if <code>self</code> is an <code>RErr</code>,\nusing <code>E</code>s Debug implementation,\nas well as <code>message</code>.</p>\n<h5 id=\"example-13\"><a class=\"doc-anchor\" href=\"#example-13\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;<span class=\"kw\">_</span>, ()&gt;(<span class=\"number\">500</span>).expect(<span class=\"string\">\"Are you OK?\"</span>), <span class=\"number\">500</span>);\n</code></pre></div>\n<p>This one panics:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let _ </span>= RErr::&lt;(), <span class=\"kw\">_</span>&gt;(()).expect(<span class=\"string\">\"This can't be!\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_err\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#365-370\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.unwrap_err\" class=\"fn\">unwrap_err</a>(self) -&gt; E<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps <code>self</code>, returning the value in <code>RErr</code>.</p>\n<h5 id=\"panic-2\"><a class=\"doc-anchor\" href=\"#panic-2\">§</a>Panic</h5>\n<p>Panics with an error message if <code>self</code> is an <code>ROk</code>,\nusing <code>T</code>s Debug implementation.</p>\n<h5 id=\"example-14\"><a class=\"doc-anchor\" href=\"#example-14\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;(), u32&gt;(<span class=\"number\">0xB007</span>).unwrap_err(), <span class=\"number\">0xB007</span>);\n</code></pre></div>\n<p>This one panics:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let _ </span>= ROk::&lt;(), ()&gt;(()).unwrap_err();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expect_err\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#395-400\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.expect_err\" class=\"fn\">expect_err</a>(self, message: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; E<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps <code>self</code>, returning the value in <code>RErr</code>.</p>\n<h5 id=\"panic-3\"><a class=\"doc-anchor\" href=\"#panic-3\">§</a>Panic</h5>\n<p>Panics with an error message if <code>self</code> is an <code>ROk</code>,\nusing <code>T</code>s Debug implementation,\nas well as <code>message</code>.</p>\n<h5 id=\"example-15\"><a class=\"doc-anchor\" href=\"#example-15\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;(), u32&gt;(<span class=\"number\">0xB001</span>).expect_err(<span class=\"string\">\"Murphy's law\"</span>), <span class=\"number\">0xB001</span>);\n</code></pre></div>\n<p>This one panics:</p>\n\n<div class=\"example-wrap should_panic\"><a href=\"#\" class=\"tooltip\" title=\"This example panics\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let _ </span>= ROk::&lt;(), ()&gt;(()).expect_err(<span class=\"string\">\"Everything is Ok\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#414-419\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.unwrap_or\" class=\"fn\">unwrap_or</a>(self, optb: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the value in <code>ROk</code>, or <code>def</code> if <code>self</code> is <code>RErr</code>.</p>\n<h5 id=\"example-16\"><a class=\"doc-anchor\" href=\"#example-16\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).unwrap_or(<span class=\"number\">0xEEEE</span>), <span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).unwrap_or(<span class=\"number\">0b101010</span>), <span class=\"number\">0b101010</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_else\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#434-442\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.unwrap_or_else\" class=\"fn\">unwrap_or_else</a>&lt;F&gt;(self, op: F) -&gt; T<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(E) -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>Returns the value in <code>ROk</code>,\nor calls <code>def</code> with the error in <code>RErr</code>.</p>\n<h5 id=\"example-17\"><a class=\"doc-anchor\" href=\"#example-17\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).unwrap_or_else(|e| e * <span class=\"number\">3</span>), <span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).unwrap_or_else(|e| e / <span class=\"number\">2</span>), <span class=\"number\">2</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unwrap_or_default\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#457-465\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.unwrap_or_default\" class=\"fn\">unwrap_or_default</a>(self) -&gt; T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the value in <code>ROk</code>,\nor returns <code>T::default()</code> it <code>self</code> is an <code>RErr</code>.</p>\n<h5 id=\"example-18\"><a class=\"doc-anchor\" href=\"#example-18\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).unwrap_or_default(), <span class=\"number\">10</span>);\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).unwrap_or_default(), <span class=\"number\">0</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ok\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#480-485\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.ok\" class=\"fn\">ok</a>(self) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.ROption.html\" title=\"enum abi_stable::std_types::ROption\">ROption</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>RResult&lt;T, E&gt;</code> to <code>ROption&lt;T&gt;</code>,\n<code>ROk</code> maps to <code>RSome</code>, <code>RErr</code> maps to <code>RNone</code>.</p>\n<h5 id=\"example-19\"><a class=\"doc-anchor\" href=\"#example-19\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).ok(), RSome(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).ok(), RNone);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.err\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#500-505\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RResult.html#tymethod.err\" class=\"fn\">err</a>(self) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.ROption.html\" title=\"enum abi_stable::std_types::ROption\">ROption</a>&lt;E&gt;</h4></section></summary><div class=\"docblock\"><p>Converts from <code>RResult&lt;T, E&gt;</code> to <code>ROption&lt;T&gt;</code>,\n<code>ROk</code> maps to <code>RNone</code>, <code>RErr</code> maps to <code>RSome</code>.</p>\n<h5 id=\"example-20\"><a class=\"doc-anchor\" href=\"#example-20\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(ROk::&lt;u32, u32&gt;(<span class=\"number\">10</span>).err(), RNone);\n<span class=\"macro\">assert_eq!</span>(RErr::&lt;u32, u32&gt;(<span class=\"number\">5</span>).err(), RSome(<span class=\"number\">5</span>));\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-Serialize-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,\n    E: <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","abi_stable::library::RootModuleResult"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StableAbi-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#10\">Source</a><a href=\"#impl-StableAbi-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">StableAbi</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,\n    E: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LAYOUT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#10\">Source</a><a href=\"#associatedconstant.LAYOUT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/trait.StableAbi.html#associatedconstant.LAYOUT\" class=\"constant\">LAYOUT</a>: &amp;'static <a class=\"struct\" href=\"abi_stable/type_layout/struct.TypeLayout.html\" title=\"struct abi_stable::type_layout::TypeLayout\">TypeLayout</a></h4></section></summary><div class='docblock'>The layout of the type provided by implementors.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IsNonZeroType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#10\">Source</a><a href=\"#associatedtype.IsNonZeroType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/trait.StableAbi.html#associatedtype.IsNonZeroType\" class=\"associatedtype\">IsNonZeroType</a> = <a class=\"struct\" href=\"abi_stable/reexports/struct.False.html\" title=\"struct abi_stable::reexports::False\">False</a></h4></section></summary><div class='docblock'>Whether this type has a single invalid bit-pattern. <a href=\"abi_stable/trait.StableAbi.html#associatedtype.IsNonZeroType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ABI_CONSTS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#76-79\">Source</a><a href=\"#associatedconstant.ABI_CONSTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/trait.StableAbi.html#associatedconstant.ABI_CONSTS\" class=\"constant\">ABI_CONSTS</a>: <a class=\"struct\" href=\"abi_stable/abi_stability/stable_abi_trait/struct.AbiConsts.html\" title=\"struct abi_stable::abi_stability::stable_abi_trait::AbiConsts\">AbiConsts</a> = _</h4></section></summary><div class='docblock'><code>const</code>-equivalents of the associated types.</div></details></div></details>","StableAbi","abi_stable::library::RootModuleResult"],["<section id=\"impl-Copy-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-Copy-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section>","Copy","abi_stable::library::RootModuleResult"],["<section id=\"impl-Eq-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-Eq-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section>","Eq","abi_stable::library::RootModuleResult"],["<section id=\"impl-StructuralPartialEq-for-RResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/result.rs.html#8\">Source</a><a href=\"#impl-StructuralPartialEq-for-RResult%3CT,+E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, E&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RResult.html\" title=\"enum abi_stable::std_types::RResult\">RResult</a>&lt;T, E&gt;</h3></section>","StructuralPartialEq","abi_stable::library::RootModuleResult"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[68063]}