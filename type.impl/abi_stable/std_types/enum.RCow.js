(function() {
    var type_impls = Object.fromEntries([["abi_stable",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#354-365\">Source</a><a href=\"#impl-Clone-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#359-364\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#406-414\">Source</a><a href=\"#impl-Debug-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    B::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#411-413\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#367-380\">Source</a><a href=\"#impl-Deref-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#371\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = &lt;B as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#374-379\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#416-424\">Source</a><a href=\"#impl-Display-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    B::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#421-423\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCow%3C'a,+T%3E%3E-for-RCow%3C%3CT+as+RCowCompatibleRef%3C'a%3E%3E::RefC,+%3CT+as+RCowCompatibleRef%3C'a%3E%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#541-553\">Source</a><a href=\"#impl-From%3CCow%3C'a,+T%3E%3E-for-RCow%3C%3CT+as+RCowCompatibleRef%3C'a%3E%3E::RefC,+%3CT+as+RCowCompatibleRef%3C'a%3E%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, T&gt;&gt; for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;T::<a class=\"associatedtype\" href=\"abi_stable/std_types/cow/trait.RCowCompatibleRef.html#associatedtype.RefC\" title=\"type abi_stable::std_types::cow::RCowCompatibleRef::RefC\">RefC</a>, T::<a class=\"associatedtype\" href=\"abi_stable/std_types/cow/trait.RCowCompatibleRef.html#associatedtype.ROwned\" title=\"type abi_stable::std_types::cow::RCowCompatibleRef::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"abi_stable/std_types/cow/trait.RCowCompatibleRef.html\" title=\"trait abi_stable::std_types::cow::RCowCompatibleRef\">RCowCompatibleRef</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#541-553\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(this: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, T&gt;) -&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;T::<a class=\"associatedtype\" href=\"abi_stable/std_types/cow/trait.RCowCompatibleRef.html#associatedtype.RefC\" title=\"type abi_stable::std_types::cow::RCowCompatibleRef::RefC\">RefC</a>, T::<a class=\"associatedtype\" href=\"abi_stable/std_types/cow/trait.RCowCompatibleRef.html#associatedtype.ROwned\" title=\"type abi_stable::std_types::cow::RCowCompatibleRef::ROwned\">ROwned</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Cow<'a, T>>","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStaticEquivalent_-for-RCow%3CB,+O%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#117\">Source</a><a href=\"#impl-GetStaticEquivalent_-for-RCow%3CB,+O%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, O&gt; <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, O&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,\n    O: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.StaticEquivalent\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#117\">Source</a><a href=\"#associatedtype.StaticEquivalent\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" class=\"associatedtype\">StaticEquivalent</a> = _static_RCow&lt;&lt;B as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>, &lt;O as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>&gt;</h4></section></summary><div class='docblock'>The <code>'static</code> equivalent of <code>Self</code></div></details></div></details>","GetStaticEquivalent_","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#498-509\">Source</a><a href=\"#impl-Hash-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    B::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#503-508\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#477-485\">Source</a><a href=\"#impl-Ord-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    B::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#482-484\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CRCow%3CV,+%3CV+as+IntoOwned%3E::ROwned%3E%3E-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#466-475\">Source</a><a href=\"#impl-PartialEq%3CRCow%3CV,+%3CV+as+IntoOwned%3E::ROwned%3E%3E-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;V, &lt;V as <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;&gt; for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    V: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    B::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;V::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#472-474\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;V, V::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<RCow<V, <V as IntoOwned>::ROwned>>","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CRCow%3CV,+%3CV+as+IntoOwned%3E::ROwned%3E%3E-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#487-496\">Source</a><a href=\"#impl-PartialOrd%3CRCow%3CV,+%3CV+as+IntoOwned%3E::ROwned%3E%3E-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;V, &lt;V as <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;&gt; for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    V: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    B::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;V::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#493-495\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;V, V::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<RCow<V, <V as IntoOwned>::ROwned>>","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#202-281\">Source</a><a href=\"#impl-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#225-234\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RCow.html#tymethod.to_mut\" class=\"fn\">to_mut</a>(&amp;mut self) -&gt; &amp;mut B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a></h4></section></summary><div class=\"docblock\"><p>Get a mutable reference to the owned form of RCow,\nconverting to the owned form if it is currently the borrowed form.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::std_types::{RCow, RCowStr};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>cow: RCowStr&lt;<span class=\"lifetime\">'_</span>&gt; = RCow::from(<span class=\"string\">\"Hello\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>cow, <span class=\"string\">\"Hello\"</span>);\n<span class=\"macro\">assert!</span>(cow.is_borrowed());\n\ncow.to_mut().push_str(<span class=\"string\">\", world!\"</span>);\n\n<span class=\"macro\">assert!</span>(cow.is_owned());\n<span class=\"macro\">assert_eq!</span>(cow, RCow::from(<span class=\"string\">\"Hello, world!\"</span>));\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_owned\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#253-258\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RCow.html#tymethod.into_owned\" class=\"fn\">into_owned</a>(self) -&gt; B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a></h4></section></summary><div class=\"docblock\"><p>Unwraps into the owned owner form of RCow,\nconverting to the owned form if it is currently the borrowed form.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::std_types::{RCow, RCowStr};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>cow: RCowStr&lt;<span class=\"lifetime\">'_</span>&gt; = RCow::from(<span class=\"string\">\"Hello\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>cow, <span class=\"string\">\"Hello\"</span>);\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buff = cow.into_owned();\nbuff.push_str(<span class=\"string\">\", world!\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;*</span>buff, <span class=\"string\">\"Hello, world!\"</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrowed\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#275-280\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/std_types/enum.RCow.html#tymethod.borrowed\" class=\"fn\">borrowed</a>(&amp;self) -&gt; &amp;&lt;B as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class=\"docblock\"><p>Gets the contents of the RCow casted to the borrowed variant.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::std_types::{RCow, RCowSlice, RSlice};\n{\n    <span class=\"kw\">let </span>cow: RCowSlice&lt;<span class=\"lifetime\">'_</span>, u8&gt; = RCow::from(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>][..]);\n    <span class=\"macro\">assert_eq!</span>(cow.borrowed(), RSlice::from_slice(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));\n}\n{\n    <span class=\"kw\">let </span>cow: RCowSlice&lt;<span class=\"lifetime\">'_</span>, u8&gt; = RCow::from(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n    <span class=\"macro\">assert_eq!</span>(cow.borrowed(), RSlice::from_slice(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]));\n}</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RCow%3CB,+O%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#283-322\">Source</a><a href=\"#impl-RCow%3CB,+O%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, O&gt; <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, O&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_borrowed\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#301-303\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/std_types/enum.RCow.html#tymethod.is_borrowed\" class=\"fn\">is_borrowed</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Whether this is a borrowing RCow.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::std_types::{RCow, RCowSlice};\n\n{\n    <span class=\"kw\">let </span>cow: RCowSlice&lt;<span class=\"lifetime\">'_</span>, u8&gt; = RCow::from(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>][..]);\n    <span class=\"macro\">assert!</span>(cow.is_borrowed());\n}\n{\n    <span class=\"kw\">let </span>cow: RCowSlice&lt;<span class=\"lifetime\">'_</span>, u8&gt; = RCow::from(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n    <span class=\"macro\">assert!</span>(!cow.is_borrowed());\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_owned\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#319-321\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/std_types/enum.RCow.html#tymethod.is_owned\" class=\"fn\">is_owned</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Whether this is an owning RCow.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::std_types::{RCow, RCowSlice};\n\n<span class=\"kw\">let </span>cow: RCowSlice&lt;<span class=\"lifetime\">'_</span>, u8&gt; = RCow::from(<span class=\"kw-2\">&amp;</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>][..]);\n<span class=\"macro\">assert!</span>(!cow.is_owned());\n\n<span class=\"kw\">let </span>cow: RCowSlice&lt;<span class=\"lifetime\">'_</span>, u8&gt; = RCow::from(<span class=\"macro\">vec!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n<span class=\"macro\">assert!</span>(cow.is_owned());\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#880-891\">Source</a><a href=\"#impl-Serialize-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    B::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>: <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#885-890\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StableAbi-for-RCow%3CB,+O%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#117\">Source</a><a href=\"#impl-StableAbi-for-RCow%3CB,+O%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B, O&gt; <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">StableAbi</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, O&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,\n    O: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LAYOUT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#117\">Source</a><a href=\"#associatedconstant.LAYOUT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/trait.StableAbi.html#associatedconstant.LAYOUT\" class=\"constant\">LAYOUT</a>: &amp;'static <a class=\"struct\" href=\"abi_stable/type_layout/struct.TypeLayout.html\" title=\"struct abi_stable::type_layout::TypeLayout\">TypeLayout</a></h4></section></summary><div class='docblock'>The layout of the type provided by implementors.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IsNonZeroType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#117\">Source</a><a href=\"#associatedtype.IsNonZeroType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/trait.StableAbi.html#associatedtype.IsNonZeroType\" class=\"associatedtype\">IsNonZeroType</a> = <a class=\"struct\" href=\"abi_stable/reexports/struct.False.html\" title=\"struct abi_stable::reexports::False\">False</a></h4></section></summary><div class='docblock'>Whether this type has a single invalid bit-pattern. <a href=\"abi_stable/trait.StableAbi.html#associatedtype.IsNonZeroType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ABI_CONSTS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#76-79\">Source</a><a href=\"#associatedconstant.ABI_CONSTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/trait.StableAbi.html#associatedconstant.ABI_CONSTS\" class=\"constant\">ABI_CONSTS</a>: <a class=\"struct\" href=\"abi_stable/abi_stability/stable_abi_trait/struct.AbiConsts.html\" title=\"struct abi_stable::abi_stability::stable_abi_trait::AbiConsts\">AbiConsts</a> = _</h4></section></summary><div class='docblock'><code>const</code>-equivalents of the associated types.</div></details></div></details>","StableAbi","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<section id=\"impl-Copy-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#347-352\">Source</a><a href=\"#impl-Copy-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"],["<section id=\"impl-Eq-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/std_types/cow.rs.html#459-464\">Source</a><a href=\"#impl-Eq-for-RCow%3CB,+%3CB+as+IntoOwned%3E::ROwned%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"abi_stable/std_types/enum.RCow.html\" title=\"enum abi_stable::std_types::RCow\">RCow</a>&lt;B, B::<a class=\"associatedtype\" href=\"abi_stable/traits/trait.IntoOwned.html#associatedtype.ROwned\" title=\"type abi_stable::traits::IntoOwned::ROwned\">ROwned</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"abi_stable/traits/trait.IntoOwned.html\" title=\"trait abi_stable::traits::IntoOwned\">IntoOwned</a>,\n    B::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","abi_stable::std_types::cow::RCowVal","abi_stable::std_types::cow::RCowStr","abi_stable::std_types::cow::RCowSlice"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[55664]}