(function() {
    var type_impls = Object.fromEntries([["abi_stable",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BufRead-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2135-2158\">Source</a><a href=\"#impl-BufRead-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html\" title=\"trait std::io::BufRead\">BufRead</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;IoRead = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.IoRead.html\" title=\"struct abi_stable::type_level::trait_marker::IoRead\">IoRead</a>&gt;, IoBufRead = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.IoBufRead.html\" title=\"struct abi_stable::type_level::trait_marker::IoBufRead\">IoBufRead</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2143-2149\">Source</a><a href=\"#method.fill_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#tymethod.fill_buf\" class=\"fn\">fill_buf</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]&gt;</h4></section></summary><div class='docblock'>Returns the contents of the internal buffer, filling it with more data, via <code>Read</code> methods, if empty. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#tymethod.fill_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.consume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2151-2157\">Source</a><a href=\"#method.consume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#tymethod.consume\" class=\"fn\">consume</a>(&amp;mut self, amount: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Marks the given <code>amount</code> of additional bytes from the internal buffer as having been read.\nSubsequent calls to <code>read</code> only return bytes that have not been marked as read. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#tymethod.consume\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_data_left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#2395\">Source</a><a href=\"#method.has_data_left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.has_data_left\" class=\"fn\">has_data_left</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>buf_read_has_data_left</code>)</span></div></span><div class='docblock'>Checks if there is any data left to be <code>read</code>. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.has_data_left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_until\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#2454\">Source</a></span><a href=\"#method.read_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.read_until\" class=\"fn\">read_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF is reached. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.read_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_until\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.83.0\">1.83.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#2514\">Source</a></span><a href=\"#method.skip_until\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.skip_until\" class=\"fn\">skip_until</a>(&amp;mut self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Skips all bytes until the delimiter <code>byte</code> or EOF is reached. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.skip_until\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_line\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#2582\">Source</a></span><a href=\"#method.read_line\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.read_line\" class=\"fn\">read_line</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until a newline (the <code>0xA</code> byte) is reached, and append\nthem to the provided <code>String</code> buffer. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.read_line\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#2620-2622\">Source</a></span><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.split\" class=\"fn\">split</a>(self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/struct.Split.html\" title=\"struct std::io::Split\">Split</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator over the contents of this reader split on the byte\n<code>byte</code>. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.split\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lines\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#2657-2659\">Source</a></span><a href=\"#method.lines\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.lines\" class=\"fn\">lines</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/struct.Lines.html\" title=\"struct std::io::Lines\">Lines</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns an iterator over the lines of this reader. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.BufRead.html#method.lines\">Read more</a></div></details></div></details>","BufRead","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1666-1675\">Source</a><a href=\"#impl-Clone-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>,\n    Self: CloneImpl&lt;&lt;P as <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html#associatedtype.Kind\" title=\"type abi_stable::pointer_trait::GetPointerKind::Kind\">Kind</a>&gt;,</div></h3><div class=\"docblock\"><p>Clone is implemented for references and smart pointers,\nusing <code>GetPointerKind</code> to decide whether <code>P</code> is a smart pointer or a reference.</p>\n</div></section></summary><div class=\"docblock\"><p>DynTrait does not implement Clone if P ==<code>RMut&lt;'_, ()&gt;</code> :</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>object = DynTrait::from_value(()).interface(());\n<span class=\"kw\">let </span>borrow = object.reborrow_mut();\n<span class=\"kw\">let _ </span>= borrow.clone();\n</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1672-1674\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1691-1701\">Source</a><a href=\"#impl-Debug-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Debug = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Debug.html\" title=\"struct abi_stable::type_level::trait_marker::Debug\">Debug</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1696-1700\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1740-1755\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, 'borr: 'de, P, I, EV&gt; <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    EV: 'borr,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a> + 'borr,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a> + 'borr + <a class=\"trait\" href=\"abi_stable/erased_types/trait.DeserializeDyn.html\" title=\"trait abi_stable::erased_types::DeserializeDyn\">DeserializeDyn</a>&lt;'de, Self&gt;,\n    &lt;I as <a class=\"trait\" href=\"abi_stable/erased_types/trait.DeserializeDyn.html\" title=\"trait abi_stable::erased_types::DeserializeDyn\">DeserializeDyn</a>&lt;'de, Self&gt;&gt;::<a class=\"associatedtype\" href=\"abi_stable/erased_types/trait.DeserializeDyn.html#associatedtype.Proxy\" title=\"type abi_stable::erased_types::DeserializeDyn::Proxy\">Proxy</a>: <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3><div class=\"docblock\"><p>For an example of how to deserialize DynTrait,\n<a href=\"abi_stable/erased_types/trait.DeserializeDyn.html#example\" title=\"trait abi_stable::erased_types::DeserializeDyn\">look here</a></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1748-1754\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, D::<a class=\"associatedtype\" href=\"serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1679-1689\">Source</a><a href=\"#impl-Display-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Display = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Display.html\" title=\"struct abi_stable::type_level::trait_marker::Display\">Display</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1684-1688\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DoubleEndedIterator-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1970-1984\">Source</a><a href=\"#impl-DoubleEndedIterator-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, Item, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Item&gt;,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/erased_types/trait.IteratorItemOrDefault.html\" title=\"trait abi_stable::erased_types::IteratorItemOrDefault\">IteratorItemOrDefault</a>&lt;'borr, Item = Item&gt; + <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;DoubleEndedIterator = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.DoubleEndedIterator.html\" title=\"struct abi_stable::type_level::trait_marker::DoubleEndedIterator\">DoubleEndedIterator</a>&gt;&gt;,\n    Item: 'borr,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1978-1983\">Source</a><a href=\"#method.next_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#tymethod.next_back\" class=\"fn\">next_back</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Item&gt;</h4></section></summary><div class='docblock'>Removes and returns an element from the end of the iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#tymethod.next_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_back_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/double_ended.rs.html#138\">Source</a><a href=\"#method.advance_back_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.advance_back_by\" class=\"fn\">advance_back_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>)</span></div></span><div class='docblock'>Advances the iterator from the back by <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.advance_back_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_back\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.37.0\">1.37.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/double_ended.rs.html#191\">Source</a></span><a href=\"#method.nth_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.nth_back\" class=\"fn\">nth_back</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;</h4></section></summary><div class='docblock'>Returns the <code>n</code>th element from the end of the iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.nth_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_rfold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/double_ended.rs.html#230-234\">Source</a></span><a href=\"#method.try_rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.try_rfold\" class=\"fn\">try_rfold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class='docblock'>This is the reverse version of <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\" title=\"method core::iter::traits::iterator::Iterator::try_fold\"><code>Iterator::try_fold()</code></a>: it takes\nelements starting from the back of the iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.try_rfold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/double_ended.rs.html#301-304\">Source</a></span><a href=\"#method.rfold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfold\" class=\"fn\">rfold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; B<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>An iterator method that reduces the iterator’s elements to a single,\nfinal value, starting from the back. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rfind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/double_ended.rs.html#356-359\">Source</a></span><a href=\"#method.rfind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfind\" class=\"fn\">rfind</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element of an iterator from the back that satisfies a predicate. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html#method.rfind\">Read more</a></div></details></div></details>","DoubleEndedIterator","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1594-1607\">Source</a><a href=\"#impl-Drop-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1598-1606\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+P,+I%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#585-657\">Source</a><a href=\"#impl-DynTrait%3C'borr,+P,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_borrowing_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#642-656\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.from_borrowing_ptr\" class=\"fn\">from_borrowing_ptr</a>&lt;OrigPtr&gt;(object: OrigPtr) -&gt; Self<div class=\"where\">where\n    OrigPtr: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a> + 'borr + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html\" title=\"trait abi_stable::pointer_trait::CanTransmuteElement\">CanTransmuteElement</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, TransmutedPtr = P&gt;,\n    OrigPtr::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html#associatedtype.PtrTarget\" title=\"type abi_stable::pointer_trait::GetPointerKind::PtrTarget\">PtrTarget</a>: 'borr,\n    <a class=\"struct\" href=\"abi_stable/erased_types/struct.VTable_Ref.html\" title=\"struct abi_stable::erased_types::VTable_Ref\">VTable_Ref</a>&lt;'borr, P, I&gt;: <a class=\"trait\" href=\"abi_stable/erased_types/trait.MakeVTable.html\" title=\"trait abi_stable::erased_types::MakeVTable\">MakeVTable</a>&lt;'borr, OrigPtr::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html#associatedtype.PtrTarget\" title=\"type abi_stable::pointer_trait::GetPointerKind::PtrTarget\">PtrTarget</a>, OrigPtr, <a class=\"struct\" href=\"abi_stable/type_level/downcasting/struct.TD_Opaque.html\" title=\"struct abi_stable::type_level::downcasting::TD_Opaque\">TD_Opaque</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Constructs the <code>DynTrait&lt;_&gt;</code> from a pointer to the erased type\nwith a <code>'borr</code> borrow.</p>\n<p>Cannot downcast the DynTrait afterwards.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    erased_types::interfaces::DebugDisplayInterface,\n    std_types::{RArc, RBox},\n    DynTrait, RMut, RRef,\n};\n\n<span class=\"comment\">// Constructing a DynTrait from a `&amp;T`\n</span>{\n    <span class=\"comment\">// `DynTrait`s constructed from `&amp;` are `DynTrait&lt;'_, RRef&lt;'_, ()&gt;, _&gt;`\n    // since `&amp;T` can't soundly be transmuted back and forth into `&amp;()`\n    </span><span class=\"kw\">let </span>rref: DynTrait&lt;<span class=\"lifetime\">'_</span>, RRef&lt;<span class=\"lifetime\">'_</span>, ()&gt;, DebugDisplayInterface&gt; =\n        DynTrait::from_borrowing_ptr(<span class=\"kw-2\">&amp;</span><span class=\"number\">34i32</span>);\n\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, rref), <span class=\"string\">\"34\"</span>);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, rref), <span class=\"string\">\"34\"</span>);\n}\n<span class=\"comment\">// Constructing a DynTrait from a `&amp;mut T`\n</span>{\n    <span class=\"kw\">let </span>mmut = <span class=\"kw-2\">&amp;mut </span><span class=\"string\">\"world\"</span>;\n    <span class=\"comment\">// `DynTrait`s constructed from `&amp;mut` are `DynTrait&lt;'_, RMut&lt;'_, ()&gt;, _&gt;`\n    // since `&amp;mut T` can't soundly be transmuted back and forth into `&amp;mut ()`\n    </span><span class=\"kw\">let </span>rmut: DynTrait&lt;<span class=\"lifetime\">'_</span>, RMut&lt;<span class=\"lifetime\">'_</span>, ()&gt;, DebugDisplayInterface&gt; =\n        DynTrait::from_borrowing_ptr(mmut).interface(DebugDisplayInterface);\n\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, rmut), <span class=\"string\">r#\"\"world\"\"#</span>);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, rmut), <span class=\"string\">\"world\"</span>);\n}\n<span class=\"comment\">// Constructing a DynTrait from a `RBox&lt;T&gt;`\n</span>{\n    <span class=\"kw\">let </span>boxed: DynTrait&lt;<span class=\"lifetime\">'_</span>, RBox&lt;()&gt;, DebugDisplayInterface&gt; =\n        DynTrait::from_borrowing_ptr(RBox::new(<span class=\"bool-val\">true</span>));\n\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, boxed), <span class=\"string\">\"true\"</span>);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, boxed), <span class=\"string\">\"true\"</span>);\n}\n<span class=\"comment\">// Constructing a DynTrait from an `RArc&lt;T&gt;`\n</span>{\n    <span class=\"kw\">let </span>arc: DynTrait&lt;<span class=\"lifetime\">'_</span>, RArc&lt;()&gt;, <span class=\"kw\">_</span>&gt; =\n        DynTrait::from_borrowing_ptr(RArc::new(<span class=\"string\">'a'</span>)).interface(DebugDisplayInterface);\n\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, arc), <span class=\"string\">\"'a'\"</span>);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, arc), <span class=\"string\">\"a\"</span>);\n}\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1045-1344\">Source</a><a href=\"#impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_into\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1110-1120\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.downcast_into\" class=\"fn\">downcast_into</a>&lt;T&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;P::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html#associatedtype.TransmutedPtr\" title=\"type abi_stable::pointer_trait::CanTransmuteElement::TransmutedPtr\">TransmutedPtr</a>, <a class=\"struct\" href=\"abi_stable/erased_types/struct.UneraseError.html\" title=\"struct abi_stable::erased_types::UneraseError\">UneraseError</a>&lt;Self&gt;&gt;<div class=\"where\">where\n    T: 'static,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html\" title=\"trait abi_stable::pointer_trait::CanTransmuteElement\">CanTransmuteElement</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps the <code>DynTrait&lt;_&gt;</code> into a pointer of\nthe concrete type that it was constructed with.</p>\n<p><code>T</code> is required to not borrow anything.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This will return an error in any of these conditions:</p>\n<ul>\n<li>\n<p>It is called in a dynamic library/binary outside\nthe one from which this <code>DynTrait&lt;_&gt;</code> was constructed.</p>\n</li>\n<li>\n<p>The DynTrait was constructed using a <code>from_borrowing_*</code> method</p>\n</li>\n<li>\n<p><code>T</code> is not the concrete type this <code>DynTrait&lt;_&gt;</code> was constructed with.</p>\n</li>\n</ul>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    std_types::{RArc, RBox},\n    DynTrait,\n};\n\n{\n    <span class=\"kw\">fn </span>to() -&gt; DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, ()&gt; {\n        DynTrait::from_value(<span class=\"string\">b'A'</span>)\n    }\n\n    <span class=\"macro\">assert_eq!</span>(to().downcast_into::&lt;u8&gt;().ok(), <span class=\"prelude-val\">Some</span>(RBox::new(<span class=\"string\">b'A'</span>)));\n    <span class=\"macro\">assert_eq!</span>(to().downcast_into::&lt;u16&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n{\n    <span class=\"kw\">fn </span>to() -&gt; DynTrait&lt;<span class=\"lifetime\">'static</span>, RArc&lt;()&gt;, ()&gt; {\n        DynTrait::from_ptr(RArc::new(<span class=\"string\">b'B'</span>))\n    }\n\n    <span class=\"macro\">assert_eq!</span>(to().downcast_into::&lt;u8&gt;().ok(), <span class=\"prelude-val\">Some</span>(RArc::new(<span class=\"string\">b'B'</span>)));\n    <span class=\"macro\">assert_eq!</span>(to().downcast_into::&lt;u16&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_as\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1168-1175\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.downcast_as\" class=\"fn\">downcast_as</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>, <a class=\"struct\" href=\"abi_stable/erased_types/struct.UneraseError.html\" title=\"struct abi_stable::erased_types::UneraseError\">UneraseError</a>&lt;&amp;Self&gt;&gt;<div class=\"where\">where\n    T: 'static,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps the <code>DynTrait&lt;_&gt;</code> into a reference of\nthe concrete type that it was constructed with.</p>\n<p><code>T</code> is required to not borrow anything.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This will return an error in any of these conditions:</p>\n<ul>\n<li>\n<p>It is called in a dynamic library/binary outside\nthe one from which this <code>DynTrait&lt;_&gt;</code> was constructed.</p>\n</li>\n<li>\n<p>The DynTrait was constructed using a <code>from_borrowing_*</code> method</p>\n</li>\n<li>\n<p><code>T</code> is not the concrete type this <code>DynTrait&lt;_&gt;</code> was constructed with.</p>\n</li>\n</ul>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{std_types::RArc, DynTrait, RMut, RRef};\n\n{\n    <span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RRef&lt;<span class=\"lifetime\">'_</span>, ()&gt;, ()&gt; = DynTrait::from_ptr(<span class=\"kw-2\">&amp;</span><span class=\"number\">9u8</span>);\n\n    <span class=\"macro\">assert_eq!</span>(to.downcast_as::&lt;u8&gt;().ok(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">9u8</span>));\n    <span class=\"macro\">assert_eq!</span>(to.downcast_as::&lt;u16&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>val = <span class=\"number\">7u8</span>;\n\n    <span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RMut&lt;<span class=\"lifetime\">'_</span>, ()&gt;, ()&gt; =\n        DynTrait::from_ptr(<span class=\"kw-2\">&amp;mut </span>val);\n\n    <span class=\"macro\">assert_eq!</span>(to.downcast_as::&lt;u8&gt;().ok(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">7</span>));\n    <span class=\"macro\">assert_eq!</span>(to.downcast_as::&lt;u16&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n{\n    <span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RArc&lt;()&gt;, ()&gt; =\n        DynTrait::from_ptr(RArc::new(<span class=\"number\">1u8</span>));\n\n    <span class=\"macro\">assert_eq!</span>(to.downcast_as::&lt;u8&gt;().ok(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;</span><span class=\"number\">1u8</span>));\n    <span class=\"macro\">assert_eq!</span>(to.downcast_as::&lt;u16&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downcast_as_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1216-1223\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.downcast_as_mut\" class=\"fn\">downcast_as_mut</a>&lt;T&gt;(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a>, <a class=\"struct\" href=\"abi_stable/erased_types/struct.UneraseError.html\" title=\"struct abi_stable::erased_types::UneraseError\">UneraseError</a>&lt;&amp;mut Self&gt;&gt;<div class=\"where\">where\n    T: 'static,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps the <code>DynTrait&lt;_&gt;</code> into a mutable reference of\nthe concrete type that it was constructed with.</p>\n<p><code>T</code> is required to not borrow anything.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>This will return an error in any of these conditions:</p>\n<ul>\n<li>\n<p>It is called in a dynamic library/binary outside\nthe one from which this <code>DynTrait&lt;_&gt;</code> was constructed.</p>\n</li>\n<li>\n<p>The DynTrait was constructed using a <code>from_borrowing_*</code> method</p>\n</li>\n<li>\n<p><code>T</code> is not the concrete type this <code>DynTrait&lt;_&gt;</code> was constructed with.</p>\n</li>\n</ul>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{std_types::RBox, DynTrait, RMut};\n\n{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>val = <span class=\"number\">7u8</span>;\n\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RMut&lt;<span class=\"lifetime\">'_</span>, ()&gt;, ()&gt; =\n        DynTrait::from_ptr(<span class=\"kw-2\">&amp;mut </span>val);\n\n    <span class=\"macro\">assert_eq!</span>(to.downcast_as_mut::&lt;u8&gt;().ok(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">7</span>));\n    <span class=\"macro\">assert_eq!</span>(to.downcast_as_mut::&lt;u16&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, ()&gt; =\n        DynTrait::from_ptr(RBox::new(<span class=\"number\">1u8</span>));\n\n    <span class=\"macro\">assert_eq!</span>(to.downcast_as_mut::&lt;u8&gt;().ok(), <span class=\"prelude-val\">Some</span>(<span class=\"kw-2\">&amp;mut </span><span class=\"number\">1u8</span>));\n    <span class=\"macro\">assert_eq!</span>(to.downcast_as_mut::&lt;u16&gt;().ok(), <span class=\"prelude-val\">None</span>);\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_downcast_into\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1258-1264\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.unchecked_downcast_into\" class=\"fn\">unchecked_downcast_into</a>&lt;T&gt;(self) -&gt; P::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html#associatedtype.TransmutedPtr\" title=\"type abi_stable::pointer_trait::CanTransmuteElement::TransmutedPtr\">TransmutedPtr</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a> + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html\" title=\"trait abi_stable::pointer_trait::CanTransmuteElement\">CanTransmuteElement</a>&lt;T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps the <code>DynTrait&lt;_&gt;</code> into a pointer to T,\nwithout checking whether <code>T</code> is the type that the DynTrait was constructed with.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>You must check that <code>T</code> is the type that DynTrait was constructed\nwith through other means.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    std_types::{RArc, RBox},\n    DynTrait,\n};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">fn </span>to() -&gt; DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, ()&gt; {\n        DynTrait::from_value(<span class=\"string\">b'A'</span>)\n    }\n\n    <span class=\"macro\">assert_eq!</span>(to().unchecked_downcast_into::&lt;u8&gt;(), RBox::new(<span class=\"string\">b'A'</span>));\n}\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">fn </span>to() -&gt; DynTrait&lt;<span class=\"lifetime\">'static</span>, RArc&lt;()&gt;, ()&gt; {\n        DynTrait::from_ptr(RArc::new(<span class=\"string\">b'B'</span>))\n    }\n\n    <span class=\"macro\">assert_eq!</span>(to().unchecked_downcast_into::&lt;u8&gt;(), RArc::new(<span class=\"string\">b'B'</span>));\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_downcast_as\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1301-1306\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.unchecked_downcast_as\" class=\"fn\">unchecked_downcast_as</a>&lt;T&gt;(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps the <code>DynTrait&lt;_&gt;</code> into a reference to T,\nwithout checking whether <code>T</code> is the type that the DynTrait was constructed with.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>You must check that <code>T</code> is the type that DynTrait was constructed\nwith through other means.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{std_types::RArc, DynTrait, RMut, RRef};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RRef&lt;<span class=\"lifetime\">'_</span>, ()&gt;, ()&gt; = DynTrait::from_ptr(<span class=\"kw-2\">&amp;</span><span class=\"number\">9u8</span>);\n\n    <span class=\"macro\">assert_eq!</span>(to.unchecked_downcast_as::&lt;u8&gt;(), <span class=\"kw-2\">&amp;</span><span class=\"number\">9u8</span>);\n}\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>val = <span class=\"number\">7u8</span>;\n\n    <span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RMut&lt;<span class=\"lifetime\">'_</span>, ()&gt;, ()&gt; =\n        DynTrait::from_ptr(<span class=\"kw-2\">&amp;mut </span>val);\n\n    <span class=\"macro\">assert_eq!</span>(to.unchecked_downcast_as::&lt;u8&gt;(), <span class=\"kw-2\">&amp;</span><span class=\"number\">7</span>);\n}\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RArc&lt;()&gt;, ()&gt; =\n        DynTrait::from_ptr(RArc::new(<span class=\"number\">1u8</span>));\n\n    <span class=\"macro\">assert_eq!</span>(to.unchecked_downcast_as::&lt;u8&gt;(), <span class=\"kw-2\">&amp;</span><span class=\"number\">1u8</span>);\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_downcast_as_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1338-1343\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.unchecked_downcast_as_mut\" class=\"fn\">unchecked_downcast_as_mut</a>&lt;T&gt;(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut T</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,</div></h4></section></summary><div class=\"docblock\"><p>Unwraps the <code>DynTrait&lt;_&gt;</code> into a mutable reference to T,\nwithout checking whether <code>T</code> is the type that the DynTrait was constructed with.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<p>You must check that <code>T</code> is the type that DynTrait was constructed\nwith through other means.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{std_types::RBox, DynTrait, RMut};\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>val = <span class=\"number\">7u8</span>;\n\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RMut&lt;<span class=\"lifetime\">'_</span>, ()&gt;, ()&gt; =\n        DynTrait::from_ptr(<span class=\"kw-2\">&amp;mut </span>val);\n\n    <span class=\"macro\">assert_eq!</span>(to.unchecked_downcast_as_mut::&lt;u8&gt;(), <span class=\"kw-2\">&amp;mut </span><span class=\"number\">7</span>);\n}\n<span class=\"kw\">unsafe </span>{\n    <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, ()&gt; =\n        DynTrait::from_ptr(RBox::new(<span class=\"number\">1u8</span>));\n\n    <span class=\"macro\">assert_eq!</span>(to.unchecked_downcast_as_mut::&lt;u8&gt;(), <span class=\"kw-2\">&amp;mut </span><span class=\"number\">1u8</span>);\n}\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1366-1466\">Source</a><a href=\"#impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reborrow\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1402-1416\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.reborrow\" class=\"fn\">reborrow</a>&lt;'re&gt;(&amp;'re self) -&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RRef.html\" title=\"struct abi_stable::sabi_types::RRef\">RRef</a>&lt;'re, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I, EV&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DynTrait&lt;&#39;borr, RRef&lt;&#39;re, ()&gt;, I, EV&gt;\">ⓘ</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,\n    PrivStruct: ReborrowBounds&lt;I::<a class=\"associatedtype\" href=\"abi_stable/trait.InterfaceType.html#associatedtype.Send\" title=\"type abi_stable::InterfaceType::Send\">Send</a>, I::<a class=\"associatedtype\" href=\"abi_stable/trait.InterfaceType.html#associatedtype.Sync\" title=\"type abi_stable::InterfaceType::Sync\">Sync</a>&gt;,\n    EV: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a shared reborrow of this DynTrait.</p>\n<p>The reborrowed DynTrait cannot use these methods:</p>\n<ul>\n<li>DynTrait::default</li>\n</ul>\n<p>This is only callable if <code>DynTrait</code> is either <code>Send + Sync</code> or <code>!Send + !Sync</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    erased_types::interfaces::DebugDisplayInterface,\n    std_types::RBox,\n    type_level::{impl_enum::Implemented, trait_marker},\n    DynTrait, InterfaceType, RRef,\n};\n\n<span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, DebugDisplayInterface&gt; =\n    DynTrait::from_value(<span class=\"number\">1337_u16</span>);\n\n<span class=\"macro\">assert_eq!</span>(debug_string(to.reborrow()), <span class=\"string\">\"1337\"</span>);\n\n<span class=\"kw\">fn </span>debug_string&lt;I&gt;(to: DynTrait&lt;<span class=\"lifetime\">'_</span>, RRef&lt;<span class=\"lifetime\">'_</span>, ()&gt;, I&gt;) -&gt; String\n<span class=\"kw\">where\n    </span>I: InterfaceType&lt;Debug = Implemented&lt;trait_marker::Debug&gt;&gt;,\n{\n    <span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, to)\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reborrow_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1450-1465\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.reborrow_mut\" class=\"fn\">reborrow_mut</a>&lt;'re&gt;(&amp;'re mut self) -&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RMut.html\" title=\"struct abi_stable::sabi_types::RMut\">RMut</a>&lt;'re, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I, EV&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DynTrait&lt;&#39;borr, RMut&lt;&#39;re, ()&gt;, I, EV&gt;\">ⓘ</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,\n    PrivStruct: ReborrowBounds&lt;I::<a class=\"associatedtype\" href=\"abi_stable/trait.InterfaceType.html#associatedtype.Send\" title=\"type abi_stable::InterfaceType::Send\">Send</a>, I::<a class=\"associatedtype\" href=\"abi_stable/trait.InterfaceType.html#associatedtype.Sync\" title=\"type abi_stable::InterfaceType::Sync\">Sync</a>&gt;,\n    EV: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a mutable reborrow of this DynTrait.</p>\n<p>The reborrowed DynTrait cannot use these methods:</p>\n<ul>\n<li>\n<p>DynTrait::default</p>\n</li>\n<li>\n<p>DynTrait::clone</p>\n</li>\n</ul>\n<p>This is only callable if <code>DynTrait</code> is either <code>Send + Sync</code> or <code>!Send + !Sync</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    erased_types::interfaces::DEIteratorInterface, std_types::RBox, DynTrait,\n};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to = DynTrait::from_value(<span class=\"number\">0_u8</span>..=<span class=\"number\">255</span>).interface(DEIteratorInterface::NEW);\n\n<span class=\"macro\">assert_eq!</span>(both_ends(to.reborrow_mut()), (<span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">255</span>)));\n<span class=\"macro\">assert_eq!</span>(both_ends(to.reborrow_mut()), (<span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">254</span>)));\n<span class=\"macro\">assert_eq!</span>(both_ends(to.reborrow_mut()), (<span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">253</span>)));\n<span class=\"macro\">assert_eq!</span>(both_ends(to.reborrow_mut()), (<span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">252</span>)));\n\n<span class=\"kw\">fn </span>both_ends&lt;I&gt;(<span class=\"kw-2\">mut </span>to: I) -&gt; (<span class=\"prelude-ty\">Option</span>&lt;I::Item&gt;, <span class=\"prelude-ty\">Option</span>&lt;I::Item&gt;)\n<span class=\"kw\">where\n    </span>I: DoubleEndedIterator,\n{\n    (to.next(), to.next_back())\n}\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1489-1579\">Source</a><a href=\"#impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a> + 'borr,\n    EV: 'borr,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1546-1556\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.default\" class=\"fn\">default</a>(&amp;self) -&gt; Self<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a> + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>&lt;Kind = <a class=\"struct\" href=\"abi_stable/pointer_trait/struct.PK_SmartPointer.html\" title=\"struct abi_stable::pointer_trait::PK_SmartPointer\">PK_SmartPointer</a>&gt;,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Default = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Default.html\" title=\"struct abi_stable::type_level::trait_marker::Default\">Default</a>&gt;&gt;,\n    EV: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructs a <code>DynTrait&lt;P, I&gt;</code> with the default value for <code>P</code>.</p>\n<h5 id=\"reborrowing\"><a class=\"doc-anchor\" href=\"#reborrowing\">§</a>Reborrowing</h5>\n<p>This cannot be called with a reborrowed DynTrait:</p>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>object = DynTrait::from_value(()).interface(DefaultInterface);\n<span class=\"kw\">let </span>borrow = object.reborrow();\n<span class=\"kw\">let _ </span>= borrow.default();\n</code></pre></div>\n\n<div class=\"example-wrap compile_fail\"><a href=\"#\" class=\"tooltip\" title=\"This example deliberately fails to compile\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>object = DynTrait::from_value(()).interface(DefaultInterface);\n<span class=\"kw\">let </span>borrow = object.reborrow_mut();\n<span class=\"kw\">let _ </span>= borrow.default();\n</code></pre></div>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{erased_types::interfaces::DebugDefEqInterface, DynTrait};\n\n{\n    <span class=\"kw\">let </span>object = DynTrait::from_value(<span class=\"bool-val\">true</span>).interface(DebugDefEqInterface);\n\n    <span class=\"macro\">assert_eq!</span>(\n        object.default(),\n        DynTrait::from_value(<span class=\"bool-val\">false</span>).interface(DebugDefEqInterface)\n    );\n}\n{\n    <span class=\"kw\">let </span>object = DynTrait::from_value(<span class=\"number\">123u8</span>).interface(DebugDefEqInterface);\n\n    <span class=\"macro\">assert_eq!</span>(\n        object.default(),\n        DynTrait::from_value(<span class=\"number\">0u8</span>).interface(DebugDefEqInterface)\n    );\n}\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_into_proxy\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1562-1569\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.serialize_into_proxy\" class=\"fn\">serialize_into_proxy</a>&lt;'a&gt;(&amp;'a self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;I::ProxyType, <a class=\"type\" href=\"abi_stable/std_types/type.RBoxError.html\" title=\"type abi_stable::std_types::RBoxError\">RBoxError</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Serialize = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Serialize.html\" title=\"struct abi_stable::type_level::trait_marker::Serialize\">Serialize</a>&gt;&gt; + GetSerializeProxyType&lt;'a&gt;,</div></h4></section></summary><div class=\"docblock\"><p>It serializes a <code>DynTrait&lt;_&gt;</code> into a string by using\n<code>&lt;ConcreteType as SerializeType&gt;::serialize_impl</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize_from_proxy\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1572-1578\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.deserialize_from_proxy\" class=\"fn\">deserialize_from_proxy</a>&lt;'de&gt;(proxy: I::<a class=\"associatedtype\" href=\"abi_stable/erased_types/trait.DeserializeDyn.html#associatedtype.Proxy\" title=\"type abi_stable::erased_types::DeserializeDyn::Proxy\">Proxy</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"type\" href=\"abi_stable/std_types/type.RBoxError.html\" title=\"type abi_stable::std_types::RBoxError\">RBoxError</a>&gt;<div class=\"where\">where\n    P: 'borr + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/erased_types/trait.DeserializeDyn.html\" title=\"trait abi_stable::erased_types::DeserializeDyn\">DeserializeDyn</a>&lt;'de, Self&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Deserializes a <code>DynTrait&lt;'borr, _&gt;</code> from a proxy type, by using\n<code>&lt;I as DeserializeDyn&lt;'borr, Self&gt;&gt;::deserialize_dyn</code>.</p>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1879-1966\">Source</a><a href=\"#impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, Item, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/erased_types/trait.IteratorItemOrDefault.html\" title=\"trait abi_stable::erased_types::IteratorItemOrDefault\">IteratorItemOrDefault</a>&lt;'borr, Item = Item&gt; + <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Iterator = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Iterator.html\" title=\"struct abi_stable::type_level::trait_marker::Iterator\">Iterator</a>&gt;&gt;,\n    Item: 'borr,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_eager\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1924-1929\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.skip_eager\" class=\"fn\">skip_eager</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Eagerly skips n elements from the iterator.</p>\n<p>This method is faster than using <code>Iterator::skip</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iter = <span class=\"number\">0</span>..<span class=\"number\">20</span>;\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>wrapped = DynTrait::from_ptr(<span class=\"kw-2\">&amp;mut </span>iter).interface(IteratorInterface::NEW);\n\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">0</span>));\n\nwrapped.skip_eager(<span class=\"number\">2</span>);\n\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">4</span>));\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n\nwrapped.skip_eager(<span class=\"number\">2</span>);\n\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">8</span>));\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n\nwrapped.skip_eager(<span class=\"number\">9</span>);\n\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">19</span>));\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">None</span>);\n\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extending_rvec\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1960-1965\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.extending_rvec\" class=\"fn\">extending_rvec</a>(\n    &amp;mut self,\n    buffer: &amp;mut <a class=\"struct\" href=\"abi_stable/std_types/struct.RVec.html\" title=\"struct abi_stable::std_types::RVec\">RVec</a>&lt;Item&gt;,\n    taking: <a class=\"enum\" href=\"abi_stable/std_types/enum.ROption.html\" title=\"enum abi_stable::std_types::ROption\">ROption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Extends the <code>RVec&lt;Item&gt;</code> with the <code>self</code> Iterator.</p>\n<p>Extends <code>buffer</code> with as many elements of the iterator as <code>taking</code> specifies:</p>\n<ul>\n<li>\n<p>RNone: Yields all elements.Use this with care, since Iterators can be infinite.</p>\n</li>\n<li>\n<p>RSome(n): Yields n elements.</p>\n</li>\n</ul>\n<h6 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>wrapped = DynTrait::from_value(<span class=\"number\">0</span>..).interface(IteratorInterface::NEW);\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buffer = <span class=\"macro\">vec!</span>[<span class=\"number\">101</span>, <span class=\"number\">102</span>, <span class=\"number\">103</span>].into_c();\nwrapped.extending_rvec(<span class=\"kw-2\">&amp;mut </span>buffer, RSome(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>buffer[..], <span class=\"kw-2\">&amp;*</span><span class=\"macro\">vec!</span>[<span class=\"number\">101</span>, <span class=\"number\">102</span>, <span class=\"number\">103</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]);\n\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">5</span>));\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">6</span>));\n<span class=\"macro\">assert_eq!</span>(wrapped.next(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1986-2051\">Source</a><a href=\"#impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, Item, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Item&gt;,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/erased_types/trait.IteratorItemOrDefault.html\" title=\"trait abi_stable::erased_types::IteratorItemOrDefault\">IteratorItemOrDefault</a>&lt;'borr, Item = Item&gt; + <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;DoubleEndedIterator = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.DoubleEndedIterator.html\" title=\"struct abi_stable::type_level::trait_marker::DoubleEndedIterator\">DoubleEndedIterator</a>&gt;&gt;,\n    Item: 'borr,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth_back_\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2012-2017\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.nth_back_\" class=\"fn\">nth_back_</a>(&amp;mut self, nth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Item&gt;</h4></section></summary><div class=\"docblock\"><p>Gets teh <code>nth</code> element from the back of the iterator.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{erased_types::interfaces::DEIteratorCloneInterface, DynTrait};\n\n<span class=\"kw\">let </span>to = || DynTrait::from_value(<span class=\"number\">7</span>..=<span class=\"number\">10</span>).interface(DEIteratorCloneInterface::NEW);\n\n<span class=\"macro\">assert_eq!</span>(to().nth_back_(<span class=\"number\">0</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">10</span>));\n<span class=\"macro\">assert_eq!</span>(to().nth_back_(<span class=\"number\">1</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">9</span>));\n<span class=\"macro\">assert_eq!</span>(to().nth_back_(<span class=\"number\">2</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">8</span>));\n<span class=\"macro\">assert_eq!</span>(to().nth_back_(<span class=\"number\">3</span>), <span class=\"prelude-val\">Some</span>(<span class=\"number\">7</span>));\n<span class=\"macro\">assert_eq!</span>(to().nth_back_(<span class=\"number\">4</span>), <span class=\"prelude-val\">None</span>);\n<span class=\"macro\">assert_eq!</span>(to().nth_back_(<span class=\"number\">5</span>), <span class=\"prelude-val\">None</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extending_rvec_back\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2045-2050\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.extending_rvec_back\" class=\"fn\">extending_rvec_back</a>(\n    &amp;mut self,\n    buffer: &amp;mut <a class=\"struct\" href=\"abi_stable/std_types/struct.RVec.html\" title=\"struct abi_stable::std_types::RVec\">RVec</a>&lt;Item&gt;,\n    taking: <a class=\"enum\" href=\"abi_stable/std_types/enum.ROption.html\" title=\"enum abi_stable::std_types::ROption\">ROption</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;,\n)</h4></section></summary><div class=\"docblock\"><p>Extends the <code>RVec&lt;Item&gt;</code> with the back of the <code>self</code> DoubleEndedIterator.</p>\n<p>Extends <code>buffer</code> with as many elements of the iterator as <code>taking</code> specifies:</p>\n<ul>\n<li>\n<p>RNone: Yields all elements.Use this with care, since Iterators can be infinite.</p>\n</li>\n<li>\n<p>RSome(n): Yields n elements.</p>\n</li>\n</ul>\n<h6 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h6>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>wrapped = DynTrait::from_value(<span class=\"number\">0</span>..=<span class=\"number\">3</span>).interface(DEIteratorInterface::NEW);\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>buffer = <span class=\"macro\">vec!</span>[<span class=\"number\">101</span>, <span class=\"number\">102</span>, <span class=\"number\">103</span>].into_c();\nwrapped.extending_rvec_back(<span class=\"kw-2\">&amp;mut </span>buffer, RNone);\n<span class=\"macro\">assert_eq!</span>(<span class=\"kw-2\">&amp;</span>buffer[..], <span class=\"kw-2\">&amp;*</span><span class=\"macro\">vec!</span>[<span class=\"number\">101</span>, <span class=\"number\">102</span>, <span class=\"number\">103</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>])\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#659-716\">Source</a><a href=\"#impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_extra_value\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#683-700\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.with_extra_value\" class=\"fn\">with_extra_value</a>&lt;OrigPtr, Downcasting&gt;(\n    ptr: OrigPtr,\n    extra_value: EV,\n) -&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DynTrait&lt;&#39;borr, P, I, EV&gt;\">ⓘ</a><div class=\"where\">where\n    OrigPtr: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a> + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html\" title=\"trait abi_stable::pointer_trait::CanTransmuteElement\">CanTransmuteElement</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, TransmutedPtr = P&gt;,\n    OrigPtr::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html#associatedtype.PtrTarget\" title=\"type abi_stable::pointer_trait::GetPointerKind::PtrTarget\">PtrTarget</a>: 'borr,\n    <a class=\"struct\" href=\"abi_stable/erased_types/struct.VTable_Ref.html\" title=\"struct abi_stable::erased_types::VTable_Ref\">VTable_Ref</a>&lt;'borr, P, I&gt;: <a class=\"trait\" href=\"abi_stable/erased_types/trait.MakeVTable.html\" title=\"trait abi_stable::erased_types::MakeVTable\">MakeVTable</a>&lt;'borr, OrigPtr::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html#associatedtype.PtrTarget\" title=\"type abi_stable::pointer_trait::GetPointerKind::PtrTarget\">PtrTarget</a>, OrigPtr, Downcasting&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Constructs an DynTrait from an erasable pointer and an extra value.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    erased_types::{interfaces::DebugDisplayInterface, TD_Opaque},\n    DynTrait, RRef,\n};\n\n<span class=\"comment\">// DebugDisplayInterface is `Debug + Display + Sync + Send`\n</span><span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RRef&lt;()&gt;, DebugDisplayInterface, usize&gt; =\n    DynTrait::with_extra_value::&lt;<span class=\"kw\">_</span>, TD_Opaque&gt;(<span class=\"kw-2\">&amp;</span><span class=\"number\">55u8</span>, <span class=\"number\">100usize</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, to), <span class=\"string\">\"55\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, to), <span class=\"string\">\"55\"</span>);\n\n<span class=\"macro\">assert_eq!</span>(to.sabi_extra_value(), <span class=\"kw-2\">&amp;</span><span class=\"number\">100</span>);\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#791-803\">Source</a><a href=\"#impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.interface\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#796-802\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.interface\" class=\"fn\">interface</a>(self, _interface: I) -&gt; Self<div class=\"where\">where\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>,</div></h4></section></summary><div class=\"docblock\"><p>For inferring the <code>I</code> type parameter.</p>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#845-1043\">Source</a><a href=\"#impl-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_extra_value\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#864-866\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.sabi_extra_value\" class=\"fn\">sabi_extra_value</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;EV</a></h4></section></summary><div class=\"docblock\"><p>Gets access to the extra value that was stored in this DynTrait in the\n<code>with_extra_value</code> constructor.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{erased_types::TD_Opaque, DynTrait, RRef};\n\n<span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RRef&lt;()&gt;, (), char&gt; =\n    DynTrait::with_extra_value::&lt;<span class=\"kw\">_</span>, TD_Opaque&gt;(<span class=\"kw-2\">&amp;</span><span class=\"number\">55u8</span>, <span class=\"string\">'Z'</span>);\n\n<span class=\"macro\">assert_eq!</span>(to.sabi_extra_value(), <span class=\"kw-2\">&amp;</span><span class=\"string\">'Z'</span>);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_object_address\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#892-897\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.sabi_object_address\" class=\"fn\">sabi_object_address</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the address of the wrapped object.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{erased_types::TD_Opaque, DynTrait, RRef};\n\n<span class=\"kw\">let </span>reff = <span class=\"kw-2\">&amp;</span><span class=\"number\">55u8</span>;\n\n<span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RRef&lt;()&gt;, ()&gt; = DynTrait::from_ptr(reff);\n\n<span class=\"macro\">assert_eq!</span>(to.sabi_object_address(), reff <span class=\"kw\">as </span><span class=\"kw-2\">*const </span><span class=\"kw\">_ as </span>usize);\n</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_erased_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#928-933\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.sabi_erased_ref\" class=\"fn\">sabi_erased_ref</a>(&amp;self) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RRef.html\" title=\"struct abi_stable::sabi_types::RRef\">RRef</a>&lt;'_, <a class=\"struct\" href=\"abi_stable/marker_type/struct.ErasedObject.html\" title=\"struct abi_stable::marker_type::ErasedObject\">ErasedObject</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,</div></h4></section></summary><div class=\"docblock\"><p>Gets a reference pointing to the erased object.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{std_types::RBox, DynTrait};\n\n<span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, ()&gt; = DynTrait::from_value(<span class=\"number\">66u8</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"macro\">assert_eq!</span>(to.sabi_erased_ref().transmute_into_ref::&lt;u8&gt;(), <span class=\"kw-2\">&amp;</span><span class=\"number\">66</span>);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_erased_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#959-964\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.sabi_erased_mut\" class=\"fn\">sabi_erased_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RMut.html\" title=\"struct abi_stable::sabi_types::RMut\">RMut</a>&lt;'_, <a class=\"struct\" href=\"abi_stable/marker_type/struct.ErasedObject.html\" title=\"struct abi_stable::marker_type::ErasedObject\">ErasedObject</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,</div></h4></section></summary><div class=\"docblock\"><p>Gets a mutable reference pointing to the erased object.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{std_types::RBox, DynTrait};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, ()&gt; = DynTrait::from_value(<span class=\"string\">\"hello\"</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"macro\">assert_eq!</span>(\n        to.sabi_erased_mut().transmute_into_mut::&lt;<span class=\"kw-2\">&amp;</span>str&gt;(),\n        <span class=\"kw-2\">&amp;mut </span><span class=\"string\">\"hello\"\n    </span>);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_as_rref\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#979-984\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.sabi_as_rref\" class=\"fn\">sabi_as_rref</a>(&amp;self) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RRef.html\" title=\"struct abi_stable::sabi_types::RRef\">RRef</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,</div></h4></section></summary><div class=\"docblock\"><p>Gets an <code>RRef</code> pointing to the erased object.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{std_types::RBox, DynTrait};\n\n<span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, ()&gt; = DynTrait::from_value(<span class=\"number\">66u8</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"macro\">assert_eq!</span>(to.sabi_as_rref().transmute_into_ref::&lt;u8&gt;(), <span class=\"kw-2\">&amp;</span><span class=\"number\">66</span>);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_as_rmut\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#999-1004\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.sabi_as_rmut\" class=\"fn\">sabi_as_rmut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RMut.html\" title=\"struct abi_stable::sabi_types::RMut\">RMut</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,</div></h4></section></summary><div class=\"docblock\"><p>Gets an <code>RMut</code> pointing to the erased object.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{std_types::RBox, DynTrait};\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, ()&gt; = DynTrait::from_value(<span class=\"string\">\"hello\"</span>);\n\n<span class=\"kw\">unsafe </span>{\n    <span class=\"macro\">assert_eq!</span>(to.sabi_as_rmut().transmute_into_mut::&lt;<span class=\"kw-2\">&amp;</span>str&gt;(), <span class=\"kw-2\">&amp;mut </span><span class=\"string\">\"hello\"</span>);\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_with_value\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1036-1042\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.sabi_with_value\" class=\"fn\">sabi_with_value</a>&lt;F, R&gt;(self, f: F) -&gt; R<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.OwnedPointer.html\" title=\"trait abi_stable::pointer_trait::OwnedPointer\">OwnedPointer</a>&lt;PtrTarget = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"struct\" href=\"abi_stable/sabi_types/struct.MovePtr.html\" title=\"struct abi_stable::sabi_types::MovePtr\">MovePtr</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;) -&gt; R,</div></h4></section></summary><div class=\"docblock\"><p>Calls the <code>f</code> callback with an <code>MovePtr</code> pointing to the erased object.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    sabi_types::MovePtr,\n    std_types::{RBox, RString, RVec},\n    DynTrait,\n};\n\n<span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, ()&gt; =\n    DynTrait::from_value(RString::from(<span class=\"string\">\"foobarbaz\"</span>));\n\n<span class=\"kw\">let </span>string = to.sabi_with_value(|x| {\n    <span class=\"comment\">// SAFETY: the erased object is an RString constructed in the current binary.\n    </span><span class=\"kw\">unsafe </span>{\n        MovePtr::into_inner(MovePtr::transmute::&lt;RString&gt;(x))\n    }\n});\n\n<span class=\"macro\">assert_eq!</span>(string, <span class=\"string\">\"foobarbaz\"</span>);</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+P,+I,+PrefixRef%3CEV%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#834-843\">Source</a><a href=\"#impl-DynTrait%3C'borr,+P,+I,+PrefixRef%3CEV%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, <a class=\"struct\" href=\"abi_stable/prefix_type/struct.PrefixRef.html\" title=\"struct abi_stable::prefix_type::PrefixRef\">PrefixRef</a>&lt;EV&gt;&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_et_vtable\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#840-842\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.sabi_et_vtable\" class=\"fn\">sabi_et_vtable</a>(&amp;self) -&gt; <a class=\"struct\" href=\"abi_stable/prefix_type/struct.PrefixRef.html\" title=\"struct abi_stable::prefix_type::PrefixRef\">PrefixRef</a>&lt;EV&gt;</h4></section></summary><div class=\"docblock\"><p>A vtable used by <code>#[sabi_trait]</code> derived trait objects.</p>\n</div></details></div></details>",0,"abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+RBox%3C()%3E,+I%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#551-583\">Source</a><a href=\"#impl-DynTrait%3C'borr,+RBox%3C()%3E,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, I&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, <a class=\"struct\" href=\"abi_stable/std_types/struct.RBox.html\" title=\"struct abi_stable::std_types::RBox\">RBox</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_borrowing_value\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#575-582\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.from_borrowing_value\" class=\"fn\">from_borrowing_value</a>&lt;T&gt;(object: T) -&gt; Self<div class=\"where\">where\n    T: 'borr,\n    <a class=\"struct\" href=\"abi_stable/erased_types/struct.VTable_Ref.html\" title=\"struct abi_stable::erased_types::VTable_Ref\">VTable_Ref</a>&lt;'borr, <a class=\"struct\" href=\"abi_stable/std_types/struct.RBox.html\" title=\"struct abi_stable::std_types::RBox\">RBox</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I&gt;: <a class=\"trait\" href=\"abi_stable/erased_types/trait.MakeVTable.html\" title=\"trait abi_stable::erased_types::MakeVTable\">MakeVTable</a>&lt;'borr, T, <a class=\"struct\" href=\"abi_stable/std_types/struct.RBox.html\" title=\"struct abi_stable::std_types::RBox\">RBox</a>&lt;T&gt;, <a class=\"struct\" href=\"abi_stable/type_level/downcasting/struct.TD_Opaque.html\" title=\"struct abi_stable::type_level::downcasting::TD_Opaque\">TD_Opaque</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Constructs the <code>DynTrait&lt;_&gt;</code> from a value with a <code>'borr</code> borrow.</p>\n<p>Cannot downcast the DynTrait afterwards.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    erased_types::interfaces::DebugDisplayInterface, std_types::RBox, DynTrait,\n};\n\n<span class=\"comment\">// DebugDisplayInterface is `Debug + Display + Sync + Send`\n</span><span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, DebugDisplayInterface&gt; =\n    DynTrait::from_borrowing_value(<span class=\"number\">3u8</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, to), <span class=\"string\">\"3\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, to), <span class=\"string\">\"3\"</span>);\n\n<span class=\"comment\">// `DynTrait`s constructed using the `from_borrowing_*` constructors\n// can't be downcasted.\n</span><span class=\"macro\">assert_eq!</span>(to.downcast_as::&lt;u8&gt;().ok(), <span class=\"prelude-val\">None</span>);\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'borr,+RRef%3C'a,+()%3E,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#718-789\">Source</a><a href=\"#impl-DynTrait%3C'borr,+RRef%3C'a,+()%3E,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, 'a, I, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RRef.html\" title=\"struct abi_stable::sabi_types::RRef\">RRef</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I, EV&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_const\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#766-788\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.from_const\" class=\"fn\">from_const</a>&lt;T, Downcasting&gt;(\n    ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;'a T</a>,\n    can_it_downcast: Downcasting,\n    extra_value: EV,\n) -&gt; Self<div class=\"where\">where\n    <a class=\"struct\" href=\"abi_stable/erased_types/struct.VTable_Ref.html\" title=\"struct abi_stable::erased_types::VTable_Ref\">VTable_Ref</a>&lt;'borr, <a class=\"struct\" href=\"abi_stable/sabi_types/struct.RRef.html\" title=\"struct abi_stable::sabi_types::RRef\">RRef</a>&lt;'a, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I&gt;: <a class=\"trait\" href=\"abi_stable/erased_types/trait.MakeVTable.html\" title=\"trait abi_stable::erased_types::MakeVTable\">MakeVTable</a>&lt;'borr, T, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;'a T</a>, Downcasting&gt;,\n    T: 'borr,</div></h4></section></summary><div class=\"docblock\"><p>This function allows constructing a DynTrait in a constant/static.</p>\n<h5 id=\"parameters\"><a class=\"doc-anchor\" href=\"#parameters\">§</a>Parameters</h5>\n<p><code>ptr</code>: a reference to the value.</p>\n<br>\n<p><code>can_it_downcast</code> can be either:</p>\n<ul>\n<li>\n<p><a href=\"./type_level/downcasting/struct.TD_CanDowncast.html\"><code>TD_CanDowncast</code></a>:\nWhich allows the trait object to be downcasted, requires that the value implements any.</p>\n</li>\n<li>\n<p><a href=\"./type_level/downcasting/struct.TD_Opaque.html\"><code>TD_Opaque</code></a>:\nWhich does not allow the trait object to be downcasted.</p>\n</li>\n</ul>\n<br>\n<p><code>extra_value</code>:\nThis is used by <a href=\"abi_stable/attr.sabi_trait.html\" title=\"attr abi_stable::sabi_trait\"><code>#[sabi_trait]</code></a>\ntrait objects to store their vtable inside DynTrait.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    erased_types::{\n        interfaces::DebugDisplayInterface, DynTrait, TD_Opaque,\n    },\n    sabi_types::RRef,\n};\n\n<span class=\"kw\">static </span>STRING: <span class=\"kw-2\">&amp;</span>str = <span class=\"string\">\"What the heck\"</span>;\n\n<span class=\"kw\">static </span>DYN: DynTrait&lt;<span class=\"lifetime\">'static</span>, RRef&lt;<span class=\"lifetime\">'static</span>, ()&gt;, DebugDisplayInterface, ()&gt; =\n    DynTrait::from_const(<span class=\"kw-2\">&amp;</span>STRING, TD_Opaque, ());\n\n<span class=\"kw\">fn </span>main() {\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, DYN), <span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, STRING));\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, DYN), <span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, STRING));\n}\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'lt,+RArc%3C()%3E,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1581-1592\">Source</a><a href=\"#impl-DynTrait%3C'lt,+RArc%3C()%3E,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'lt, I, EV: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'lt, <a class=\"struct\" href=\"abi_stable/std_types/struct.RArc.html\" title=\"struct abi_stable::std_types::RArc\">RArc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I, EV&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.shallow_clone\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1583-1591\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.shallow_clone\" class=\"fn\">shallow_clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Does a shallow clone of the object, just incrementing the reference counter</p>\n</div></details></div></details>",0,"abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'static,+P,+I%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#479-549\">Source</a><a href=\"#impl-DynTrait%3C'static,+P,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, I&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P, I&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#533-548\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.from_ptr\" class=\"fn\">from_ptr</a>&lt;OrigPtr&gt;(object: OrigPtr) -&gt; Self<div class=\"where\">where\n    OrigPtr: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a> + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.CanTransmuteElement.html\" title=\"trait abi_stable::pointer_trait::CanTransmuteElement\">CanTransmuteElement</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, TransmutedPtr = P&gt;,\n    OrigPtr::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html#associatedtype.PtrTarget\" title=\"type abi_stable::pointer_trait::GetPointerKind::PtrTarget\">PtrTarget</a>: 'static,\n    <a class=\"struct\" href=\"abi_stable/erased_types/struct.VTable_Ref.html\" title=\"struct abi_stable::erased_types::VTable_Ref\">VTable_Ref</a>&lt;'static, P, I&gt;: <a class=\"trait\" href=\"abi_stable/erased_types/trait.MakeVTable.html\" title=\"trait abi_stable::erased_types::MakeVTable\">MakeVTable</a>&lt;'static, OrigPtr::<a class=\"associatedtype\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html#associatedtype.PtrTarget\" title=\"type abi_stable::pointer_trait::GetPointerKind::PtrTarget\">PtrTarget</a>, OrigPtr, <a class=\"struct\" href=\"abi_stable/type_level/downcasting/struct.TD_CanDowncast.html\" title=\"struct abi_stable::type_level::downcasting::TD_CanDowncast\">TD_CanDowncast</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Constructs the <code>DynTrait&lt;_&gt;</code> from a pointer to a\ntype that doesn’t borrow anything.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    erased_types::interfaces::DebugDisplayInterface,\n    std_types::{RArc, RBox},\n    DynTrait, RMut, RRef,\n};\n\n<span class=\"comment\">// Constructing a DynTrait from a `&amp;T`\n</span>{\n    <span class=\"comment\">// `DynTrait`s constructed from `&amp;` are `DynTrait&lt;'_, RRef&lt;'_, ()&gt;, _&gt;`\n    // since `&amp;T` can't soundly be transmuted back and forth into `&amp;()`\n    </span><span class=\"kw\">let </span>rref: DynTrait&lt;<span class=\"lifetime\">'static</span>, RRef&lt;<span class=\"lifetime\">'_</span>, ()&gt;, DebugDisplayInterface&gt; =\n        DynTrait::from_ptr(<span class=\"kw-2\">&amp;</span><span class=\"number\">21i32</span>);\n\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, rref), <span class=\"string\">\"21\"</span>);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, rref), <span class=\"string\">\"21\"</span>);\n}\n<span class=\"comment\">// Constructing a DynTrait from a `&amp;mut T`\n</span>{\n    <span class=\"kw\">let </span>mmut = <span class=\"kw-2\">&amp;mut </span><span class=\"string\">\"hello\"</span>;\n    <span class=\"comment\">// `DynTrait`s constructed from `&amp;mut` are `DynTrait&lt;'_, RMut&lt;'_, ()&gt;, _&gt;`\n    // since `&amp;mut T` can't soundly be transmuted back and forth into `&amp;mut ()`\n    </span><span class=\"kw\">let </span>rmut: DynTrait&lt;<span class=\"lifetime\">'static</span>, RMut&lt;<span class=\"lifetime\">'_</span>, ()&gt;, DebugDisplayInterface&gt; =\n        DynTrait::from_ptr(mmut).interface(DebugDisplayInterface);\n\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, rmut), <span class=\"string\">r#\"\"hello\"\"#</span>);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, rmut), <span class=\"string\">\"hello\"</span>);\n}\n<span class=\"comment\">// Constructing a DynTrait from a `RBox&lt;T&gt;`\n</span>{\n    <span class=\"kw\">let </span>boxed: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, DebugDisplayInterface&gt; =\n        DynTrait::from_ptr(RBox::new(<span class=\"bool-val\">false</span>));\n\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, boxed), <span class=\"string\">\"false\"</span>);\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, boxed), <span class=\"string\">\"false\"</span>);\n}\n<span class=\"comment\">// Constructing a DynTrait from an `RArc&lt;T&gt;`\n</span>{\n    <span class=\"kw\">let </span>arc: DynTrait&lt;<span class=\"lifetime\">'static</span>, RArc&lt;()&gt;, DebugDisplayInterface&gt; =\n        DynTrait::from_ptr(RArc::new(<span class=\"number\">30u32</span>)).interface(DebugDisplayInterface);\n\n    <span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, arc), <span class=\"string\">\"30\"</span>);\n}\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'static,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#805-832\">Source</a><a href=\"#impl-DynTrait%3C'static,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, I, EV&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sabi_is_same_type\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#818-831\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.sabi_is_same_type\" class=\"fn\">sabi_is_same_type</a>&lt;Other, I2, EV2&gt;(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, Other, I2, EV2&gt;,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I2: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>,\n    Other: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,</div></h4></section></summary><div class=\"docblock\"><p>Allows checking whether 2 <code>DynTrait&lt;_&gt;</code>s have a value of the same type.</p>\n<p>Notes:</p>\n<ul>\n<li>\n<p>Types from different dynamic libraries/executables are\nnever considered equal.</p>\n</li>\n<li>\n<p><code>DynTrait</code>s constructed using <code>DynTrait::from_borrowing_*</code>\nare never considered to wrap the same type.</p>\n</li>\n</ul>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DynTrait%3C'static,+RBox%3C()%3E,+I%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#451-477\">Source</a><a href=\"#impl-DynTrait%3C'static,+RBox%3C()%3E,+I%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;I&gt; <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, <a class=\"struct\" href=\"abi_stable/std_types/struct.RBox.html\" title=\"struct abi_stable::std_types::RBox\">RBox</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_value\" class=\"method\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#469-476\">Source</a><h4 class=\"code-header\">pub fn <a href=\"abi_stable/struct.DynTrait.html#tymethod.from_value\" class=\"fn\">from_value</a>&lt;T&gt;(object: T) -&gt; Self<div class=\"where\">where\n    T: 'static,\n    <a class=\"struct\" href=\"abi_stable/erased_types/struct.VTable_Ref.html\" title=\"struct abi_stable::erased_types::VTable_Ref\">VTable_Ref</a>&lt;'static, <a class=\"struct\" href=\"abi_stable/std_types/struct.RBox.html\" title=\"struct abi_stable::std_types::RBox\">RBox</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;, I&gt;: <a class=\"trait\" href=\"abi_stable/erased_types/trait.MakeVTable.html\" title=\"trait abi_stable::erased_types::MakeVTable\">MakeVTable</a>&lt;'static, T, <a class=\"struct\" href=\"abi_stable/std_types/struct.RBox.html\" title=\"struct abi_stable::std_types::RBox\">RBox</a>&lt;T&gt;, <a class=\"struct\" href=\"abi_stable/type_level/downcasting/struct.TD_CanDowncast.html\" title=\"struct abi_stable::type_level::downcasting::TD_CanDowncast\">TD_CanDowncast</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Constructs the <code>DynTrait&lt;_&gt;</code> from a type that doesn’t borrow anything.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>abi_stable::{\n    erased_types::interfaces::DebugDisplayInterface, std_types::RBox, DynTrait,\n};\n\n<span class=\"comment\">// DebugDisplayInterface is `Debug + Display + Sync + Send`\n</span><span class=\"kw\">let </span>to: DynTrait&lt;<span class=\"lifetime\">'static</span>, RBox&lt;()&gt;, DebugDisplayInterface&gt; =\n    DynTrait::from_value(<span class=\"number\">3u8</span>);\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{}\"</span>, to), <span class=\"string\">\"3\"</span>);\n<span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, to), <span class=\"string\">\"3\"</span>);\n</code></pre></div>\n</div></details></div></details>",0,"abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1703-1712\">Source</a><a href=\"#impl-Error-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Display = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Display.html\" title=\"struct abi_stable::type_level::trait_marker::Display\">Display</a>&gt;, Debug = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Debug.html\" title=\"struct abi_stable::type_level::trait_marker::Debug\">Debug</a>&gt;, Error = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Error.html\" title=\"struct abi_stable::type_level::trait_marker::Error\">Error</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/error.rs.html#105\">Source</a></span><a href=\"#method.source\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/error.rs.html#131\">Source</a></span><a href=\"#method.description\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/error.rs.html#141\">Source</a></span><a href=\"#method.cause\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/error.rs.html#204\">Source</a><a href=\"#method.provide\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'a&gt;(&amp;'a self, request: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/error/struct.Request.html\" title=\"struct core::error::Request\">Request</a>&lt;'a&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href=\"https://doc.rust-lang.org/1.90.0/core/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStaticEquivalent_-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#433\">Source</a><a href=\"#impl-GetStaticEquivalent_-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a> + <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a> + <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>,\n    EV: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,\n    <a class=\"struct\" href=\"abi_stable/erased_types/struct.VTable_Ref.html\" title=\"struct abi_stable::erased_types::VTable_Ref\">VTable_Ref</a>&lt;'borr, P, I&gt;: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">StableAbi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.StaticEquivalent\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#433\">Source</a><a href=\"#associatedtype.StaticEquivalent\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" class=\"associatedtype\">StaticEquivalent</a> = _static_DynTrait&lt;'static, &lt;P as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>, &lt;I as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>, &lt;EV as <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a>&gt;::<a class=\"associatedtype\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" title=\"type abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_::StaticEquivalent\">StaticEquivalent</a>&gt;</h4></section></summary><div class='docblock'>The <code>'static</code> equivalent of <code>Self</code></div></details></div></details>","GetStaticEquivalent_","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1818-1829\">Source</a><a href=\"#impl-Hash-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Hash = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Hash.html\" title=\"struct abi_stable::type_level::trait_marker::Hash\">Hash</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1823-1828\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Iterator-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1833-1877\">Source</a><a href=\"#impl-Iterator-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, Item, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/erased_types/trait.IteratorItemOrDefault.html\" title=\"trait abi_stable::erased_types::IteratorItemOrDefault\">IteratorItemOrDefault</a>&lt;'borr, Item = Item&gt; + <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Iterator = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Iterator.html\" title=\"struct abi_stable::type_level::trait_marker::Iterator\">Iterator</a>&gt;&gt;,\n    Item: 'borr,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1840\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = Item</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1842-1847\">Source</a><a href=\"#method.next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#tymethod.next\" class=\"fn\">next</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Item&gt;</h4></section></summary><div class='docblock'>Advances the iterator and returns the next value. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#tymethod.next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nth\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1849-1854\">Source</a><a href=\"#method.nth\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.nth\" class=\"fn\">nth</a>(&amp;mut self, nth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Item&gt;</h4></section></summary><div class='docblock'>Returns the <code>n</code>th element of the iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.nth\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1856-1862\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.size_hint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1864-1869\">Source</a><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.count\" class=\"fn\">count</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Consumes the iterator, counting the number of iterations and returning it. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.count\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1871-1876\">Source</a><a href=\"#method.last\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.last\" class=\"fn\">last</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Item&gt;</h4></section></summary><div class='docblock'>Consumes the iterator, returning the last element. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.last\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_chunk\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#109-113\">Source</a><a href=\"#method.next_chunk\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.next_chunk\" class=\"fn\">next_chunk</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;[Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">N</a>], <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/array/iter/struct.IntoIter.html\" title=\"struct core::array::iter::IntoIter\">IntoIter</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, N&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_next_chunk</code>)</span></div></span><div class='docblock'>Advances the iterator and returns an array containing the next <code>N</code> values. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.next_chunk\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#296\">Source</a><a href=\"#method.advance_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.advance_by\" class=\"fn\">advance_by</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_advance_by</code>)</span></div></span><div class='docblock'>Advances the iterator by <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.advance_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.step_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#423-425\">Source</a></span><a href=\"#method.step_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.step_by\" class=\"fn\">step_by</a>(self, step: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/step_by/struct.StepBy.html\" title=\"struct core::iter::adapters::step_by::StepBy\">StepBy</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.step_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#494-497\">Source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.chain\" class=\"fn\">chain</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/chain/struct.Chain.html\" title=\"struct core::iter::adapters::chain::Chain\">Chain</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Takes two iterators and creates a new iterator over both in sequence. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#612-615\">Source</a></span><a href=\"#method.zip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.zip\" class=\"fn\">zip</a>&lt;U&gt;(self, other: U) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/zip/struct.Zip.html\" title=\"struct core::iter::adapters::zip::Zip\">Zip</a>&lt;Self, &lt;U as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class='docblock'>‘Zips up’ two iterators into a single iterator of pairs. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.zip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersperse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#655-658\">Source</a><a href=\"#method.intersperse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse\" class=\"fn\">intersperse</a>(self, separator: Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/intersperse/struct.Intersperse.html\" title=\"struct core::iter::adapters::intersperse::Intersperse\">Intersperse</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>)</span></div></span><div class='docblock'>Creates a new iterator which places a copy of <code>separator</code> between adjacent\nitems of the original iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersperse_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#713-716\">Source</a><a href=\"#method.intersperse_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with\" class=\"fn\">intersperse_with</a>&lt;G&gt;(self, separator: G) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/intersperse/struct.IntersperseWith.html\" title=\"struct core::iter::adapters::intersperse::IntersperseWith\">IntersperseWith</a>&lt;Self, G&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    G: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>() -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_intersperse</code>)</span></div></span><div class='docblock'>Creates a new iterator which places an item generated by <code>separator</code>\nbetween adjacent items of the original iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.intersperse_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#772-775\">Source</a></span><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.map\" class=\"fn\">map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/map/struct.Map.html\" title=\"struct core::iter::adapters::map::Map\">Map</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Takes a closure and creates an iterator which calls that closure on each\nelement. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#817-820\">Source</a></span><a href=\"#method.for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.for_each\" class=\"fn\">for_each</a>&lt;F&gt;(self, f: F)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>),</div></h4></section></summary><div class='docblock'>Calls a closure on each element of an iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#892-895\">Source</a></span><a href=\"#method.filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.filter\" class=\"fn\">filter</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/filter/struct.Filter.html\" title=\"struct core::iter::adapters::filter::Filter\">Filter</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which uses a closure to determine if an element\nshould be yielded. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.filter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#937-940\">Source</a></span><a href=\"#method.filter_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.filter_map\" class=\"fn\">filter_map</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/filter_map/struct.FilterMap.html\" title=\"struct core::iter::adapters::filter_map::FilterMap\">FilterMap</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator that both filters and maps. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.filter_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enumerate\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#984-986\">Source</a></span><a href=\"#method.enumerate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.enumerate\" class=\"fn\">enumerate</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/enumerate/struct.Enumerate.html\" title=\"struct core::iter::adapters::enumerate::Enumerate\">Enumerate</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which gives the current iteration count as well as\nthe next value. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.enumerate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.peekable\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1055-1057\">Source</a></span><a href=\"#method.peekable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.peekable\" class=\"fn\">peekable</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/peekable/struct.Peekable.html\" title=\"struct core::iter::adapters::peekable::Peekable\">Peekable</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which can use the <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/peekable/struct.Peekable.html#method.peek\" title=\"method core::iter::adapters::peekable::Peekable::peek\"><code>peek</code></a> and <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/peekable/struct.Peekable.html#method.peek_mut\" title=\"method core::iter::adapters::peekable::Peekable::peek_mut\"><code>peek_mut</code></a> methods\nto look at the next element of the iterator without consuming it. See\ntheir documentation for more information. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.peekable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1120-1123\">Source</a></span><a href=\"#method.skip_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.skip_while\" class=\"fn\">skip_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/skip_while/struct.SkipWhile.html\" title=\"struct core::iter::adapters::skip_while::SkipWhile\">SkipWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.skip\" title=\"method core::iter::traits::iterator::Iterator::skip\"><code>skip</code></a>s elements based on a predicate. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.skip_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1198-1201\">Source</a></span><a href=\"#method.take_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.take_while\" class=\"fn\">take_while</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/take_while/struct.TakeWhile.html\" title=\"struct core::iter::adapters::take_while::TakeWhile\">TakeWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that yields elements based on a predicate. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.take_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_while\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.57.0\">1.57.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1286-1289\">Source</a></span><a href=\"#method.map_while\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.map_while\" class=\"fn\">map_while</a>&lt;B, P&gt;(self, predicate: P) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/map_while/struct.MapWhile.html\" title=\"struct core::iter::adapters::map_while::MapWhile\">MapWhile</a>&lt;Self, P&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator that both yields elements based on a predicate and maps. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.map_while\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1315-1317\">Source</a></span><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.skip\" class=\"fn\">skip</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/skip/struct.Skip.html\" title=\"struct core::iter::adapters::skip::Skip\">Skip</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that skips the first <code>n</code> elements. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1387-1389\">Source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.take\" class=\"fn\">take</a>(self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/take/struct.Take.html\" title=\"struct core::iter::adapters::take::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that yields the first <code>n</code> elements, or fewer\nif the underlying iterator ends sooner. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.take\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.scan\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1434-1437\">Source</a></span><a href=\"#method.scan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.scan\" class=\"fn\">scan</a>&lt;St, B, F&gt;(self, initial_state: St, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/scan/struct.Scan.html\" title=\"struct core::iter::adapters::scan::Scan\">Scan</a>&lt;Self, St, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut St</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>An iterator adapter which, like <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.fold\" title=\"method core::iter::traits::iterator::Iterator::fold\"><code>fold</code></a>, holds internal state, but\nunlike <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.fold\" title=\"method core::iter::traits::iterator::Iterator::fold\"><code>fold</code></a>, produces a new iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.scan\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1472-1476\">Source</a></span><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/flatten/struct.FlatMap.html\" title=\"struct core::iter::adapters::flatten::FlatMap\">FlatMap</a>&lt;Self, U, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; U,</div></h4></section></summary><div class='docblock'>Creates an iterator that works like map, but flattens nested structure. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.29.0\">1.29.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1556-1559\">Source</a></span><a href=\"#method.flatten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.flatten\" class=\"fn\">flatten</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/flatten/struct.Flatten.html\" title=\"struct core::iter::adapters::flatten::Flatten\">Flatten</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator that flattens nested structure. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.flatten\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_windows\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1712-1715\">Source</a><a href=\"#method.map_windows\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.map_windows\" class=\"fn\">map_windows</a>&lt;F, R, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/map_windows/struct.MapWindows.html\" title=\"struct core::iter::adapters::map_windows::MapWindows\">MapWindows</a>&lt;Self, F, N&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;[Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">N</a>]) -&gt; R,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_map_windows</code>)</span></div></span><div class='docblock'>Calls the given function <code>f</code> for each contiguous window of size <code>N</code> over\n<code>self</code> and returns an iterator over the outputs of <code>f</code>. Like <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.slice.html#method.windows\" title=\"method slice::windows\"><code>slice::windows()</code></a>,\nthe windows during mapping overlap as well. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.map_windows\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fuse\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1774-1776\">Source</a></span><a href=\"#method.fuse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.fuse\" class=\"fn\">fuse</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/fuse/struct.Fuse.html\" title=\"struct core::iter::adapters::fuse::Fuse\">Fuse</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator which ends after the first <a href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.fuse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inspect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1858-1861\">Source</a></span><a href=\"#method.inspect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.inspect\" class=\"fn\">inspect</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/inspect/struct.Inspect.html\" title=\"struct core::iter::adapters::inspect::Inspect\">Inspect</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>),</div></h4></section></summary><div class='docblock'>Does something with each element of an iterator, passing the value on. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.inspect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#1895-1897\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adapter for this instance of <code>Iterator</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2014-2016\">Source</a></span><a href=\"#method.collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.collect\" class=\"fn\">collect</a>&lt;B&gt;(self) -&gt; B<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms an iterator into a collection. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_collect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2101-2105\">Source</a><a href=\"#method.try_collect\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_collect\" class=\"fn\">try_collect</a>&lt;B&gt;(\n    &amp;mut self,\n) -&gt; &lt;&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;B&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>,\n    &lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;B&gt;,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html#associatedtype.Output\" title=\"type core::ops::try_trait::Try::Output\">Output</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iterator_try_collect</code>)</span></div></span><div class='docblock'>Fallibly transforms an iterator into a collection, short circuiting if\na failure is encountered. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_collect\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2173-2175\">Source</a><a href=\"#method.collect_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.collect_into\" class=\"fn\">collect_into</a>&lt;E&gt;(self, collection: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut E</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut E</a><div class=\"where\">where\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_collect_into</code>)</span></div></span><div class='docblock'>Collects all the items from an iterator into a collection. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.collect_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2205-2209\">Source</a></span><a href=\"#method.partition\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.partition\" class=\"fn\">partition</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(B, B)</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Consumes an iterator, creating two collections from it. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.partition\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partition_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2267-2270\">Source</a><a href=\"#method.partition_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.partition_in_place\" class=\"fn\">partition_in_place</a>&lt;'a, T, P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    T: 'a,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;'a mut T</a>&gt;,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_partition_in_place</code>)</span></div></span><div class='docblock'>Reorders the elements of this iterator <em>in-place</em> according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>.\nReturns the number of <code>true</code> elements found. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.partition_in_place\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_partitioned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2324-2327\">Source</a><a href=\"#method.is_partitioned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned\" class=\"fn\">is_partitioned</a>&lt;P&gt;(self, predicate: P) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_is_partitioned</code>)</span></div></span><div class='docblock'>Checks if the elements of this iterator are partitioned according to the given predicate,\nsuch that all those that return <code>true</code> precede all those that return <code>false</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.is_partitioned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2418-2422\">Source</a></span><a href=\"#method.try_fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\" class=\"fn\">try_fold</a>&lt;B, F, R&gt;(&amp;mut self, init: B, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = B&gt;,</div></h4></section></summary><div class='docblock'>An iterator method that applies a function as long as it returns\nsuccessfully, producing a single, final value. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_for_each\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.27.0\">1.27.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2476-2480\">Source</a></span><a href=\"#method.try_for_each\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each\" class=\"fn\">try_for_each</a>&lt;F, R&gt;(&amp;mut self, f: F) -&gt; R<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;,</div></h4></section></summary><div class='docblock'>An iterator method that applies a fallible function to each item in the\niterator, stopping at the first error and returning that error. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_for_each\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2595-2598\">Source</a></span><a href=\"#method.fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.fold\" class=\"fn\">fold</a>&lt;B, F&gt;(self, init: B, f: F) -&gt; B<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(B, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Folds every element into an accumulator by applying an operation,\nreturning the final result. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.fold\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reduce\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2632-2635\">Source</a></span><a href=\"#method.reduce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.reduce\" class=\"fn\">reduce</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>,</div></h4></section></summary><div class='docblock'>Reduces the elements to a single one, by repeatedly applying a reducing\noperation. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_reduce\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2703-2709\">Source</a><a href=\"#method.try_reduce\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_reduce\" class=\"fn\">try_reduce</a>&lt;R&gt;(\n    &amp;mut self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html#associatedtype.Output\" title=\"type core::ops::try_trait::Try::Output\">Output</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iterator_try_reduce</code>)</span></div></span><div class='docblock'>Reduces the elements to a single one by repeatedly applying a reducing operation. If the\nclosure returns a failure, the failure is propagated back to the caller immediately. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_reduce\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2761-2764\">Source</a></span><a href=\"#method.all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.all\" class=\"fn\">all</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Tests if every element of the iterator matches a predicate. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.any\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2814-2817\">Source</a></span><a href=\"#method.any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.any\" class=\"fn\">any</a>&lt;F&gt;(&amp;mut self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Tests if any element of the iterator matches a predicate. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.any\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2876-2879\">Source</a></span><a href=\"#method.find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.find\" class=\"fn\">find</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element of an iterator that satisfies a predicate. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.find\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_map\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2907-2910\">Source</a></span><a href=\"#method.find_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.find_map\" class=\"fn\">find_map</a>&lt;B, F&gt;(&amp;mut self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;B&gt;,</div></h4></section></summary><div class='docblock'>Applies function to the elements of iterator and returns\nthe first non-none result. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.find_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_find\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#2965-2971\">Source</a><a href=\"#method.try_find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_find\" class=\"fn\">try_find</a>&lt;R&gt;(\n    &amp;mut self,\n    f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; R,\n) -&gt; &lt;&lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Residual.html#associatedtype.TryType\" title=\"type core::ops::try_trait::Residual::TryType\">TryType</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt;,\n    &lt;R as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html\" title=\"trait core::ops::try_trait::Try\">Try</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Try.html#associatedtype.Residual\" title=\"type core::ops::try_trait::Try::Residual\">Residual</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/try_trait/trait.Residual.html\" title=\"trait core::ops::try_trait::Residual\">Residual</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>try_find</code>)</span></div></span><div class='docblock'>Applies function to the elements of iterator and returns\nthe first true result or the first error. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.try_find\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.position\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3048-3051\">Source</a></span><a href=\"#method.position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.position\" class=\"fn\">position</a>&lt;P&gt;(&amp;mut self, predicate: P) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Searches for an element in an iterator, returning its index. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.position\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3162-3165\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.max\" class=\"fn\">max</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the maximum element of an iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3198-3201\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.min\" class=\"fn\">min</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,</div></h4></section></summary><div class='docblock'>Returns the minimum element of an iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3220-3223\">Source</a></span><a href=\"#method.max_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key\" class=\"fn\">max_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value from the\nspecified function. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3253-3256\">Source</a></span><a href=\"#method.max_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by\" class=\"fn\">max_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Returns the element that gives the maximum value with respect to the\nspecified comparison function. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.max_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.6.0\">1.6.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3280-3283\">Source</a></span><a href=\"#method.min_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key\" class=\"fn\">min_by_key</a>&lt;B, F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value from the\nspecified function. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by_key\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.15.0\">1.15.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3313-3316\">Source</a></span><a href=\"#method.min_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by\" class=\"fn\">min_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><div class='docblock'>Returns the element that gives the minimum value with respect to the\nspecified comparison function. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.min_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rev\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3350-3352\">Source</a></span><a href=\"#method.rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.rev\" class=\"fn\">rev</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/rev/struct.Rev.html\" title=\"struct core::iter::adapters::rev::Rev\">Rev</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/double_ended/trait.DoubleEndedIterator.html\" title=\"trait core::iter::traits::double_ended::DoubleEndedIterator\">DoubleEndedIterator</a>,</div></h4></section></summary><div class='docblock'>Reverses an iterator’s direction. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.rev\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unzip\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3386-3390\">Source</a></span><a href=\"#method.unzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip\" class=\"fn\">unzip</a>&lt;A, B, FromA, FromB&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(FromA, FromB)</a><div class=\"where\">where\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(A, B)</a>&gt;,</div></h4></section></summary><div class='docblock'>Converts an iterator of pairs into a pair of containers. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.unzip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copied\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3417-3420\">Source</a></span><a href=\"#method.copied\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.copied\" class=\"fn\">copied</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/copied/struct.Copied.html\" title=\"struct core::iter::adapters::copied::Copied\">Copied</a>&lt;Self&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'a,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator which copies all of its elements. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.copied\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cloned\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3465-3468\">Source</a></span><a href=\"#method.cloned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.cloned\" class=\"fn\">cloned</a>&lt;'a, T&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/cloned/struct.Cloned.html\" title=\"struct core::iter::adapters::cloned::Cloned\">Cloned</a>&lt;Self&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'a,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;'a T</a>&gt;,</div></h4></section></summary><div class='docblock'>Creates an iterator which <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" title=\"method core::clone::Clone::clone\"><code>clone</code></a>s all of its elements. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.cloned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cycle\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3496-3498\">Source</a></span><a href=\"#method.cycle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.cycle\" class=\"fn\">cycle</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/cycle/struct.Cycle.html\" title=\"struct core::iter::adapters::cycle::Cycle\">Cycle</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class='docblock'>Repeats an iterator endlessly. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.cycle\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.array_chunks\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3539-3541\">Source</a><a href=\"#method.array_chunks\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.array_chunks\" class=\"fn\">array_chunks</a>&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/adapters/array_chunks/struct.ArrayChunks.html\" title=\"struct core::iter::adapters::array_chunks::ArrayChunks\">ArrayChunks</a>&lt;Self, N&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_array_chunks</code>)</span></div></span><div class='docblock'>Returns an iterator over <code>N</code> elements of the iterator at a time. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.array_chunks\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3575-3578\">Source</a></span><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.sum\" class=\"fn\">sum</a>&lt;S&gt;(self) -&gt; S<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Sums the elements of an iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.sum\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.11.0\">1.11.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3607-3610\">Source</a></span><a href=\"#method.product\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.product\" class=\"fn\">product</a>&lt;P&gt;(self) -&gt; P<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,</div></h4></section></summary><div class='docblock'>Iterates over the entire iterator, multiplying all the elements <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.product\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3628-3632\">Source</a></span><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp\" class=\"fn\">cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3655-3659\">Source</a><a href=\"#method.cmp_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by\" class=\"fn\">cmp_by</a>&lt;I, F&gt;(self, other: I, cmp: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'><a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3711-3715\">Source</a></span><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp\" class=\"fn\">partial_cmp</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'><a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\"><code>PartialOrd</code></a> elements of\nthis <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those of another. The comparison works like short-circuit\nevaluation, returning a result without comparing the remaining elements.\nAs soon as an order can be determined, the evaluation stops and a result is returned. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3747-3751\">Source</a><a href=\"#method.partial_cmp_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by\" class=\"fn\">partial_cmp_by</a>&lt;I, F&gt;(self, other: I, partial_cmp: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'><a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">Lexicographically</a> compares the elements of this <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> with those\nof another with respect to the specified comparison function. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.partial_cmp_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3780-3784\">Source</a></span><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.eq\" class=\"fn\">eq</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are equal to those of\nanother. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3803-3807\">Source</a><a href=\"#method.eq_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.eq_by\" class=\"fn\">eq_by</a>&lt;I, F&gt;(self, other: I, eq: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>iter_order_by</code>)</span></div></span><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are equal to those of\nanother with respect to the specified equality function. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.eq_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3835-3839\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.ne\" class=\"fn\">ne</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are not equal to those of\nanother. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.ne\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3856-3860\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.lt\" class=\"fn\">lt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\nless than those of another. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3877-3881\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.le\" class=\"fn\">le</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\nless or equal to those of another. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3898-3902\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.gt\" class=\"fn\">gt</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\ngreater than those of another. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0\">1.5.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3919-3923\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.ge\" class=\"fn\">ge</a>&lt;I&gt;(self, other: I) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Determines if the elements of this <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> are <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#lexicographical-comparison\" title=\"trait core::cmp::Ord\">lexicographically</a>\ngreater than or equal to those of another. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.ge\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3948-3951\">Source</a></span><a href=\"#method.is_sorted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted\" class=\"fn\">is_sorted</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted_by\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#3974-3977\">Source</a></span><a href=\"#method.is_sorted_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by\" class=\"fn\">is_sorted_by</a>&lt;F&gt;(self, compare: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>, &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted using the given comparator function. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sorted_by_key\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.82.0\">1.82.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/iter/traits/iterator.rs.html#4018-4022\">Source</a></span><a href=\"#method.is_sorted_by_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key\" class=\"fn\">is_sorted_by_key</a>&lt;F, K&gt;(self, f: F) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a>) -&gt; K,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Checks if the elements of this iterator are sorted using the given key extraction\nfunction. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html#method.is_sorted_by_key\">Read more</a></div></details></div></details>","Iterator","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-DynTrait%3C'static,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1781-1795\">Source</a><a href=\"#impl-Ord-for-DynTrait%3C'static,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Ord = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Ord.html\" title=\"struct abi_stable::type_level::trait_marker::Ord\">Ord</a>&gt;&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1787-1794\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CDynTrait%3C'static,+P2,+I,+EV2%3E%3E-for-DynTrait%3C'static,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1765-1779\">Source</a><a href=\"#impl-PartialEq%3CDynTrait%3C'static,+P2,+I,+EV2%3E%3E-for-DynTrait%3C'static,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, P2, I, EV, EV2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P2, I, EV2&gt;&gt; for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    P2: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;PartialEq = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.PartialEq.html\" title=\"struct abi_stable::type_level::trait_marker::PartialEq\">PartialEq</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1771-1778\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P2, I, EV2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<DynTrait<'static, P2, I, EV2>>","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CDynTrait%3C'static,+P2,+I,+EV2%3E%3E-for-DynTrait%3C'static,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1797-1816\">Source</a><a href=\"#impl-PartialOrd%3CDynTrait%3C'static,+P2,+I,+EV2%3E%3E-for-DynTrait%3C'static,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, P2, I, EV, EV2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P2, I, EV2&gt;&gt; for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    P2: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;PartialOrd = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.PartialOrd.html\" title=\"struct abi_stable::type_level::trait_marker::PartialOrd\">PartialOrd</a>&gt;&gt;,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P2, I, EV2&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1804-1815\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P2, I, EV2&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<DynTrait<'static, P2, I, EV2>>","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2111-2131\">Source</a><a href=\"#impl-Read-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;IoRead = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.IoRead.html\" title=\"struct abi_stable::type_level::trait_marker::IoRead\">IoRead</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2116-2122\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2124-2130\">Source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Reads the exact number of bytes required to fill <code>buf</code>. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_vectored\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#825\">Source</a></span><a href=\"#method.read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_vectored\" class=\"fn\">read_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/struct.IoSliceMut.html\" title=\"struct std::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <code>read</code>, except that it reads into a slice of buffers. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_read_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#838\">Source</a><a href=\"#method.is_read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.is_read_vectored\" class=\"fn\">is_read_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Read</code>er has an efficient <code>read_vectored</code>\nimplementation. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.is_read_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_end\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#935\">Source</a></span><a href=\"#method.read_to_end\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_to_end\" class=\"fn\">read_to_end</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, placing them into <code>buf</code>. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_to_end\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_to_string\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#991\">Source</a></span><a href=\"#method.read_to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_to_string\" class=\"fn\">read_to_string</a>(&amp;mut self, buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads all bytes until EOF in this source, appending them to <code>buf</code>. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_to_string\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1057\">Source</a><a href=\"#method.read_buf\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_buf\" class=\"fn\">read_buf</a>(&amp;mut self, buf: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/io/borrowed_buf/struct.BorrowedCursor.html\" title=\"struct core::io::borrowed_buf::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Pull some bytes from this source into the specified buffer. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_buf\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_buf_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1080\">Source</a><a href=\"#method.read_buf_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_buf_exact\" class=\"fn\">read_buf_exact</a>(&amp;mut self, cursor: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/io/borrowed_buf/struct.BorrowedCursor.html\" title=\"struct core::io::borrowed_buf::BorrowedCursor\">BorrowedCursor</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>read_buf</code>)</span></div></span><div class='docblock'>Reads the exact number of bytes required to fill <code>cursor</code>. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.read_buf_exact\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1119-1121\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adaptor for this instance of <code>Read</code>. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bytes\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1162-1164\">Source</a></span><a href=\"#method.bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.bytes\" class=\"fn\">bytes</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/struct.Bytes.html\" title=\"struct std::io::Bytes\">Bytes</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Transforms this <code>Read</code> instance to an <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\"><code>Iterator</code></a> over its bytes. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chain\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1200-1202\">Source</a></span><a href=\"#method.chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.chain\" class=\"fn\">chain</a>&lt;R&gt;(self, next: R) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/struct.Chain.html\" title=\"struct std::io::Chain\">Chain</a>&lt;Self, R&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will chain this stream with another. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1239-1241\">Source</a></span><a href=\"#method.take\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.take\" class=\"fn\">take</a>(self, limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/struct.Take.html\" title=\"struct std::io::Take\">Take</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an adapter which will read at most <code>limit</code> bytes from it. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Read.html#method.take\">Read more</a></div></details></div></details>","Read","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Seek-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2162-2174\">Source</a><a href=\"#impl-Seek-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html\" title=\"trait std::io::Seek\">Seek</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;IoSeek = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.IoSeek.html\" title=\"struct abi_stable::type_level::trait_marker::IoSeek\">IoSeek</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2167-2173\">Source</a><a href=\"#method.seek\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html#tymethod.seek\" class=\"fn\">seek</a>(&amp;mut self, pos: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/std/io/enum.SeekFrom.html\" title=\"enum std::io::SeekFrom\">SeekFrom</a>) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Seek to an offset, in bytes, in a stream. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html#tymethod.seek\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rewind\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.55.0\">1.55.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#2064\">Source</a></span><a href=\"#method.rewind\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html#method.rewind\" class=\"fn\">rewind</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Rewind to the beginning of a stream. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html#method.rewind\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stream_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#2104\">Source</a><a href=\"#method.stream_len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html#method.stream_len\" class=\"fn\">stream_len</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>seek_stream_len</code>)</span></div></span><div class='docblock'>Returns the length of this stream (in bytes). <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html#method.stream_len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.stream_position\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.51.0\">1.51.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#2132\">Source</a></span><a href=\"#method.stream_position\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html#method.stream_position\" class=\"fn\">stream_position</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns the current seek position from the start of the stream. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html#method.stream_position\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.seek_relative\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.80.0\">1.80.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#2160\">Source</a></span><a href=\"#method.seek_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html#method.seek_relative\" class=\"fn\">seek_relative</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Seeks relative to the current position. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Seek.html#method.seek_relative\">Read more</a></div></details></div></details>","Seek","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1717-1735\">Source</a><a href=\"#impl-Serialize-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Serialize = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Serialize.html\" title=\"struct abi_stable::type_level::trait_marker::Serialize\">Serialize</a>&gt;&gt; + GetSerializeProxyType&lt;'borr&gt;,\n    I::ProxyType: <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,</div></h3><div class=\"docblock\"><p>For an example of how to serialize DynTrait,\n<a href=\"abi_stable/erased_types/trait.SerializeType.html#example\" title=\"trait abi_stable::erased_types::SerializeType\">look here</a></p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1724-1734\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StableAbi-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#433\">Source</a><a href=\"#impl-StableAbi-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">StableAbi</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a> + <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a> + <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>,\n    EV: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">__StableAbi</a>,\n    <a class=\"struct\" href=\"abi_stable/erased_types/struct.VTable_Ref.html\" title=\"struct abi_stable::erased_types::VTable_Ref\">VTable_Ref</a>&lt;'borr, P, I&gt;: <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">StableAbi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LAYOUT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#433\">Source</a><a href=\"#associatedconstant.LAYOUT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/trait.StableAbi.html#associatedconstant.LAYOUT\" class=\"constant\">LAYOUT</a>: &amp;'static <a class=\"struct\" href=\"abi_stable/type_layout/struct.TypeLayout.html\" title=\"struct abi_stable::type_layout::TypeLayout\">TypeLayout</a></h4></section></summary><div class='docblock'>The layout of the type provided by implementors.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IsNonZeroType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#433\">Source</a><a href=\"#associatedtype.IsNonZeroType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/trait.StableAbi.html#associatedtype.IsNonZeroType\" class=\"associatedtype\">IsNonZeroType</a> = <a class=\"struct\" href=\"abi_stable/reexports/struct.False.html\" title=\"struct abi_stable::reexports::False\">False</a></h4></section></summary><div class='docblock'>Whether this type has a single invalid bit-pattern. <a href=\"abi_stable/trait.StableAbi.html#associatedtype.IsNonZeroType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ABI_CONSTS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#76-79\">Source</a><a href=\"#associatedconstant.ABI_CONSTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/trait.StableAbi.html#associatedconstant.ABI_CONSTS\" class=\"constant\">ABI_CONSTS</a>: <a class=\"struct\" href=\"abi_stable/abi_stability/stable_abi_trait/struct.AbiConsts.html\" title=\"struct abi_stable::abi_stability::stable_abi_trait::AbiConsts\">AbiConsts</a> = _</h4></section></summary><div class='docblock'><code>const</code>-equivalents of the associated types.</div></details></div></details>","StableAbi","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2055-2070\">Source</a><a href=\"#impl-Write-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;FmtWrite = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.FmtWrite.html\" title=\"struct abi_stable::type_level::trait_marker::FmtWrite\">FmtWrite</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2060-2069\">Source</a><a href=\"#method.write_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Write.html#tymethod.write_str\" class=\"fn\">write_str</a>(&amp;mut self, s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a string slice into this writer, returning whether the write\nsucceeded. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Write.html#tymethod.write_str\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_char\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/mod.rs.html#180\">Source</a></span><a href=\"#method.write_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Write.html#method.write_char\" class=\"fn\">write_char</a>(&amp;mut self, c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\" title=\"primitive char\"><code>char</code></a> into this writer, returning whether the write succeeded. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Write.html#method.write_char\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/mod.rs.html#209\">Source</a></span><a href=\"#method.write_fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, args: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Glue for usage of the <a href=\"https://doc.rust-lang.org/1.90.0/core/macro.write.html\" title=\"macro core::write\"><code>write!</code></a> macro with implementors of this trait. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Write.html#method.write_fmt\">Read more</a></div></details></div></details>","Write","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2087-2107\">Source</a><a href=\"#impl-Write-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsMutPtr.html\" title=\"trait abi_stable::pointer_trait::AsMutPtr\">AsMutPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;IoWrite = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.IoWrite.html\" title=\"struct abi_stable::type_level::trait_marker::IoWrite\">IoWrite</a>&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2092-2096\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Writes a buffer into this writer, returning how many bytes were written. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2097-2101\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Flushes this output stream, ensuring that all intermediately buffered\ncontents reach their destination. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#tymethod.flush\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2102-2106\">Source</a><a href=\"#method.write_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Attempts to write an entire buffer into this writer. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.write_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_vectored\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.36.0\">1.36.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1758\">Source</a></span><a href=\"#method.write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.write_vectored\" class=\"fn\">write_vectored</a>(&amp;mut self, bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#tymethod.write\" title=\"method std::io::Write::write\"><code>write</code></a>, except that it writes from a slice of buffers. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_write_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1773\">Source</a><a href=\"#method.is_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.is_write_vectored\" class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>can_vector</code>)</span></div></span><div class='docblock'>Determines if this <code>Write</code>r has an efficient <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.write_vectored\" title=\"method std::io::Write::write_vectored\"><code>write_vectored</code></a>\nimplementation. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.is_write_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all_vectored\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1897\">Source</a><a href=\"#method.write_all_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.write_all_vectored\" class=\"fn\">write_all_vectored</a>(&amp;mut self, bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>write_all_vectored</code>)</span></div></span><div class='docblock'>Attempts to write multiple buffers into this writer. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.write_all_vectored\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1950\">Source</a></span><a href=\"#method.write_fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, args: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a formatted string into this writer, returning any error\nencountered. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.write_fmt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/std/io/mod.rs.html#1980-1982\">Source</a></span><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates a “by reference” adapter for this instance of <code>Write</code>. <a href=\"https://doc.rust-lang.org/1.90.0/std/io/trait.Write.html#method.by_ref\">Read more</a></div></details></div></details>","Write","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<section id=\"impl-Eq-for-DynTrait%3C'static,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#1757-1763\">Source</a><a href=\"#impl-Eq-for-DynTrait%3C'static,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'static, P, I, EV&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.AsPtr.html\" title=\"trait abi_stable::pointer_trait::AsPtr\">AsPtr</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Eq = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Eq.html\" title=\"struct abi_stable::type_level::trait_marker::Eq\">Eq</a>&gt;&gt;,</div></h3></section>","Eq","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<section id=\"impl-Send-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2178-2183\">Source</a><a href=\"#impl-Send-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Send = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Send.html\" title=\"struct abi_stable::type_level::trait_marker::Send\">Send</a>&gt;&gt;,</div></h3></section>","Send","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<section id=\"impl-Sync-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2185-2190\">Source</a><a href=\"#impl-Sync-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Sync = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Sync.html\" title=\"struct abi_stable::type_level::trait_marker::Sync\">Sync</a>&gt;&gt;,</div></h3></section>","Sync","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"],["<section id=\"impl-Unpin-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/erased_types/dyn_trait.rs.html#2192-2198\">Source</a><a href=\"#impl-Unpin-for-DynTrait%3C'borr,+P,+I,+EV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'borr, P, I, EV&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"abi_stable/struct.DynTrait.html\" title=\"struct abi_stable::DynTrait\">DynTrait</a>&lt;'borr, P, I, EV&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"abi_stable/pointer_trait/trait.GetPointerKind.html\" title=\"trait abi_stable::pointer_trait::GetPointerKind\">GetPointerKind</a>,\n    I: <a class=\"trait\" href=\"abi_stable/trait.InterfaceType.html\" title=\"trait abi_stable::InterfaceType\">InterfaceType</a>&lt;Unpin = <a class=\"struct\" href=\"abi_stable/type_level/impl_enum/struct.Implemented.html\" title=\"struct abi_stable::type_level::impl_enum::Implemented\">Implemented</a>&lt;<a class=\"struct\" href=\"abi_stable/type_level/trait_marker/struct.Unpin.html\" title=\"struct abi_stable::type_level::trait_marker::Unpin\">Unpin</a>&gt;&gt;,</div></h3></section>","Unpin","abi_stable::std_types::map::Iter","abi_stable::std_types::map::IterMut","abi_stable::std_types::map::Drain","abi_stable::sabi_trait::doc_examples::ConstExample_trait::ConstExample_Backend"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[356541]}