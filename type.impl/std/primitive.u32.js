(function() {
    var type_impls = Object.fromEntries([["abi_stable",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#616-619\">Source</a></span><a href=\"#impl-Debug-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/fmt/num.rs.html#616-619\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","abi_stable::type_layout::small_types::StartLenRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChar%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ascii/ascii_char.rs.html#560\">Source</a><a href=\"#impl-From%3CChar%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/ascii/ascii_char.rs.html#560\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(chr: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/ascii/ascii_char/enum.AsciiChar.html\" title=\"enum core::ascii::ascii_char::AsciiChar\">AsciiChar</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AsciiChar>","abi_stable::type_layout::small_types::StartLenRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIpv4Addr%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0, const unstable\">1.1.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/net/ip_addr.rs.html#1226\">Source</a></span><a href=\"#impl-From%3CIpv4Addr%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/net/ip_addr/struct.Ipv4Addr.html\" title=\"struct core::net::ip_addr::Ipv4Addr\">Ipv4Addr</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/net/ip_addr.rs.html#1229\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(ip: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/net/ip_addr/struct.Ipv4Addr.html\" title=\"struct core::net::ip_addr::Ipv4Addr\">Ipv4Addr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Uses <a href=\"https://doc.rust-lang.org/1.90.0/core/net/ip_addr/struct.Ipv4Addr.html#method.to_bits\" title=\"method core::net::ip_addr::Ipv4Addr::to_bits\"><code>Ipv4Addr::to_bits</code></a> to convert an IPv4 address to a host byte order <code>u32</code>.</p>\n</div></details></div></details>","From<Ipv4Addr>","abi_stable::type_layout::small_types::StartLenRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cbool%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0, const unstable\">1.28.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#88\">Source</a></span><a href=\"#impl-From%3Cbool%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#88\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\" title=\"primitive bool\"><code>bool</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a> losslessly.\nThe resulting value is <code>0</code> for <code>false</code> and <code>1</code> for <code>true</code> values.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(u32::from(<span class=\"bool-val\">true</span>), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(u32::from(<span class=\"bool-val\">false</span>), <span class=\"number\">0</span>);</code></pre></div>\n</div></details></div></details>","From<bool>","abi_stable::type_layout::small_types::StartLenRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cchar%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.13.0, const unstable\">1.13.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/char/convert.rs.html#40\">Source</a></span><a href=\"#impl-From%3Cchar%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\">char</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/char/convert.rs.html#51\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\">char</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.char.html\" title=\"primitive char\"><code>char</code></a> into a <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>c = <span class=\"string\">'c'</span>;\n<span class=\"kw\">let </span>u = u32::from(c);\n<span class=\"macro\">assert!</span>(<span class=\"number\">4 </span>== size_of_val(<span class=\"kw-2\">&amp;</span>u))</code></pre></div>\n</div></details></div></details>","From<char>","abi_stable::type_layout::small_types::StartLenRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0, const unstable\">1.5.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#105\">Source</a></span><a href=\"#impl-From%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#105\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\" title=\"primitive u16\"><code>u16</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a> losslessly.</p>\n</div></details></div></details>","From<u16>","abi_stable::type_layout::small_types::StartLenRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu8%3E-for-u32\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.5.0, const unstable\">1.5.0 (const: <a href=\"https://github.com/rust-lang/rust/issues/74935\" title=\"Tracking issue for const_try\">unstable</a>)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#101\">Source</a></span><a href=\"#impl-From%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.90.0/src/core/convert/num.rs.html#101\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Converts <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\" title=\"primitive u8\"><code>u8</code></a> to <a href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\" title=\"primitive u32\"><code>u32</code></a> losslessly.</p>\n</div></details></div></details>","From<u8>","abi_stable::type_layout::small_types::StartLenRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStaticEquivalent_-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#961-975\">Source</a><a href=\"#impl-GetStaticEquivalent_-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html\" title=\"trait abi_stable::abi_stability::get_static_equivalent::GetStaticEquivalent_\">GetStaticEquivalent_</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.StaticEquivalent\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#961-975\">Source</a><a href=\"#associatedtype.StaticEquivalent\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/abi_stability/get_static_equivalent/trait.GetStaticEquivalent_.html#associatedtype.StaticEquivalent\" class=\"associatedtype\">StaticEquivalent</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The <code>'static</code> equivalent of <code>Self</code></div></details></div></details>","GetStaticEquivalent_","abi_stable::type_layout::small_types::StartLenRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StableAbi-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#961-975\">Source</a><a href=\"#impl-StableAbi-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"abi_stable/trait.StableAbi.html\" title=\"trait abi_stable::StableAbi\">StableAbi</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.LAYOUT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#961-975\">Source</a><a href=\"#associatedconstant.LAYOUT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/trait.StableAbi.html#associatedconstant.LAYOUT\" class=\"constant\">LAYOUT</a>: &amp;'static <a class=\"struct\" href=\"abi_stable/type_layout/struct.TypeLayout.html\" title=\"struct abi_stable::type_layout::TypeLayout\">TypeLayout</a></h4></section></summary><div class='docblock'>The layout of the type provided by implementors.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IsNonZeroType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#961-975\">Source</a><a href=\"#associatedtype.IsNonZeroType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"abi_stable/trait.StableAbi.html#associatedtype.IsNonZeroType\" class=\"associatedtype\">IsNonZeroType</a> = <a class=\"struct\" href=\"abi_stable/reexports/struct.False.html\" title=\"struct abi_stable::reexports::False\">False</a></h4></section></summary><div class='docblock'>Whether this type has a single invalid bit-pattern. <a href=\"abi_stable/trait.StableAbi.html#associatedtype.IsNonZeroType\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ABI_CONSTS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/abi_stable/abi_stability/stable_abi_trait.rs.html#76-79\">Source</a><a href=\"#associatedconstant.ABI_CONSTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"abi_stable/trait.StableAbi.html#associatedconstant.ABI_CONSTS\" class=\"constant\">ABI_CONSTS</a>: <a class=\"struct\" href=\"abi_stable/abi_stability/stable_abi_trait/struct.AbiConsts.html\" title=\"struct abi_stable::abi_stability::stable_abi_trait::AbiConsts\">AbiConsts</a> = _</h4></section></summary><div class='docblock'><code>const</code>-equivalents of the associated types.</div></details></div></details>","StableAbi","abi_stable::type_layout::small_types::StartLenRepr"],["<section id=\"impl-ValidDiscriminant-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/abi_stable/nonexhaustive_enum/traits.rs.html#172\">Source</a><a href=\"#impl-ValidDiscriminant-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"abi_stable/nonexhaustive_enum/trait.ValidDiscriminant.html\" title=\"trait abi_stable::nonexhaustive_enum::ValidDiscriminant\">ValidDiscriminant</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section>","ValidDiscriminant","abi_stable::type_layout::small_types::StartLenRepr"]]],["alsa_sys",[]],["cpal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3CI24%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3CI24%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"struct\" href=\"cpal/struct.I24.html\" title=\"struct cpal::I24\">I24</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"struct\" href=\"cpal/struct.I24.html\" title=\"struct cpal::I24\">I24</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<I24>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3CI48%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3CI48%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"struct\" href=\"cpal/struct.I48.html\" title=\"struct cpal::I48\">I48</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"struct\" href=\"cpal/struct.I48.html\" title=\"struct cpal::I48\">I48</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<I48>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3CU24%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3CU24%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"struct\" href=\"cpal/struct.U24.html\" title=\"struct cpal::U24\">U24</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"struct\" href=\"cpal/struct.U24.html\" title=\"struct cpal::U24\">U24</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<U24>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3CU48%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3CU48%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"struct\" href=\"cpal/struct.U48.html\" title=\"struct cpal::U48\">U48</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"struct\" href=\"cpal/struct.U48.html\" title=\"struct cpal::U48\">U48</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<U48>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3Cf32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3Cf32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<f32>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3Cf64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3Cf64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<f64>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3Ci16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3Ci16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<i16>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3Ci32%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3Ci32%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<i32>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3Ci64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3Ci64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<i64>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3Ci8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3Ci8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<i8>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3Cu16%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3Cu16%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<u16>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3Cu64%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3Cu64%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<u64>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromSample%3Cu8%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#impl-FromSample%3Cu8%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_sample_\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/conv.rs.html#649-653\">Source</a><a href=\"#method.from_sample_\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.FromSample.html#tymethod.from_sample_\" class=\"fn\">from_sample_</a>(s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section></div></details>","FromSample<u8>","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sample-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#261-276\">Source</a><a href=\"#impl-Sample-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.Sample.html\" title=\"trait cpal::Sample\">Sample</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.EQUILIBRIUM\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#261-276\">Source</a><a href=\"#associatedconstant.EQUILIBRIUM\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"cpal/trait.Sample.html#associatedconstant.EQUILIBRIUM\" class=\"constant\">EQUILIBRIUM</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a> = 2_147_483_648u32</h4></section></summary><div class='docblock'>The equilibrium value for the wave that this <code>Sample</code> type represents. This is normally the\nvalue that is equal distance from both the min and max ranges of the sample. <a href=\"cpal/trait.Sample.html#associatedconstant.EQUILIBRIUM\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Signed\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#261-276\">Source</a><a href=\"#associatedtype.Signed\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"cpal/trait.Sample.html#associatedtype.Signed\" class=\"associatedtype\">Signed</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class='docblock'>When summing two samples of a signal together, it is necessary for both samples to be\nrepresented in some signed format. This associated <code>Addition</code> type represents the format to\nwhich <code>Self</code> should be converted for optimal <code>Addition</code> performance. <a href=\"cpal/trait.Sample.html#associatedtype.Signed\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Float\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#261-276\">Source</a><a href=\"#associatedtype.Float\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"cpal/trait.Sample.html#associatedtype.Float\" class=\"associatedtype\">Float</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>When multiplying two samples of a signal together, it is necessary for both samples to be\nrepresented in some signed, floating-point format. This associated <code>Multiplication</code> type\nrepresents the format to which <code>Self</code> should be converted for optimal <code>Multiplication</code>\nperformance. <a href=\"cpal/trait.Sample.html#associatedtype.Float\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.IDENTITY\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#107\">Source</a><a href=\"#associatedconstant.IDENTITY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"cpal/trait.Sample.html#associatedconstant.IDENTITY\" class=\"constant\">IDENTITY</a>: Self::<a class=\"associatedtype\" href=\"cpal/trait.Sample.html#associatedtype.Float\" title=\"type cpal::Sample::Float\">Float</a> = &lt;Self::Float as FloatSample&gt;::IDENTITY</h4></section></summary><div class='docblock'>The multiplicative identity of the signal. <a href=\"cpal/trait.Sample.html#associatedconstant.IDENTITY\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_sample\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#125-127\">Source</a><a href=\"#method.to_sample\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.Sample.html#method.to_sample\" class=\"fn\">to_sample</a>&lt;S&gt;(self) -&gt; S<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"dasp_sample/conv/trait.ToSample.html\" title=\"trait dasp_sample::conv::ToSample\">ToSample</a>&lt;S&gt;,</div></h4></section></summary><div class='docblock'>Convert <code>self</code> to any type that implements <code>FromSample&lt;Self&gt;</code>. <a href=\"cpal/trait.Sample.html#method.to_sample\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_sample\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#149-151\">Source</a><a href=\"#method.from_sample\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.Sample.html#method.from_sample\" class=\"fn\">from_sample</a>&lt;S&gt;(s: S) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"cpal/trait.FromSample.html\" title=\"trait cpal::FromSample\">FromSample</a>&lt;S&gt;,</div></h4></section></summary><div class='docblock'>Create a <code>Self</code> from any type that implements <code>ToSample&lt;Self&gt;</code>. <a href=\"cpal/trait.Sample.html#method.from_sample\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_signed_sample\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#170\">Source</a><a href=\"#method.to_signed_sample\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.Sample.html#method.to_signed_sample\" class=\"fn\">to_signed_sample</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"cpal/trait.Sample.html#associatedtype.Signed\" title=\"type cpal::Sample::Signed\">Signed</a></h4></section></summary><div class='docblock'>Converts <code>self</code> to the equivalent <code>Sample</code> in the associated <code>Signed</code> format. <a href=\"cpal/trait.Sample.html#method.to_signed_sample\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_float_sample\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#188\">Source</a><a href=\"#method.to_float_sample\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.Sample.html#method.to_float_sample\" class=\"fn\">to_float_sample</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"cpal/trait.Sample.html#associatedtype.Float\" title=\"type cpal::Sample::Float\">Float</a></h4></section></summary><div class='docblock'>Converts <code>self</code> to the equivalent <code>Sample</code> in the associated <code>Float</code> format. <a href=\"cpal/trait.Sample.html#method.to_float_sample\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_amp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#209\">Source</a><a href=\"#method.add_amp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.Sample.html#method.add_amp\" class=\"fn\">add_amp</a>(self, amp: Self::<a class=\"associatedtype\" href=\"cpal/trait.Sample.html#associatedtype.Signed\" title=\"type cpal::Sample::Signed\">Signed</a>) -&gt; Self</h4></section></summary><div class='docblock'>Adds (or “offsets”) the amplitude of the <code>Sample</code> by the given signed amplitude. <a href=\"cpal/trait.Sample.html#method.add_amp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_amp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dasp_sample/lib.rs.html#237\">Source</a><a href=\"#method.mul_amp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"cpal/trait.Sample.html#method.mul_amp\" class=\"fn\">mul_amp</a>(self, amp: Self::<a class=\"associatedtype\" href=\"cpal/trait.Sample.html#associatedtype.Float\" title=\"type cpal::Sample::Float\">Float</a>) -&gt; Self</h4></section></summary><div class='docblock'>Multiplies (or “scales”) the amplitude of the <code>Sample</code> by the given float amplitude. <a href=\"cpal/trait.Sample.html#method.mul_amp\">Read more</a></div></details></div></details>","Sample","cpal::FrameCount"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SizedSample-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/cpal/samples_formats.rs.html#151-153\">Source</a><a href=\"#impl-SizedSample-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cpal/trait.SizedSample.html\" title=\"trait cpal::SizedSample\">SizedSample</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.FORMAT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/cpal/samples_formats.rs.html#152\">Source</a><a href=\"#associatedconstant.FORMAT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"cpal/trait.SizedSample.html#associatedconstant.FORMAT\" class=\"constant\">FORMAT</a>: <a class=\"enum\" href=\"cpal/enum.SampleFormat.html\" title=\"enum cpal::SampleFormat\">SampleFormat</a> = SampleFormat::U32</h4></section></div></details>","SizedSample","cpal::FrameCount"]]],["glutin_egl_sys",[]],["glutin_glx_sys",[]],["owned_ttf_parser",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromData-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#75\">Source</a><a href=\"#impl-FromData-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"owned_ttf_parser/trait.FromData.html\" title=\"trait owned_ttf_parser::FromData\">FromData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#76\">Source</a><a href=\"#associatedconstant.SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"owned_ttf_parser/trait.FromData.html#associatedconstant.SIZE\" class=\"constant\">SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = 4usize</h4></section></summary><div class='docblock'>Object’s raw data size. <a href=\"owned_ttf_parser/trait.FromData.html#associatedconstant.SIZE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#79\">Source</a><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"owned_ttf_parser/trait.FromData.html#tymethod.parse\" class=\"fn\">parse</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Parses an object from a raw data.</div></details></div></details>","FromData","owned_ttf_parser::opentype_layout::VariationIndex"]]],["petgraph",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BoundedMeasure-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/algo/mod.rs.html#771\">Source</a><a href=\"#impl-BoundedMeasure-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"petgraph/algo/trait.BoundedMeasure.html\" title=\"trait petgraph::algo::BoundedMeasure\">BoundedMeasure</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/algo/mod.rs.html#771\">Source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/algo/trait.BoundedMeasure.html#tymethod.min\" class=\"fn\">min</a>() -&gt; Self</h4></section><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/algo/mod.rs.html#771\">Source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/algo/trait.BoundedMeasure.html#tymethod.max\" class=\"fn\">max</a>() -&gt; Self</h4></section><section id=\"method.overflowing_add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/algo/mod.rs.html#771\">Source</a><a href=\"#method.overflowing_add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/algo/trait.BoundedMeasure.html#tymethod.overflowing_add\" class=\"fn\">overflowing_add</a>(self, rhs: Self) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></div></details>","BoundedMeasure","petgraph::graph_impl::DefaultIx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexType-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/graph_impl/mod.rs.html#57-70\">Source</a><a href=\"#impl-IndexType-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"petgraph/graph/trait.IndexType.html\" title=\"trait petgraph::graph::IndexType\">IndexType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/graph_impl/mod.rs.html#59-61\">Source</a><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/graph/trait.IndexType.html#tymethod.new\" class=\"fn\">new</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/graph_impl/mod.rs.html#63-65\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/graph/trait.IndexType.html#tymethod.index\" class=\"fn\">index</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/graph_impl/mod.rs.html#67-69\">Source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/graph/trait.IndexType.html#tymethod.max\" class=\"fn\">max</a>() -&gt; Self</h4></section></div></details>","IndexType","petgraph::graph_impl::DefaultIx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PositiveMeasure-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/algo/mod.rs.html#865\">Source</a><a href=\"#impl-PositiveMeasure-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"petgraph/algo/trait.PositiveMeasure.html\" title=\"trait petgraph::algo::PositiveMeasure\">PositiveMeasure</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/algo/mod.rs.html#865\">Source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/algo/trait.PositiveMeasure.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/algo/mod.rs.html#865\">Source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/algo/trait.PositiveMeasure.html#tymethod.max\" class=\"fn\">max</a>() -&gt; Self</h4></section></div></details>","PositiveMeasure","petgraph::graph_impl::DefaultIx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#178\">Source</a><a href=\"#impl-Zero-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"petgraph/matrix_graph/trait.Zero.html\" title=\"trait petgraph::matrix_graph::Zero\">Zero</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#178\">Source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/matrix_graph/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section></summary><div class='docblock'>Return the singleton object which can be used as a sentinel value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/petgraph/matrix_graph.rs.html#178\">Source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"petgraph/matrix_graph/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if <code>self</code> is equal to the sentinel value.</div></details></div></details>","Zero","petgraph::graph_impl::DefaultIx"]]],["rustix",[["<section id=\"impl-Integer-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustix/path/dec_int.rs.html#145\">Source</a><a href=\"#impl-Integer-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"rustix/path/trait.Integer.html\" title=\"trait rustix::path::Integer\">Integer</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section>","Integer","rustix::ffi::c_uint","rustix::net::addr::SocketAddrLen","rustix::net::types::RawSocketType"]]],["serde",[]],["serde_core",[]],["tokio",[]],["ttf_parser",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromData-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#75-82\">Source</a><a href=\"#impl-FromData-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"ttf_parser/trait.FromData.html\" title=\"trait ttf_parser::FromData\">FromData</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#76\">Source</a><a href=\"#associatedconstant.SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"ttf_parser/trait.FromData.html#associatedconstant.SIZE\" class=\"constant\">SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a> = 4usize</h4></section></summary><div class='docblock'>Object’s raw data size. <a href=\"ttf_parser/trait.FromData.html#associatedconstant.SIZE\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/ttf_parser/parser.rs.html#79-81\">Source</a><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"ttf_parser/trait.FromData.html#tymethod.parse\" class=\"fn\">parse</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Parses an object from a raw data.</div></details></div></details>","FromData","ttf_parser::ggg::layout_table::VariationIndex"]]],["widestring",[]],["winit",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pixel-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/dpi/lib.rs.html#97\">Source</a><a href=\"#impl-Pixel-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"winit/dpi/trait.Pixel.html\" title=\"trait winit::dpi::Pixel\">Pixel</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dpi/lib.rs.html#98\">Source</a><a href=\"#method.from_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/dpi/trait.Pixel.html#tymethod.from_f64\" class=\"fn\">from_f64</a>(f: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h4></section><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dpi/lib.rs.html#82\">Source</a><a href=\"#method.cast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"winit/dpi/trait.Pixel.html#method.cast\" class=\"fn\">cast</a>&lt;P&gt;(self) -&gt; P<div class=\"where\">where\n    P: <a class=\"trait\" href=\"winit/dpi/trait.Pixel.html\" title=\"trait winit::dpi::Pixel\">Pixel</a>,</div></h4></section></div></details>","Pixel","winit::event::AxisId","winit::event::ButtonId","winit::platform::x11::XVisualID","winit::platform::x11::XWindow"]]],["x11_dl",[]],["x11rb",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#381\">Source</a><a href=\"#impl-Serialize-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#381\">Source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>The value returned by <code>serialize</code>. <a href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#381\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>(&amp;self) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a> as <a class=\"trait\" href=\"x11rb/x11_utils/trait.Serialize.html\" title=\"trait x11rb::x11_utils::Serialize\">Serialize</a>&gt;::<a class=\"associatedtype\" href=\"x11rb/x11_utils/trait.Serialize.html#associatedtype.Bytes\" title=\"type x11rb::x11_utils::Serialize::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#381\">Source</a><a href=\"#method.serialize_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize_into\" class=\"fn\">serialize_into</a>(&amp;self, bytes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes, appending the result into <code>bytes</code>. <a href=\"x11rb/x11_utils/trait.Serialize.html#tymethod.serialize_into\">Read more</a></div></details></div></details>","Serialize","x11rb::protocol::xproto::Window","x11rb::protocol::xproto::Pixmap","x11rb::protocol::xproto::Cursor","x11rb::protocol::xproto::Font","x11rb::protocol::xproto::Gcontext","x11rb::protocol::xproto::Colormap","x11rb::protocol::xproto::Atom","x11rb::protocol::xproto::Drawable","x11rb::protocol::xproto::Fontable","x11rb::protocol::xproto::Bool32","x11rb::protocol::xproto::Visualid","x11rb::protocol::xproto::Timestamp","x11rb::protocol::xproto::Keysym","x11rb::protocol::xproto::Keycode32","x11rb::protocol::randr::Mode","x11rb::protocol::randr::Crtc","x11rb::protocol::randr::Output","x11rb::protocol::randr::Provider","x11rb::protocol::randr::Lease","x11rb::protocol::render::Glyph","x11rb::protocol::render::Glyphset","x11rb::protocol::render::Picture","x11rb::protocol::render::Pictformat","x11rb::protocol::xfixes::Region","x11rb::protocol::xfixes::Barrier","x11rb::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryParse-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#372\">Source</a><a href=\"#impl-TryParse-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"x11rb/x11_utils/trait.TryParse.html\" title=\"trait x11rb::x11_utils::TryParse\">TryParse</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#372\">Source</a><a href=\"#method.try_parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb/x11_utils/trait.TryParse.html#tymethod.try_parse\" class=\"fn\">try_parse</a>(value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a>, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), <a class=\"enum\" href=\"x11rb/xcb_ffi/enum.ParseError.html\" title=\"enum x11rb::xcb_ffi::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Try to parse the given values into an instance of this type. <a href=\"x11rb/x11_utils/trait.TryParse.html#tymethod.try_parse\">Read more</a></div></details></div></details>","TryParse","x11rb::protocol::xproto::Window","x11rb::protocol::xproto::Pixmap","x11rb::protocol::xproto::Cursor","x11rb::protocol::xproto::Font","x11rb::protocol::xproto::Gcontext","x11rb::protocol::xproto::Colormap","x11rb::protocol::xproto::Atom","x11rb::protocol::xproto::Drawable","x11rb::protocol::xproto::Fontable","x11rb::protocol::xproto::Bool32","x11rb::protocol::xproto::Visualid","x11rb::protocol::xproto::Timestamp","x11rb::protocol::xproto::Keysym","x11rb::protocol::xproto::Keycode32","x11rb::protocol::randr::Mode","x11rb::protocol::randr::Crtc","x11rb::protocol::randr::Output","x11rb::protocol::randr::Provider","x11rb::protocol::randr::Lease","x11rb::protocol::render::Glyph","x11rb::protocol::render::Glyphset","x11rb::protocol::render::Picture","x11rb::protocol::render::Pictformat","x11rb::protocol::xfixes::Region","x11rb::protocol::xfixes::Barrier","x11rb::protocol::xinput::EventClass"]]],["x11rb_protocol",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CBarrierDirections%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3330\">Source</a><a href=\"#impl-BitAnd%3CBarrierDirections%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3330\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3330\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<BarrierDirections>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CBarrierFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18886\">Source</a><a href=\"#impl-BitAnd%3CBarrierFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18886\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18886\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<BarrierFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CBoolCtrl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#560\">Source</a><a href=\"#impl-BitAnd%3CBoolCtrl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#560\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#560\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<BoolCtrl>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CCP%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#478\">Source</a><a href=\"#impl-BitAnd%3CCP%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#478\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#478\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<CP>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CCW%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6706\">Source</a><a href=\"#impl-BitAnd%3CCW%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6706\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6706\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<CW>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CChangeFeedbackControlMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5554\">Source</a><a href=\"#impl-BitAnd%3CChangeFeedbackControlMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5554\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5554\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ChangeFeedbackControlMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CClientDisconnectFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3567\">Source</a><a href=\"#impl-BitAnd%3CClientDisconnectFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3567\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3567\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ClientDisconnectFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CControl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#614\">Source</a><a href=\"#impl-BitAnd%3CControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#614\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<Control>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CCursorNotifyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#879\">Source</a><a href=\"#impl-BitAnd%3CCursorNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#879\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#879\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<CursorNotifyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#573\">Source</a><a href=\"#impl-BitAnd%3CEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#573\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#573\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<EventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CGC%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16183\">Source</a><a href=\"#impl-BitAnd%3CGC%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16183\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16183\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<GC>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CGesturePinchEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19108\">Source</a><a href=\"#impl-BitAnd%3CGesturePinchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19108\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19108\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<GesturePinchEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CGestureSwipeEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19394\">Source</a><a href=\"#impl-BitAnd%3CGestureSwipeEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19394\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19394\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<GestureSwipeEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CHierarchyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17875\">Source</a><a href=\"#impl-BitAnd%3CHierarchyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17875\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17875\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<HierarchyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CKB%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23677\">Source</a><a href=\"#impl-BitAnd%3CKB%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23677\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23677\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<KB>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CKeyEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17223\">Source</a><a href=\"#impl-BitAnd%3CKeyEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17223\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17223\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<KeyEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CModeFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1210\">Source</a><a href=\"#impl-BitAnd%3CModeFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1210\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1210\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ModeFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CModifierMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#14027\">Source</a><a href=\"#impl-BitAnd%3CModifierMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#14027\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#14027\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ModifierMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CNameDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2112\">Source</a><a href=\"#impl-BitAnd%3CNameDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2112\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2112\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<NameDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CPerClientFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2292\">Source</a><a href=\"#impl-BitAnd%3CPerClientFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2292\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2292\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<PerClientFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CPointerEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17407\">Source</a><a href=\"#impl-BitAnd%3CPointerEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17407\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17407\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<PointerEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CProviderCapability%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4937\">Source</a><a href=\"#impl-BitAnd%3CProviderCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4937\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4937\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ProviderCapability>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CScrollFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11923\">Source</a><a href=\"#impl-BitAnd%3CScrollFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11923\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11923\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<ScrollFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CSelectionEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#556\">Source</a><a href=\"#impl-BitAnd%3CSelectionEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#556\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#556\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<SelectionEventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CTouchEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18417\">Source</a><a href=\"#impl-BitAnd%3CTouchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18417\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18417\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<TouchEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CXIEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11472\">Source</a><a href=\"#impl-BitAnd%3CXIEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11472\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11472\">Source</a><a href=\"#method.bitand\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#associatedtype.Output\" title=\"type core::ops::bit::BitAnd::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>&amp;</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAnd.html#tymethod.bitand\">Read more</a></div></details></div></details>","BitAnd<XIEventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CBarrierDirections%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3330\">Source</a><a href=\"#impl-BitAndAssign%3CBarrierDirections%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3330\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<BarrierDirections>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CBarrierFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18886\">Source</a><a href=\"#impl-BitAndAssign%3CBarrierFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18886\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<BarrierFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CBoolCtrl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#560\">Source</a><a href=\"#impl-BitAndAssign%3CBoolCtrl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#560\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<BoolCtrl>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CCP%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#478\">Source</a><a href=\"#impl-BitAndAssign%3CCP%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#478\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<CP>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CCW%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6706\">Source</a><a href=\"#impl-BitAndAssign%3CCW%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6706\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<CW>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CChangeFeedbackControlMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5554\">Source</a><a href=\"#impl-BitAndAssign%3CChangeFeedbackControlMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5554\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ChangeFeedbackControlMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CClientDisconnectFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3567\">Source</a><a href=\"#impl-BitAndAssign%3CClientDisconnectFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3567\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ClientDisconnectFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CControl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#614\">Source</a><a href=\"#impl-BitAndAssign%3CControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#614\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<Control>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CCursorNotifyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#879\">Source</a><a href=\"#impl-BitAndAssign%3CCursorNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#879\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<CursorNotifyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#573\">Source</a><a href=\"#impl-BitAndAssign%3CEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#573\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<EventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CGC%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16183\">Source</a><a href=\"#impl-BitAndAssign%3CGC%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16183\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<GC>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CGesturePinchEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19108\">Source</a><a href=\"#impl-BitAndAssign%3CGesturePinchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19108\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<GesturePinchEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CGestureSwipeEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19394\">Source</a><a href=\"#impl-BitAndAssign%3CGestureSwipeEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19394\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<GestureSwipeEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CHierarchyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17875\">Source</a><a href=\"#impl-BitAndAssign%3CHierarchyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17875\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<HierarchyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CKB%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23677\">Source</a><a href=\"#impl-BitAndAssign%3CKB%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23677\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<KB>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CKeyEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17223\">Source</a><a href=\"#impl-BitAndAssign%3CKeyEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17223\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<KeyEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CModeFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1210\">Source</a><a href=\"#impl-BitAndAssign%3CModeFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1210\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ModeFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CModifierMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#14027\">Source</a><a href=\"#impl-BitAndAssign%3CModifierMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#14027\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ModifierMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CNameDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2112\">Source</a><a href=\"#impl-BitAndAssign%3CNameDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2112\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<NameDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CPerClientFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2292\">Source</a><a href=\"#impl-BitAndAssign%3CPerClientFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2292\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<PerClientFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CPointerEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17407\">Source</a><a href=\"#impl-BitAndAssign%3CPointerEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17407\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<PointerEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CProviderCapability%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4937\">Source</a><a href=\"#impl-BitAndAssign%3CProviderCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4937\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ProviderCapability>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CScrollFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11923\">Source</a><a href=\"#impl-BitAndAssign%3CScrollFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11923\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<ScrollFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CSelectionEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#556\">Source</a><a href=\"#impl-BitAndAssign%3CSelectionEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#556\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<SelectionEventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CTouchEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18417\">Source</a><a href=\"#impl-BitAndAssign%3CTouchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18417\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<TouchEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CXIEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11472\">Source</a><a href=\"#impl-BitAndAssign%3CXIEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11472\">Source</a><a href=\"#method.bitand_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>&amp;=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitAndAssign.html#tymethod.bitand_assign\">Read more</a></div></details></div></details>","BitAndAssign<XIEventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CBarrierDirections%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3330\">Source</a><a href=\"#impl-BitOr%3CBarrierDirections%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3330\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3330\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<BarrierDirections>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CBarrierFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18886\">Source</a><a href=\"#impl-BitOr%3CBarrierFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18886\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18886\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<BarrierFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CBoolCtrl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#560\">Source</a><a href=\"#impl-BitOr%3CBoolCtrl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#560\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#560\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<BoolCtrl>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CCP%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#478\">Source</a><a href=\"#impl-BitOr%3CCP%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#478\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#478\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<CP>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CCW%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6706\">Source</a><a href=\"#impl-BitOr%3CCW%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6706\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6706\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<CW>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CChangeFeedbackControlMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5554\">Source</a><a href=\"#impl-BitOr%3CChangeFeedbackControlMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5554\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5554\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ChangeFeedbackControlMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CClientDisconnectFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3567\">Source</a><a href=\"#impl-BitOr%3CClientDisconnectFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3567\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3567\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ClientDisconnectFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CControl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#614\">Source</a><a href=\"#impl-BitOr%3CControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#614\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#614\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<Control>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CCursorNotifyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#879\">Source</a><a href=\"#impl-BitOr%3CCursorNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#879\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#879\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<CursorNotifyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#573\">Source</a><a href=\"#impl-BitOr%3CEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#573\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#573\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<EventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CGC%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16183\">Source</a><a href=\"#impl-BitOr%3CGC%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16183\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16183\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<GC>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CGesturePinchEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19108\">Source</a><a href=\"#impl-BitOr%3CGesturePinchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19108\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19108\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<GesturePinchEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CGestureSwipeEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19394\">Source</a><a href=\"#impl-BitOr%3CGestureSwipeEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19394\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19394\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<GestureSwipeEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CHierarchyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17875\">Source</a><a href=\"#impl-BitOr%3CHierarchyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17875\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17875\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<HierarchyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CKB%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23677\">Source</a><a href=\"#impl-BitOr%3CKB%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23677\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23677\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<KB>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CKeyEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17223\">Source</a><a href=\"#impl-BitOr%3CKeyEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17223\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17223\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<KeyEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CModeFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1210\">Source</a><a href=\"#impl-BitOr%3CModeFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1210\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1210\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ModeFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CModifierMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#14027\">Source</a><a href=\"#impl-BitOr%3CModifierMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#14027\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#14027\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ModifierMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CNameDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2112\">Source</a><a href=\"#impl-BitOr%3CNameDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2112\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2112\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<NameDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CPerClientFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2292\">Source</a><a href=\"#impl-BitOr%3CPerClientFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2292\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2292\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<PerClientFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CPointerEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17407\">Source</a><a href=\"#impl-BitOr%3CPointerEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17407\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17407\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<PointerEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CProviderCapability%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4937\">Source</a><a href=\"#impl-BitOr%3CProviderCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4937\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4937\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ProviderCapability>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CScrollFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11923\">Source</a><a href=\"#impl-BitOr%3CScrollFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11923\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11923\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<ScrollFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CSelectionEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#556\">Source</a><a href=\"#impl-BitOr%3CSelectionEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#556\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#556\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<SelectionEventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CTouchEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18417\">Source</a><a href=\"#impl-BitOr%3CTouchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18417\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18417\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<TouchEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CXIEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11472\">Source</a><a href=\"#impl-BitOr%3CXIEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11472\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11472\">Source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a>) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#associatedtype.Output\" title=\"type core::ops::bit::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<XIEventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CBarrierDirections%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3330\">Source</a><a href=\"#impl-BitOrAssign%3CBarrierDirections%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3330\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<BarrierDirections>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CBarrierFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18886\">Source</a><a href=\"#impl-BitOrAssign%3CBarrierFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18886\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<BarrierFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CBoolCtrl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#560\">Source</a><a href=\"#impl-BitOrAssign%3CBoolCtrl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#560\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<BoolCtrl>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CCP%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#478\">Source</a><a href=\"#impl-BitOrAssign%3CCP%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#478\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<CP>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CCW%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6706\">Source</a><a href=\"#impl-BitOrAssign%3CCW%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6706\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<CW>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CChangeFeedbackControlMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5554\">Source</a><a href=\"#impl-BitOrAssign%3CChangeFeedbackControlMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5554\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ChangeFeedbackControlMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CClientDisconnectFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3567\">Source</a><a href=\"#impl-BitOrAssign%3CClientDisconnectFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3567\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ClientDisconnectFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CControl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#614\">Source</a><a href=\"#impl-BitOrAssign%3CControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#614\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<Control>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CCursorNotifyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#879\">Source</a><a href=\"#impl-BitOrAssign%3CCursorNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#879\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<CursorNotifyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#573\">Source</a><a href=\"#impl-BitOrAssign%3CEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#573\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<EventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CGC%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16183\">Source</a><a href=\"#impl-BitOrAssign%3CGC%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16183\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<GC>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CGesturePinchEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19108\">Source</a><a href=\"#impl-BitOrAssign%3CGesturePinchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19108\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<GesturePinchEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CGestureSwipeEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19394\">Source</a><a href=\"#impl-BitOrAssign%3CGestureSwipeEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19394\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<GestureSwipeEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CHierarchyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17875\">Source</a><a href=\"#impl-BitOrAssign%3CHierarchyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17875\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<HierarchyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CKB%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23677\">Source</a><a href=\"#impl-BitOrAssign%3CKB%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23677\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<KB>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CKeyEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17223\">Source</a><a href=\"#impl-BitOrAssign%3CKeyEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17223\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<KeyEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CModeFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1210\">Source</a><a href=\"#impl-BitOrAssign%3CModeFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1210\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ModeFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CModifierMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#14027\">Source</a><a href=\"#impl-BitOrAssign%3CModifierMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#14027\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ModifierMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CNameDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2112\">Source</a><a href=\"#impl-BitOrAssign%3CNameDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2112\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<NameDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CPerClientFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2292\">Source</a><a href=\"#impl-BitOrAssign%3CPerClientFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2292\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<PerClientFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CPointerEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17407\">Source</a><a href=\"#impl-BitOrAssign%3CPointerEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17407\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<PointerEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CProviderCapability%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4937\">Source</a><a href=\"#impl-BitOrAssign%3CProviderCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4937\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ProviderCapability>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CScrollFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11923\">Source</a><a href=\"#impl-BitOrAssign%3CScrollFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11923\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<ScrollFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CSelectionEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#556\">Source</a><a href=\"#impl-BitOrAssign%3CSelectionEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#556\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<SelectionEventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CTouchEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18417\">Source</a><a href=\"#impl-BitOrAssign%3CTouchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18417\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<TouchEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CXIEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11472\">Source</a><a href=\"#impl-BitOrAssign%3CXIEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11472\">Source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/bit/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<XIEventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAXNDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#254-259\">Source</a><a href=\"#impl-From%3CAXNDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.AXNDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::AXNDetail\">AXNDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#256-258\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.AXNDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::AXNDetail\">AXNDetail</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AXNDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAXOption%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#645-650\">Source</a><a href=\"#impl-From%3CAXOption%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.AXOption.html\" title=\"struct x11rb_protocol::protocol::xkb::AXOption\">AXOption</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#647-649\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.AXOption.html\" title=\"struct x11rb_protocol::protocol::xkb::AXOption\">AXOption</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AXOption>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAccessControl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#25264-25269\">Source</a><a href=\"#impl-From%3CAccessControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.AccessControl.html\" title=\"struct x11rb_protocol::protocol::xproto::AccessControl\">AccessControl</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#25266-25268\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.AccessControl.html\" title=\"struct x11rb_protocol::protocol::xproto::AccessControl\">AccessControl</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AccessControl>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CActionMessageFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#5039-5044\">Source</a><a href=\"#impl-From%3CActionMessageFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.ActionMessageFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::ActionMessageFlag\">ActionMessageFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#5041-5043\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.ActionMessageFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::ActionMessageFlag\">ActionMessageFlag</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ActionMessageFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAllow%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#13150-13155\">Source</a><a href=\"#impl-From%3CAllow%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Allow.html\" title=\"struct x11rb_protocol::protocol::xproto::Allow\">Allow</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#13152-13154\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Allow.html\" title=\"struct x11rb_protocol::protocol::xproto::Allow\">Allow</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Allow>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CArcMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16561-16566\">Source</a><a href=\"#impl-From%3CArcMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ArcMode.html\" title=\"struct x11rb_protocol::protocol::xproto::ArcMode\">ArcMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16563-16565\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ArcMode.html\" title=\"struct x11rb_protocol::protocol::xproto::ArcMode\">ArcMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ArcMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAtomEnum%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#5233-5238\">Source</a><a href=\"#impl-From%3CAtomEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.AtomEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::AtomEnum\">AtomEnum</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#5235-5237\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.AtomEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::AtomEnum\">AtomEnum</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AtomEnum>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAutoRepeatMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23734-23739\">Source</a><a href=\"#impl-From%3CAutoRepeatMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.AutoRepeatMode.html\" title=\"struct x11rb_protocol::protocol::xproto::AutoRepeatMode\">AutoRepeatMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23736-23738\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.AutoRepeatMode.html\" title=\"struct x11rb_protocol::protocol::xproto::AutoRepeatMode\">AutoRepeatMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<AutoRepeatMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBackPixmap%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6751-6756\">Source</a><a href=\"#impl-From%3CBackPixmap%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.BackPixmap.html\" title=\"struct x11rb_protocol::protocol::xproto::BackPixmap\">BackPixmap</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6753-6755\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.BackPixmap.html\" title=\"struct x11rb_protocol::protocol::xproto::BackPixmap\">BackPixmap</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BackPixmap>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBackingStore%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#583-588\">Source</a><a href=\"#impl-From%3CBackingStore%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.BackingStore.html\" title=\"struct x11rb_protocol::protocol::xproto::BackingStore\">BackingStore</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#585-587\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.BackingStore.html\" title=\"struct x11rb_protocol::protocol::xproto::BackingStore\">BackingStore</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BackingStore>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBarrierDirections%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3289-3294\">Source</a><a href=\"#impl-From%3CBarrierDirections%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3291-3293\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.BarrierDirections.html\" title=\"struct x11rb_protocol::protocol::xfixes::BarrierDirections\">BarrierDirections</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BarrierDirections>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBarrierFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18847-18852\">Source</a><a href=\"#impl-From%3CBarrierFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18849-18851\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.BarrierFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::BarrierFlags\">BarrierFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BarrierFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBehaviorType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2955-2960\">Source</a><a href=\"#impl-From%3CBehaviorType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BehaviorType.html\" title=\"struct x11rb_protocol::protocol::xkb::BehaviorType\">BehaviorType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2957-2959\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BehaviorType.html\" title=\"struct x11rb_protocol::protocol::xkb::BehaviorType\">BehaviorType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BehaviorType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBellClass%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#883-888\">Source</a><a href=\"#impl-From%3CBellClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BellClass.html\" title=\"struct x11rb_protocol::protocol::xkb::BellClass\">BellClass</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#885-887\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BellClass.html\" title=\"struct x11rb_protocol::protocol::xkb::BellClass\">BellClass</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BellClass>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBellClassResult%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#835-840\">Source</a><a href=\"#impl-From%3CBellClassResult%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BellClassResult.html\" title=\"struct x11rb_protocol::protocol::xkb::BellClassResult\">BellClassResult</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#837-839\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BellClassResult.html\" title=\"struct x11rb_protocol::protocol::xkb::BellClassResult\">BellClassResult</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BellClassResult>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBlanking%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#24537-24542\">Source</a><a href=\"#impl-From%3CBlanking%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Blanking.html\" title=\"struct x11rb_protocol::protocol::xproto::Blanking\">Blanking</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#24539-24541\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Blanking.html\" title=\"struct x11rb_protocol::protocol::xproto::Blanking\">Blanking</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Blanking>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBoolCtrl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#510-515\">Source</a><a href=\"#impl-From%3CBoolCtrl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#512-514\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrl.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrl\">BoolCtrl</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BoolCtrl>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBoolCtrlsHigh%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4851-4856\">Source</a><a href=\"#impl-From%3CBoolCtrlsHigh%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrlsHigh.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrlsHigh\">BoolCtrlsHigh</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4853-4855\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrlsHigh.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrlsHigh\">BoolCtrlsHigh</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BoolCtrlsHigh>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CBoolCtrlsLow%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4920-4925\">Source</a><a href=\"#impl-From%3CBoolCtrlsLow%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrlsLow.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrlsLow\">BoolCtrlsLow</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4922-4924\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.BoolCtrlsLow.html\" title=\"struct x11rb_protocol::protocol::xkb::BoolCtrlsLow\">BoolCtrlsLow</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<BoolCtrlsLow>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CButtonIndex%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#12128-12133\">Source</a><a href=\"#impl-From%3CButtonIndex%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ButtonIndex.html\" title=\"struct x11rb_protocol::protocol::xproto::ButtonIndex\">ButtonIndex</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#12130-12132\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ButtonIndex.html\" title=\"struct x11rb_protocol::protocol::xproto::ButtonIndex\">ButtonIndex</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ButtonIndex>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CButtonMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#1541-1546\">Source</a><a href=\"#impl-From%3CButtonMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ButtonMask.html\" title=\"struct x11rb_protocol::protocol::xproto::ButtonMask\">ButtonMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#1543-1545\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ButtonMask.html\" title=\"struct x11rb_protocol::protocol::xproto::ButtonMask\">ButtonMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ButtonMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCMDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2013-2018\">Source</a><a href=\"#impl-From%3CCMDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.CMDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::CMDetail\">CMDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2015-2017\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.CMDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::CMDetail\">CMDetail</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CMDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCP%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#428-433\">Source</a><a href=\"#impl-From%3CCP%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#430-432\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.CP.html\" title=\"struct x11rb_protocol::protocol::render::CP\">CP</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CP>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCW%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6654-6659\">Source</a><a href=\"#impl-From%3CCW%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6656-6658\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CW.html\" title=\"struct x11rb_protocol::protocol::xproto::CW\">CW</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CW>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCapStyle%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16318-16323\">Source</a><a href=\"#impl-From%3CCapStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CapStyle.html\" title=\"struct x11rb_protocol::protocol::xproto::CapStyle\">CapStyle</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16320-16322\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CapStyle.html\" title=\"struct x11rb_protocol::protocol::xproto::CapStyle\">CapStyle</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CapStyle>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChangeDevice%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#16292-16297\">Source</a><a href=\"#impl-From%3CChangeDevice%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeDevice.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeDevice\">ChangeDevice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#16294-16296\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeDevice.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeDevice\">ChangeDevice</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ChangeDevice>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChangeFeedbackControlMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5504-5509\">Source</a><a href=\"#impl-From%3CChangeFeedbackControlMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#5506-5508\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeFeedbackControlMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeFeedbackControlMask\">ChangeFeedbackControlMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ChangeFeedbackControlMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChangeMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#10533-10538\">Source</a><a href=\"#impl-From%3CChangeMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeMode.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeMode\">ChangeMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#10535-10537\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeMode.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeMode\">ChangeMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ChangeMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CChangeReason%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17070-17075\">Source</a><a href=\"#impl-From%3CChangeReason%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeReason.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeReason\">ChangeReason</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17072-17074\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ChangeReason.html\" title=\"struct x11rb_protocol::protocol::xinput::ChangeReason\">ChangeReason</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ChangeReason>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCirculate%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#9356-9361\">Source</a><a href=\"#impl-From%3CCirculate%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Circulate.html\" title=\"struct x11rb_protocol::protocol::xproto::Circulate\">Circulate</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#9358-9360\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Circulate.html\" title=\"struct x11rb_protocol::protocol::xproto::Circulate\">Circulate</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Circulate>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CClassesReportedMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#15918-15923\">Source</a><a href=\"#impl-From%3CClassesReportedMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ClassesReportedMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ClassesReportedMask\">ClassesReportedMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#15920-15922\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ClassesReportedMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ClassesReportedMask\">ClassesReportedMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ClassesReportedMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CClientDisconnectFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3528-3533\">Source</a><a href=\"#impl-From%3CClientDisconnectFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#3530-3532\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.ClientDisconnectFlags.html\" title=\"struct x11rb_protocol::protocol::xfixes::ClientDisconnectFlags\">ClientDisconnectFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ClientDisconnectFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CClipOrdering%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#18092-18097\">Source</a><a href=\"#impl-From%3CClipOrdering%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ClipOrdering.html\" title=\"struct x11rb_protocol::protocol::xproto::ClipOrdering\">ClipOrdering</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#18094-18096\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ClipOrdering.html\" title=\"struct x11rb_protocol::protocol::xproto::ClipOrdering\">ClipOrdering</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ClipOrdering>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCloseDown%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#25379-25384\">Source</a><a href=\"#impl-From%3CCloseDown%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CloseDown.html\" title=\"struct x11rb_protocol::protocol::xproto::CloseDown\">CloseDown</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#25381-25383\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CloseDown.html\" title=\"struct x11rb_protocol::protocol::xproto::CloseDown\">CloseDown</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CloseDown>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CColorFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#21741-21746\">Source</a><a href=\"#impl-From%3CColorFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ColorFlag.html\" title=\"struct x11rb_protocol::protocol::xproto::ColorFlag\">ColorFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#21743-21745\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ColorFlag.html\" title=\"struct x11rb_protocol::protocol::xproto::ColorFlag\">ColorFlag</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ColorFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CColormapAlloc%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#20464-20469\">Source</a><a href=\"#impl-From%3CColormapAlloc%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ColormapAlloc.html\" title=\"struct x11rb_protocol::protocol::xproto::ColormapAlloc\">ColormapAlloc</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#20466-20468\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ColormapAlloc.html\" title=\"struct x11rb_protocol::protocol::xproto::ColormapAlloc\">ColormapAlloc</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ColormapAlloc>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CColormapEnum%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#5699-5704\">Source</a><a href=\"#impl-From%3CColormapEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ColormapEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::ColormapEnum\">ColormapEnum</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#5701-5703\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ColormapEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::ColormapEnum\">ColormapEnum</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ColormapEnum>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CColormapState%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#5641-5646\">Source</a><a href=\"#impl-From%3CColormapState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ColormapState.html\" title=\"struct x11rb_protocol::protocol::xproto::ColormapState\">ColormapState</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#5643-5645\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ColormapState.html\" title=\"struct x11rb_protocol::protocol::xproto::ColormapState\">ColormapState</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ColormapState>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CConfigWindow%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#8881-8886\">Source</a><a href=\"#impl-From%3CConfigWindow%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ConfigWindow.html\" title=\"struct x11rb_protocol::protocol::xproto::ConfigWindow\">ConfigWindow</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#8883-8885\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ConfigWindow.html\" title=\"struct x11rb_protocol::protocol::xproto::ConfigWindow\">ConfigWindow</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ConfigWindow>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CConnection%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1538-1543\">Source</a><a href=\"#impl-From%3CConnection%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.Connection.html\" title=\"struct x11rb_protocol::protocol::randr::Connection\">Connection</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1540-1542\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.Connection.html\" title=\"struct x11rb_protocol::protocol::randr::Connection\">Connection</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Connection>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CConst%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#71-76\">Source</a><a href=\"#impl-From%3CConst%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Const.html\" title=\"struct x11rb_protocol::protocol::xkb::Const\">Const</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#73-75\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Const.html\" title=\"struct x11rb_protocol::protocol::xkb::Const\">Const</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Const>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CControl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#572-577\">Source</a><a href=\"#impl-From%3CControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#574-576\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Control.html\" title=\"struct x11rb_protocol::protocol::xkb::Control\">Control</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Control>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCoordMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#18663-18668\">Source</a><a href=\"#impl-From%3CCoordMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CoordMode.html\" title=\"struct x11rb_protocol::protocol::xproto::CoordMode\">CoordMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#18665-18667\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CoordMode.html\" title=\"struct x11rb_protocol::protocol::xproto::CoordMode\">CoordMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CoordMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCursorEnum%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#11744-11749\">Source</a><a href=\"#impl-From%3CCursorEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CursorEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::CursorEnum\">CursorEnum</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#11746-11748\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.CursorEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::CursorEnum\">CursorEnum</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CursorEnum>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCursorNotify%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#808-813\">Source</a><a href=\"#impl-From%3CCursorNotify%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotify.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotify\">CursorNotify</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#810-812\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotify.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotify\">CursorNotify</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CursorNotify>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCursorNotifyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#841-846\">Source</a><a href=\"#impl-From%3CCursorNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#843-845\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.CursorNotifyMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::CursorNotifyMask\">CursorNotifyMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<CursorNotifyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDevice%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#9971-9976\">Source</a><a href=\"#impl-From%3CDevice%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.Device.html\" title=\"struct x11rb_protocol::protocol::xinput::Device\">Device</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#9973-9975\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.Device.html\" title=\"struct x11rb_protocol::protocol::xinput::Device\">Device</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Device>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceChange%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#16731-16736\">Source</a><a href=\"#impl-From%3CDeviceChange%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceChange.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceChange\">DeviceChange</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#16733-16735\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceChange.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceChange\">DeviceChange</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceChange>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceClassType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11780-11785\">Source</a><a href=\"#impl-From%3CDeviceClassType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceClassType.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceClassType\">DeviceClassType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11782-11784\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceClassType.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceClassType\">DeviceClassType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceClassType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceControl%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#7384-7389\">Source</a><a href=\"#impl-From%3CDeviceControl%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceControl.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceControl\">DeviceControl</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#7386-7388\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceControl.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceControl\">DeviceControl</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceControl>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceInputMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#3220-3225\">Source</a><a href=\"#impl-From%3CDeviceInputMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceInputMode.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceInputMode\">DeviceInputMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#3222-3224\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceInputMode.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceInputMode\">DeviceInputMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceInputMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11840-11845\">Source</a><a href=\"#impl-From%3CDeviceType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceType.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceType\">DeviceType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11842-11844\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceType.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceType\">DeviceType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDeviceUse%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#283-288\">Source</a><a href=\"#impl-From%3CDeviceUse%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceUse.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceUse\">DeviceUse</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#285-287\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.DeviceUse.html\" title=\"struct x11rb_protocol::protocol::xinput::DeviceUse\">DeviceUse</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DeviceUse>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDoodadType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#3624-3629\">Source</a><a href=\"#impl-From%3CDoodadType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.DoodadType.html\" title=\"struct x11rb_protocol::protocol::xkb::DoodadType\">DoodadType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#3626-3628\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.DoodadType.html\" title=\"struct x11rb_protocol::protocol::xkb::DoodadType\">DoodadType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<DoodadType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#3793-3798\">Source</a><a href=\"#impl-From%3CError%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Error.html\" title=\"struct x11rb_protocol::protocol::xkb::Error\">Error</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#3795-3797\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Error.html\" title=\"struct x11rb_protocol::protocol::xkb::Error\">Error</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#510-515\">Source</a><a href=\"#impl-From%3CEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#512-514\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.EventMask.html\" title=\"struct x11rb_protocol::protocol::xproto::EventMask\">EventMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEventMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#13733-13738\">Source</a><a href=\"#impl-From%3CEventMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.EventMode.html\" title=\"struct x11rb_protocol::protocol::xinput::EventMode\">EventMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#13735-13737\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.EventMode.html\" title=\"struct x11rb_protocol::protocol::xinput::EventMode\">EventMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EventMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CEventType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#129-134\">Source</a><a href=\"#impl-From%3CEventType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.EventType.html\" title=\"struct x11rb_protocol::protocol::xkb::EventType\">EventType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#131-133\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.EventType.html\" title=\"struct x11rb_protocol::protocol::xkb::EventType\">EventType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<EventType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CExplicit%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1554-1559\">Source</a><a href=\"#impl-From%3CExplicit%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Explicit.html\" title=\"struct x11rb_protocol::protocol::xkb::Explicit\">Explicit</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1556-1558\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Explicit.html\" title=\"struct x11rb_protocol::protocol::xkb::Explicit\">Explicit</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Explicit>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CExposures%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#24598-24603\">Source</a><a href=\"#impl-From%3CExposures%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Exposures.html\" title=\"struct x11rb_protocol::protocol::xproto::Exposures\">Exposures</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#24600-24602\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Exposures.html\" title=\"struct x11rb_protocol::protocol::xproto::Exposures\">Exposures</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Exposures>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFamily%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#24944-24949\">Source</a><a href=\"#impl-From%3CFamily%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Family.html\" title=\"struct x11rb_protocol::protocol::xproto::Family\">Family</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#24946-24948\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Family.html\" title=\"struct x11rb_protocol::protocol::xproto::Family\">Family</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Family>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFeedbackClass%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#3586-3591\">Source</a><a href=\"#impl-From%3CFeedbackClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.FeedbackClass.html\" title=\"struct x11rb_protocol::protocol::xinput::FeedbackClass\">FeedbackClass</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#3588-3590\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.FeedbackClass.html\" title=\"struct x11rb_protocol::protocol::xinput::FeedbackClass\">FeedbackClass</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FeedbackClass>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFillRule%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16467-16472\">Source</a><a href=\"#impl-From%3CFillRule%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.FillRule.html\" title=\"struct x11rb_protocol::protocol::xproto::FillRule\">FillRule</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16469-16471\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.FillRule.html\" title=\"struct x11rb_protocol::protocol::xproto::FillRule\">FillRule</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FillRule>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFillStyle%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16418-16423\">Source</a><a href=\"#impl-From%3CFillStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.FillStyle.html\" title=\"struct x11rb_protocol::protocol::xproto::FillStyle\">FillStyle</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16420-16422\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.FillStyle.html\" title=\"struct x11rb_protocol::protocol::xproto::FillStyle\">FillStyle</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FillStyle>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFontDraw%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#14654-14659\">Source</a><a href=\"#impl-From%3CFontDraw%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.FontDraw.html\" title=\"struct x11rb_protocol::protocol::xproto::FontDraw\">FontDraw</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#14656-14658\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.FontDraw.html\" title=\"struct x11rb_protocol::protocol::xproto::FontDraw\">FontDraw</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FontDraw>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFontEnum%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#22573-22578\">Source</a><a href=\"#impl-From%3CFontEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.FontEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::FontEnum\">FontEnum</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#22575-22577\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.FontEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::FontEnum\">FontEnum</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<FontEnum>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGBNDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2139-2144\">Source</a><a href=\"#impl-From%3CGBNDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.GBNDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::GBNDetail\">GBNDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2141-2143\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.GBNDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::GBNDetail\">GBNDetail</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GBNDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGC%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16123-16128\">Source</a><a href=\"#impl-From%3CGC%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16125-16127\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GC.html\" title=\"struct x11rb_protocol::protocol::xproto::GC\">GC</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GC>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGX%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16206-16211\">Source</a><a href=\"#impl-From%3CGX%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GX.html\" title=\"struct x11rb_protocol::protocol::xproto::GX\">GX</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16208-16210\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GX.html\" title=\"struct x11rb_protocol::protocol::xproto::GX\">GX</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GX>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGesturePinchEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19070-19075\">Source</a><a href=\"#impl-From%3CGesturePinchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19072-19074\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GesturePinchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GesturePinchEventFlags\">GesturePinchEventFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GesturePinchEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGestureSwipeEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19356-19361\">Source</a><a href=\"#impl-From%3CGestureSwipeEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#19358-19360\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GestureSwipeEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::GestureSwipeEventFlags\">GestureSwipeEventFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GestureSwipeEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGetPropertyType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#10480-10485\">Source</a><a href=\"#impl-From%3CGetPropertyType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GetPropertyType.html\" title=\"struct x11rb_protocol::protocol::xproto::GetPropertyType\">GetPropertyType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#10482-10484\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GetPropertyType.html\" title=\"struct x11rb_protocol::protocol::xproto::GetPropertyType\">GetPropertyType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GetPropertyType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrab%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#12781-12786\">Source</a><a href=\"#impl-From%3CGrab%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Grab.html\" title=\"struct x11rb_protocol::protocol::xproto::Grab\">Grab</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#12783-12785\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Grab.html\" title=\"struct x11rb_protocol::protocol::xproto::Grab\">Grab</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Grab>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrabMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#11621-11626\">Source</a><a href=\"#impl-From%3CGrabMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GrabMode.html\" title=\"struct x11rb_protocol::protocol::xproto::GrabMode\">GrabMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#11623-11625\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GrabMode.html\" title=\"struct x11rb_protocol::protocol::xproto::GrabMode\">GrabMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrabMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrabMode22%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#13885-13890\">Source</a><a href=\"#impl-From%3CGrabMode22%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GrabMode22.html\" title=\"struct x11rb_protocol::protocol::xinput::GrabMode22\">GrabMode22</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#13887-13889\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GrabMode22.html\" title=\"struct x11rb_protocol::protocol::xinput::GrabMode22\">GrabMode22</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrabMode22>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrabOwner%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#13396-13401\">Source</a><a href=\"#impl-From%3CGrabOwner%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GrabOwner.html\" title=\"struct x11rb_protocol::protocol::xinput::GrabOwner\">GrabOwner</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#13398-13400\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GrabOwner.html\" title=\"struct x11rb_protocol::protocol::xinput::GrabOwner\">GrabOwner</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrabOwner>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrabStatus%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#11683-11688\">Source</a><a href=\"#impl-From%3CGrabStatus%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GrabStatus.html\" title=\"struct x11rb_protocol::protocol::xproto::GrabStatus\">GrabStatus</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#11685-11687\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.GrabStatus.html\" title=\"struct x11rb_protocol::protocol::xproto::GrabStatus\">GrabStatus</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrabStatus>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrabType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#13950-13955\">Source</a><a href=\"#impl-From%3CGrabType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GrabType.html\" title=\"struct x11rb_protocol::protocol::xinput::GrabType\">GrabType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#13952-13954\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.GrabType.html\" title=\"struct x11rb_protocol::protocol::xinput::GrabType\">GrabType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrabType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGravity%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6796-6801\">Source</a><a href=\"#impl-From%3CGravity%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Gravity.html\" title=\"struct x11rb_protocol::protocol::xproto::Gravity\">Gravity</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6798-6800\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Gravity.html\" title=\"struct x11rb_protocol::protocol::xproto::Gravity\">Gravity</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Gravity>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGroup%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1018-1023\">Source</a><a href=\"#impl-From%3CGroup%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Group.html\" title=\"struct x11rb_protocol::protocol::xkb::Group\">Group</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1020-1022\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Group.html\" title=\"struct x11rb_protocol::protocol::xkb::Group\">Group</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Group>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGroups%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1079-1084\">Source</a><a href=\"#impl-From%3CGroups%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Groups.html\" title=\"struct x11rb_protocol::protocol::xkb::Groups\">Groups</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1081-1083\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.Groups.html\" title=\"struct x11rb_protocol::protocol::xkb::Groups\">Groups</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Groups>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGroupsWrap%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1261-1266\">Source</a><a href=\"#impl-From%3CGroupsWrap%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.GroupsWrap.html\" title=\"struct x11rb_protocol::protocol::xkb::GroupsWrap\">GroupsWrap</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1263-1265\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.GroupsWrap.html\" title=\"struct x11rb_protocol::protocol::xkb::GroupsWrap\">GroupsWrap</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GroupsWrap>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHierarchyChangeType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#10466-10471\">Source</a><a href=\"#impl-From%3CHierarchyChangeType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyChangeType.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyChangeType\">HierarchyChangeType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#10468-10470\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyChangeType.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyChangeType\">HierarchyChangeType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HierarchyChangeType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHierarchyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17830-17835\">Source</a><a href=\"#impl-From%3CHierarchyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17832-17834\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.HierarchyMask.html\" title=\"struct x11rb_protocol::protocol::xinput::HierarchyMask\">HierarchyMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HierarchyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CHostMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#24882-24887\">Source</a><a href=\"#impl-From%3CHostMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.HostMode.html\" title=\"struct x11rb_protocol::protocol::xproto::HostMode\">HostMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#24884-24886\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.HostMode.html\" title=\"struct x11rb_protocol::protocol::xproto::HostMode\">HostMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<HostMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CID%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#944-949\">Source</a><a href=\"#impl-From%3CID%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.ID.html\" title=\"struct x11rb_protocol::protocol::xkb::ID\">ID</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#946-948\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.ID.html\" title=\"struct x11rb_protocol::protocol::xkb::ID\">ID</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ID>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIMFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1745-1750\">Source</a><a href=\"#impl-From%3CIMFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.IMFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::IMFlag\">IMFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1747-1749\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.IMFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::IMFlag\">IMFlag</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IMFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIMGroupsWhich%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1875-1880\">Source</a><a href=\"#impl-From%3CIMGroupsWhich%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.IMGroupsWhich.html\" title=\"struct x11rb_protocol::protocol::xkb::IMGroupsWhich\">IMGroupsWhich</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1877-1879\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.IMGroupsWhich.html\" title=\"struct x11rb_protocol::protocol::xkb::IMGroupsWhich\">IMGroupsWhich</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IMGroupsWhich>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIMModsWhich%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1809-1814\">Source</a><a href=\"#impl-From%3CIMModsWhich%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.IMModsWhich.html\" title=\"struct x11rb_protocol::protocol::xkb::IMModsWhich\">IMModsWhich</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1811-1813\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.IMModsWhich.html\" title=\"struct x11rb_protocol::protocol::xkb::IMModsWhich\">IMModsWhich</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IMModsWhich>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CImageFormat%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#19660-19665\">Source</a><a href=\"#impl-From%3CImageFormat%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ImageFormat.html\" title=\"struct x11rb_protocol::protocol::xproto::ImageFormat\">ImageFormat</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#19662-19664\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ImageFormat.html\" title=\"struct x11rb_protocol::protocol::xproto::ImageFormat\">ImageFormat</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ImageFormat>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CImageOrder%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#948-953\">Source</a><a href=\"#impl-From%3CImageOrder%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ImageOrder.html\" title=\"struct x11rb_protocol::protocol::xproto::ImageOrder\">ImageOrder</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#950-952\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ImageOrder.html\" title=\"struct x11rb_protocol::protocol::xproto::ImageOrder\">ImageOrder</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ImageOrder>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CInputClass%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#350-355\">Source</a><a href=\"#impl-From%3CInputClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.InputClass.html\" title=\"struct x11rb_protocol::protocol::xinput::InputClass\">InputClass</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#352-354\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.InputClass.html\" title=\"struct x11rb_protocol::protocol::xinput::InputClass\">InputClass</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<InputClass>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CInputFocus%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#14077-14082\">Source</a><a href=\"#impl-From%3CInputFocus%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.InputFocus.html\" title=\"struct x11rb_protocol::protocol::xproto::InputFocus\">InputFocus</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#14079-14081\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.InputFocus.html\" title=\"struct x11rb_protocol::protocol::xproto::InputFocus\">InputFocus</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<InputFocus>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CJoinStyle%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16368-16373\">Source</a><a href=\"#impl-From%3CJoinStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.JoinStyle.html\" title=\"struct x11rb_protocol::protocol::xproto::JoinStyle\">JoinStyle</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16370-16372\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.JoinStyle.html\" title=\"struct x11rb_protocol::protocol::xproto::JoinStyle\">JoinStyle</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<JoinStyle>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKB%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23632-23637\">Source</a><a href=\"#impl-From%3CKB%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23634-23636\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KB.html\" title=\"struct x11rb_protocol::protocol::xproto::KB\">KB</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KB>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyButMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#1215-1220\">Source</a><a href=\"#impl-From%3CKeyButMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KeyButMask.html\" title=\"struct x11rb_protocol::protocol::xproto::KeyButMask\">KeyButMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#1217-1219\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.KeyButMask.html\" title=\"struct x11rb_protocol::protocol::xproto::KeyButMask\">KeyButMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KeyButMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKeyEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17185-17190\">Source</a><a href=\"#impl-From%3CKeyEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17187-17189\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.KeyEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::KeyEventFlags\">KeyEventFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<KeyEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CKill%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#25493-25498\">Source</a><a href=\"#impl-From%3CKill%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Kill.html\" title=\"struct x11rb_protocol::protocol::xproto::Kill\">Kill</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#25495-25497\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Kill.html\" title=\"struct x11rb_protocol::protocol::xproto::Kill\">Kill</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Kill>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLedClass%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#766-771\">Source</a><a href=\"#impl-From%3CLedClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.LedClass.html\" title=\"struct x11rb_protocol::protocol::xkb::LedClass\">LedClass</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#768-770\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.LedClass.html\" title=\"struct x11rb_protocol::protocol::xkb::LedClass\">LedClass</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LedClass>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLedClassResult%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#711-716\">Source</a><a href=\"#impl-From%3CLedClassResult%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.LedClassResult.html\" title=\"struct x11rb_protocol::protocol::xkb::LedClassResult\">LedClassResult</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#713-715\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.LedClassResult.html\" title=\"struct x11rb_protocol::protocol::xkb::LedClassResult\">LedClassResult</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LedClassResult>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLedMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23686-23691\">Source</a><a href=\"#impl-From%3CLedMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.LedMode.html\" title=\"struct x11rb_protocol::protocol::xproto::LedMode\">LedMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#23688-23690\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.LedMode.html\" title=\"struct x11rb_protocol::protocol::xproto::LedMode\">LedMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LedMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLineStyle%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16268-16273\">Source</a><a href=\"#impl-From%3CLineStyle%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.LineStyle.html\" title=\"struct x11rb_protocol::protocol::xproto::LineStyle\">LineStyle</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16270-16272\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.LineStyle.html\" title=\"struct x11rb_protocol::protocol::xproto::LineStyle\">LineStyle</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LineStyle>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CLockDeviceFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#5268-5273\">Source</a><a href=\"#impl-From%3CLockDeviceFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.LockDeviceFlags.html\" title=\"struct x11rb_protocol::protocol::xkb::LockDeviceFlags\">LockDeviceFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#5270-5272\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.LockDeviceFlags.html\" title=\"struct x11rb_protocol::protocol::xkb::LockDeviceFlags\">LockDeviceFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<LockDeviceFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMapIndex%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#26131-26136\">Source</a><a href=\"#impl-From%3CMapIndex%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.MapIndex.html\" title=\"struct x11rb_protocol::protocol::xproto::MapIndex\">MapIndex</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#26133-26135\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.MapIndex.html\" title=\"struct x11rb_protocol::protocol::xproto::MapIndex\">MapIndex</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MapIndex>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMapPart%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#319-324\">Source</a><a href=\"#impl-From%3CMapPart%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.MapPart.html\" title=\"struct x11rb_protocol::protocol::xkb::MapPart\">MapPart</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#321-323\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.MapPart.html\" title=\"struct x11rb_protocol::protocol::xkb::MapPart\">MapPart</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MapPart>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMapState%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#7897-7902\">Source</a><a href=\"#impl-From%3CMapState%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.MapState.html\" title=\"struct x11rb_protocol::protocol::xproto::MapState\">MapState</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#7899-7901\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.MapState.html\" title=\"struct x11rb_protocol::protocol::xproto::MapState\">MapState</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MapState>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMapping%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6221-6226\">Source</a><a href=\"#impl-From%3CMapping%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Mapping.html\" title=\"struct x11rb_protocol::protocol::xproto::Mapping\">Mapping</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6223-6225\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Mapping.html\" title=\"struct x11rb_protocol::protocol::xproto::Mapping\">Mapping</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Mapping>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMappingStatus%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#25829-25834\">Source</a><a href=\"#impl-From%3CMappingStatus%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.MappingStatus.html\" title=\"struct x11rb_protocol::protocol::xproto::MappingStatus\">MappingStatus</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#25831-25833\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.MappingStatus.html\" title=\"struct x11rb_protocol::protocol::xproto::MappingStatus\">MappingStatus</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MappingStatus>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CModMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#1143-1148\">Source</a><a href=\"#impl-From%3CModMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ModMask.html\" title=\"struct x11rb_protocol::protocol::xproto::ModMask\">ModMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#1145-1147\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ModMask.html\" title=\"struct x11rb_protocol::protocol::xproto::ModMask\">ModMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ModMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CModeFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1159-1164\">Source</a><a href=\"#impl-From%3CModeFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#1161-1163\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ModeFlag.html\" title=\"struct x11rb_protocol::protocol::randr::ModeFlag\">ModeFlag</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ModeFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CModifierDevice%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#2747-2752\">Source</a><a href=\"#impl-From%3CModifierDevice%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierDevice.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierDevice\">ModifierDevice</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#2749-2751\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierDevice.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierDevice\">ModifierDevice</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ModifierDevice>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CModifierMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#13989-13994\">Source</a><a href=\"#impl-From%3CModifierMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#13991-13993\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ModifierMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ModifierMask\">ModifierMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ModifierMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMoreEventsMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#15510-15515\">Source</a><a href=\"#impl-From%3CMoreEventsMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.MoreEventsMask.html\" title=\"struct x11rb_protocol::protocol::xinput::MoreEventsMask\">MoreEventsMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#15512-15514\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.MoreEventsMask.html\" title=\"struct x11rb_protocol::protocol::xinput::MoreEventsMask\">MoreEventsMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MoreEventsMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMotion%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#1811-1816\">Source</a><a href=\"#impl-From%3CMotion%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Motion.html\" title=\"struct x11rb_protocol::protocol::xproto::Motion\">Motion</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#1813-1815\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Motion.html\" title=\"struct x11rb_protocol::protocol::xproto::Motion\">Motion</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Motion>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNKNDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#194-199\">Source</a><a href=\"#impl-From%3CNKNDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NKNDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NKNDetail\">NKNDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#196-198\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NKNDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NKNDetail\">NKNDetail</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NKNDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNameDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2061-2066\">Source</a><a href=\"#impl-From%3CNameDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2063-2065\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.NameDetail.html\" title=\"struct x11rb_protocol::protocol::xkb::NameDetail\">NameDetail</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NameDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotify%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#6186-6191\">Source</a><a href=\"#impl-From%3CNotify%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.Notify.html\" title=\"struct x11rb_protocol::protocol::randr::Notify\">Notify</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#6188-6190\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.Notify.html\" title=\"struct x11rb_protocol::protocol::randr::Notify\">Notify</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Notify>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotifyDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17655-17660\">Source</a><a href=\"#impl-From%3CNotifyDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.NotifyDetail.html\" title=\"struct x11rb_protocol::protocol::xinput::NotifyDetail\">NotifyDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17657-17659\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.NotifyDetail.html\" title=\"struct x11rb_protocol::protocol::xinput::NotifyDetail\">NotifyDetail</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NotifyDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotifyDetail%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#2073-2078\">Source</a><a href=\"#impl-From%3CNotifyDetail%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.NotifyDetail.html\" title=\"struct x11rb_protocol::protocol::xproto::NotifyDetail\">NotifyDetail</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#2075-2077\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.NotifyDetail.html\" title=\"struct x11rb_protocol::protocol::xproto::NotifyDetail\">NotifyDetail</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NotifyDetail>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotifyMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#648-653\">Source</a><a href=\"#impl-From%3CNotifyMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.NotifyMask.html\" title=\"struct x11rb_protocol::protocol::randr::NotifyMask\">NotifyMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#650-652\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.NotifyMask.html\" title=\"struct x11rb_protocol::protocol::randr::NotifyMask\">NotifyMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NotifyMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotifyMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17586-17591\">Source</a><a href=\"#impl-From%3CNotifyMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.NotifyMode.html\" title=\"struct x11rb_protocol::protocol::xinput::NotifyMode\">NotifyMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17588-17590\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.NotifyMode.html\" title=\"struct x11rb_protocol::protocol::xinput::NotifyMode\">NotifyMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NotifyMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNotifyMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#2140-2145\">Source</a><a href=\"#impl-From%3CNotifyMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.NotifyMode.html\" title=\"struct x11rb_protocol::protocol::xproto::NotifyMode\">NotifyMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#2142-2144\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.NotifyMode.html\" title=\"struct x11rb_protocol::protocol::xproto::NotifyMode\">NotifyMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<NotifyMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPerClientFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2250-2255\">Source</a><a href=\"#impl-From%3CPerClientFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2252-2254\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.PerClientFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::PerClientFlag\">PerClientFlag</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PerClientFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPictOp%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#237-242\">Source</a><a href=\"#impl-From%3CPictOp%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.PictOp.html\" title=\"struct x11rb_protocol::protocol::render::PictOp\">PictOp</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#239-241\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.PictOp.html\" title=\"struct x11rb_protocol::protocol::render::PictOp\">PictOp</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PictOp>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPictType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#70-75\">Source</a><a href=\"#impl-From%3CPictType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.PictType.html\" title=\"struct x11rb_protocol::protocol::render::PictType\">PictType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#72-74\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.PictType.html\" title=\"struct x11rb_protocol::protocol::render::PictType\">PictType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PictType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPictureEnum%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#128-133\">Source</a><a href=\"#impl-From%3CPictureEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.PictureEnum.html\" title=\"struct x11rb_protocol::protocol::render::PictureEnum\">PictureEnum</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#130-132\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.PictureEnum.html\" title=\"struct x11rb_protocol::protocol::render::PictureEnum\">PictureEnum</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PictureEnum>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPixmapEnum%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#22393-22398\">Source</a><a href=\"#impl-From%3CPixmapEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.PixmapEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::PixmapEnum\">PixmapEnum</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#22395-22397\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.PixmapEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::PixmapEnum\">PixmapEnum</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PixmapEnum>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPlace%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#4593-4598\">Source</a><a href=\"#impl-From%3CPlace%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Place.html\" title=\"struct x11rb_protocol::protocol::xproto::Place\">Place</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#4595-4597\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Place.html\" title=\"struct x11rb_protocol::protocol::xproto::Place\">Place</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Place>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPointerEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17369-17374\">Source</a><a href=\"#impl-From%3CPointerEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#17371-17373\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PointerEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::PointerEventFlags\">PointerEventFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PointerEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPolyEdge%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#323-328\">Source</a><a href=\"#impl-From%3CPolyEdge%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.PolyEdge.html\" title=\"struct x11rb_protocol::protocol::render::PolyEdge\">PolyEdge</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#325-327\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.PolyEdge.html\" title=\"struct x11rb_protocol::protocol::render::PolyEdge\">PolyEdge</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PolyEdge>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPolyMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#370-375\">Source</a><a href=\"#impl-From%3CPolyMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.PolyMode.html\" title=\"struct x11rb_protocol::protocol::render::PolyMode\">PolyMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#372-374\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.PolyMode.html\" title=\"struct x11rb_protocol::protocol::render::PolyMode\">PolyMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PolyMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPolyShape%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#19290-19295\">Source</a><a href=\"#impl-From%3CPolyShape%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.PolyShape.html\" title=\"struct x11rb_protocol::protocol::xproto::PolyShape\">PolyShape</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#19292-19294\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.PolyShape.html\" title=\"struct x11rb_protocol::protocol::xproto::PolyShape\">PolyShape</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PolyShape>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPropMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#10188-10193\">Source</a><a href=\"#impl-From%3CPropMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.PropMode.html\" title=\"struct x11rb_protocol::protocol::xproto::PropMode\">PropMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#10190-10192\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.PropMode.html\" title=\"struct x11rb_protocol::protocol::xproto::PropMode\">PropMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PropMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPropagateMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#1738-1743\">Source</a><a href=\"#impl-From%3CPropagateMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PropagateMode.html\" title=\"struct x11rb_protocol::protocol::xinput::PropagateMode\">PropagateMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#1740-1742\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PropagateMode.html\" title=\"struct x11rb_protocol::protocol::xinput::PropagateMode\">PropagateMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PropagateMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CProperty%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#4793-4798\">Source</a><a href=\"#impl-From%3CProperty%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Property.html\" title=\"struct x11rb_protocol::protocol::xproto::Property\">Property</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#4795-4797\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Property.html\" title=\"struct x11rb_protocol::protocol::xproto::Property\">Property</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Property>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPropertyFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18046-18051\">Source</a><a href=\"#impl-From%3CPropertyFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PropertyFlag.html\" title=\"struct x11rb_protocol::protocol::xinput::PropertyFlag\">PropertyFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18048-18050\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PropertyFlag.html\" title=\"struct x11rb_protocol::protocol::xinput::PropertyFlag\">PropertyFlag</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PropertyFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPropertyFormat%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#9328-9333\">Source</a><a href=\"#impl-From%3CPropertyFormat%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PropertyFormat.html\" title=\"struct x11rb_protocol::protocol::xinput::PropertyFormat\">PropertyFormat</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#9330-9332\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.PropertyFormat.html\" title=\"struct x11rb_protocol::protocol::xinput::PropertyFormat\">PropertyFormat</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PropertyFormat>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CProviderCapability%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4896-4901\">Source</a><a href=\"#impl-From%3CProviderCapability%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#4898-4900\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.ProviderCapability.html\" title=\"struct x11rb_protocol::protocol::randr::ProviderCapability\">ProviderCapability</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ProviderCapability>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CQueryShapeOf%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#22954-22959\">Source</a><a href=\"#impl-From%3CQueryShapeOf%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.QueryShapeOf.html\" title=\"struct x11rb_protocol::protocol::xproto::QueryShapeOf\">QueryShapeOf</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#22956-22958\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.QueryShapeOf.html\" title=\"struct x11rb_protocol::protocol::xproto::QueryShapeOf\">QueryShapeOf</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<QueryShapeOf>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRegionEnum%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#1240-1245\">Source</a><a href=\"#impl-From%3CRegionEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.RegionEnum.html\" title=\"struct x11rb_protocol::protocol::xfixes::RegionEnum\">RegionEnum</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#1242-1244\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.RegionEnum.html\" title=\"struct x11rb_protocol::protocol::xfixes::RegionEnum\">RegionEnum</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RegionEnum>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRepeat%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#544-549\">Source</a><a href=\"#impl-From%3CRepeat%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.Repeat.html\" title=\"struct x11rb_protocol::protocol::render::Repeat\">Repeat</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#546-548\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.Repeat.html\" title=\"struct x11rb_protocol::protocol::render::Repeat\">Repeat</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Repeat>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRotation%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#86-91\">Source</a><a href=\"#impl-From%3CRotation%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.Rotation.html\" title=\"struct x11rb_protocol::protocol::randr::Rotation\">Rotation</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#88-90\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.Rotation.html\" title=\"struct x11rb_protocol::protocol::randr::Rotation\">Rotation</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Rotation>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSA%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#3858-3863\">Source</a><a href=\"#impl-From%3CSA%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SA.html\" title=\"struct x11rb_protocol::protocol::xkb::SA\">SA</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#3860-3862\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SA.html\" title=\"struct x11rb_protocol::protocol::xkb::SA\">SA</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SA>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSAIsoLockFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4507-4512\">Source</a><a href=\"#impl-From%3CSAIsoLockFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SAIsoLockFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::SAIsoLockFlag\">SAIsoLockFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4509-4511\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SAIsoLockFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::SAIsoLockFlag\">SAIsoLockFlag</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SAIsoLockFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSAIsoLockNoAffect%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4572-4577\">Source</a><a href=\"#impl-From%3CSAIsoLockNoAffect%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SAIsoLockNoAffect.html\" title=\"struct x11rb_protocol::protocol::xkb::SAIsoLockNoAffect\">SAIsoLockNoAffect</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4574-4576\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SAIsoLockNoAffect.html\" title=\"struct x11rb_protocol::protocol::xkb::SAIsoLockNoAffect\">SAIsoLockNoAffect</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SAIsoLockNoAffect>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSAMovePtrFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4174-4179\">Source</a><a href=\"#impl-From%3CSAMovePtrFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SAMovePtrFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::SAMovePtrFlag\">SAMovePtrFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4176-4178\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SAMovePtrFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::SAMovePtrFlag\">SAMovePtrFlag</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SAMovePtrFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSASetPtrDfltFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4392-4397\">Source</a><a href=\"#impl-From%3CSASetPtrDfltFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SASetPtrDfltFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::SASetPtrDfltFlag\">SASetPtrDfltFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4394-4396\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SASetPtrDfltFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::SASetPtrDfltFlag\">SASetPtrDfltFlag</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SASetPtrDfltFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSAType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#3939-3944\">Source</a><a href=\"#impl-From%3CSAType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SAType.html\" title=\"struct x11rb_protocol::protocol::xkb::SAType\">SAType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#3941-3943\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SAType.html\" title=\"struct x11rb_protocol::protocol::xkb::SAType\">SAType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SAType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSAValWhat%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#5385-5390\">Source</a><a href=\"#impl-From%3CSAValWhat%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SAValWhat.html\" title=\"struct x11rb_protocol::protocol::xkb::SAValWhat\">SAValWhat</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#5387-5389\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SAValWhat.html\" title=\"struct x11rb_protocol::protocol::xkb::SAValWhat\">SAValWhat</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SAValWhat>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSK%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/shape.rs.html#140-145\">Source</a><a href=\"#impl-From%3CSK%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/shape/struct.SK.html\" title=\"struct x11rb_protocol::protocol::shape::SK\">SK</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/shape.rs.html#142-144\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/shape/struct.SK.html\" title=\"struct x11rb_protocol::protocol::shape::SK\">SK</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SK>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSO%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/shape.rs.html#77-82\">Source</a><a href=\"#impl-From%3CSO%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/shape/struct.SO.html\" title=\"struct x11rb_protocol::protocol::shape::SO\">SO</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/shape.rs.html#79-81\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/shape/struct.SO.html\" title=\"struct x11rb_protocol::protocol::shape::SO\">SO</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SO>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSaveSetMapping%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#343-348\">Source</a><a href=\"#impl-From%3CSaveSetMapping%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SaveSetMapping.html\" title=\"struct x11rb_protocol::protocol::xfixes::SaveSetMapping\">SaveSetMapping</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#345-347\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SaveSetMapping.html\" title=\"struct x11rb_protocol::protocol::xfixes::SaveSetMapping\">SaveSetMapping</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SaveSetMapping>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSaveSetMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#225-230\">Source</a><a href=\"#impl-From%3CSaveSetMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SaveSetMode.html\" title=\"struct x11rb_protocol::protocol::xfixes::SaveSetMode\">SaveSetMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#227-229\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SaveSetMode.html\" title=\"struct x11rb_protocol::protocol::xfixes::SaveSetMode\">SaveSetMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SaveSetMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSaveSetTarget%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#284-289\">Source</a><a href=\"#impl-From%3CSaveSetTarget%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SaveSetTarget.html\" title=\"struct x11rb_protocol::protocol::xfixes::SaveSetTarget\">SaveSetTarget</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#286-288\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SaveSetTarget.html\" title=\"struct x11rb_protocol::protocol::xfixes::SaveSetTarget\">SaveSetTarget</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SaveSetTarget>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CScreenSaver%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#25714-25719\">Source</a><a href=\"#impl-From%3CScreenSaver%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ScreenSaver.html\" title=\"struct x11rb_protocol::protocol::xproto::ScreenSaver\">ScreenSaver</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#25716-25718\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.ScreenSaver.html\" title=\"struct x11rb_protocol::protocol::xproto::ScreenSaver\">ScreenSaver</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ScreenSaver>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CScrollFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11884-11889\">Source</a><a href=\"#impl-From%3CScrollFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11886-11888\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollFlags\">ScrollFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ScrollFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CScrollType%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11944-11949\">Source</a><a href=\"#impl-From%3CScrollType%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollType.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollType\">ScrollType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11946-11948\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ScrollType.html\" title=\"struct x11rb_protocol::protocol::xinput::ScrollType\">ScrollType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ScrollType>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSelectionEvent%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#479-484\">Source</a><a href=\"#impl-From%3CSelectionEvent%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEvent.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEvent\">SelectionEvent</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#481-483\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEvent.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEvent\">SelectionEvent</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SelectionEvent>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSelectionEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#516-521\">Source</a><a href=\"#impl-From%3CSelectionEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xfixes.rs.html#518-520\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xfixes/struct.SelectionEventMask.html\" title=\"struct x11rb_protocol::protocol::xfixes::SelectionEventMask\">SelectionEventMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SelectionEventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSendEventDest%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#11399-11404\">Source</a><a href=\"#impl-From%3CSendEventDest%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.SendEventDest.html\" title=\"struct x11rb_protocol::protocol::xproto::SendEventDest\">SendEventDest</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#11401-11403\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.SendEventDest.html\" title=\"struct x11rb_protocol::protocol::xproto::SendEventDest\">SendEventDest</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SendEventDest>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSetConfig%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#400-405\">Source</a><a href=\"#impl-From%3CSetConfig%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.SetConfig.html\" title=\"struct x11rb_protocol::protocol::randr::SetConfig\">SetConfig</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#402-404\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.SetConfig.html\" title=\"struct x11rb_protocol::protocol::randr::SetConfig\">SetConfig</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SetConfig>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSetMapFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#379-384\">Source</a><a href=\"#impl-From%3CSetMapFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SetMapFlags.html\" title=\"struct x11rb_protocol::protocol::xkb::SetMapFlags\">SetMapFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#381-383\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SetMapFlags.html\" title=\"struct x11rb_protocol::protocol::xkb::SetMapFlags\">SetMapFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SetMapFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSetMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#8341-8346\">Source</a><a href=\"#impl-From%3CSetMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.SetMode.html\" title=\"struct x11rb_protocol::protocol::xproto::SetMode\">SetMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#8343-8345\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.SetMode.html\" title=\"struct x11rb_protocol::protocol::xproto::SetMode\">SetMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SetMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSetOfGroup%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1140-1145\">Source</a><a href=\"#impl-From%3CSetOfGroup%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SetOfGroup.html\" title=\"struct x11rb_protocol::protocol::xkb::SetOfGroup\">SetOfGroup</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1142-1144\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SetOfGroup.html\" title=\"struct x11rb_protocol::protocol::xkb::SetOfGroup\">SetOfGroup</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SetOfGroup>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSetOfGroups%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1201-1206\">Source</a><a href=\"#impl-From%3CSetOfGroups%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SetOfGroups.html\" title=\"struct x11rb_protocol::protocol::xkb::SetOfGroups\">SetOfGroups</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1203-1205\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SetOfGroups.html\" title=\"struct x11rb_protocol::protocol::xkb::SetOfGroups\">SetOfGroups</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SetOfGroups>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CStackMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#8931-8936\">Source</a><a href=\"#impl-From%3CStackMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.StackMode.html\" title=\"struct x11rb_protocol::protocol::xproto::StackMode\">StackMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#8933-8935\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.StackMode.html\" title=\"struct x11rb_protocol::protocol::xproto::StackMode\">StackMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<StackMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CStatePart%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#445-450\">Source</a><a href=\"#impl-From%3CStatePart%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.StatePart.html\" title=\"struct x11rb_protocol::protocol::xkb::StatePart\">StatePart</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#447-449\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.StatePart.html\" title=\"struct x11rb_protocol::protocol::xkb::StatePart\">StatePart</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<StatePart>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSubPixel%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#491-496\">Source</a><a href=\"#impl-From%3CSubPixel%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.SubPixel.html\" title=\"struct x11rb_protocol::protocol::render::SubPixel\">SubPixel</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/render.rs.html#493-495\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/render/struct.SubPixel.html\" title=\"struct x11rb_protocol::protocol::render::SubPixel\">SubPixel</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SubPixel>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSubwindowMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16514-16519\">Source</a><a href=\"#impl-From%3CSubwindowMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.SubwindowMode.html\" title=\"struct x11rb_protocol::protocol::xproto::SubwindowMode\">SubwindowMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#16516-16518\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.SubwindowMode.html\" title=\"struct x11rb_protocol::protocol::xproto::SubwindowMode\">SubwindowMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SubwindowMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSwitchScreenFlag%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4742-4747\">Source</a><a href=\"#impl-From%3CSwitchScreenFlag%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SwitchScreenFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::SwitchScreenFlag\">SwitchScreenFlag</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#4744-4746\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SwitchScreenFlag.html\" title=\"struct x11rb_protocol::protocol::xkb::SwitchScreenFlag\">SwitchScreenFlag</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SwitchScreenFlag>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSymInterpMatch%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1685-1690\">Source</a><a href=\"#impl-From%3CSymInterpMatch%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SymInterpMatch.html\" title=\"struct x11rb_protocol::protocol::xkb::SymInterpMatch\">SymInterpMatch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1687-1689\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SymInterpMatch.html\" title=\"struct x11rb_protocol::protocol::xkb::SymInterpMatch\">SymInterpMatch</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SymInterpMatch>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSymInterpretMatch%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1623-1628\">Source</a><a href=\"#impl-From%3CSymInterpretMatch%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SymInterpretMatch.html\" title=\"struct x11rb_protocol::protocol::xkb::SymInterpretMatch\">SymInterpretMatch</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1625-1627\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.SymInterpretMatch.html\" title=\"struct x11rb_protocol::protocol::xkb::SymInterpretMatch\">SymInterpretMatch</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SymInterpretMatch>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTime%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#5107-5112\">Source</a><a href=\"#impl-From%3CTime%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Time.html\" title=\"struct x11rb_protocol::protocol::xproto::Time\">Time</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#5109-5111\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Time.html\" title=\"struct x11rb_protocol::protocol::xproto::Time\">Time</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Time>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTouchEventFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18378-18383\">Source</a><a href=\"#impl-From%3CTouchEventFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18380-18382\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchEventFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchEventFlags\">TouchEventFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TouchEventFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTouchMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#12009-12014\">Source</a><a href=\"#impl-From%3CTouchMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchMode.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchMode\">TouchMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#12011-12013\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchMode.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchMode\">TouchMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TouchMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTouchOwnershipFlags%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18567-18572\">Source</a><a href=\"#impl-From%3CTouchOwnershipFlags%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchOwnershipFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchOwnershipFlags\">TouchOwnershipFlags</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#18569-18571\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.TouchOwnershipFlags.html\" title=\"struct x11rb_protocol::protocol::xinput::TouchOwnershipFlags\">TouchOwnershipFlags</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<TouchOwnershipFlags>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CTransform%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#3818-3823\">Source</a><a href=\"#impl-From%3CTransform%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.Transform.html\" title=\"struct x11rb_protocol::protocol::randr::Transform\">Transform</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/randr.rs.html#3820-3822\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/randr/struct.Transform.html\" title=\"struct x11rb_protocol::protocol::randr::Transform\">Transform</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Transform>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVMod%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1468-1473\">Source</a><a href=\"#impl-From%3CVMod%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.VMod.html\" title=\"struct x11rb_protocol::protocol::xkb::VMod\">VMod</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1470-1472\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.VMod.html\" title=\"struct x11rb_protocol::protocol::xkb::VMod\">VMod</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VMod>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVModsHigh%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1328-1333\">Source</a><a href=\"#impl-From%3CVModsHigh%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.VModsHigh.html\" title=\"struct x11rb_protocol::protocol::xkb::VModsHigh\">VModsHigh</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1330-1332\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.VModsHigh.html\" title=\"struct x11rb_protocol::protocol::xkb::VModsHigh\">VModsHigh</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VModsHigh>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVModsLow%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1400-1405\">Source</a><a href=\"#impl-From%3CVModsLow%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.VModsLow.html\" title=\"struct x11rb_protocol::protocol::xkb::VModsLow\">VModsLow</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#1402-1404\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.VModsLow.html\" title=\"struct x11rb_protocol::protocol::xkb::VModsLow\">VModsLow</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VModsLow>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CValuatorMode%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#414-419\">Source</a><a href=\"#impl-From%3CValuatorMode%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ValuatorMode.html\" title=\"struct x11rb_protocol::protocol::xinput::ValuatorMode\">ValuatorMode</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#416-418\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ValuatorMode.html\" title=\"struct x11rb_protocol::protocol::xinput::ValuatorMode\">ValuatorMode</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ValuatorMode>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CValuatorStateModeMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#6613-6618\">Source</a><a href=\"#impl-From%3CValuatorStateModeMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ValuatorStateModeMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ValuatorStateModeMask\">ValuatorStateModeMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#6615-6617\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.ValuatorStateModeMask.html\" title=\"struct x11rb_protocol::protocol::xinput::ValuatorStateModeMask\">ValuatorStateModeMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ValuatorStateModeMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVisibility%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#3053-3058\">Source</a><a href=\"#impl-From%3CVisibility%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Visibility.html\" title=\"struct x11rb_protocol::protocol::xproto::Visibility\">Visibility</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#3055-3057\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.Visibility.html\" title=\"struct x11rb_protocol::protocol::xproto::Visibility\">Visibility</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Visibility>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVisualClass%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#317-322\">Source</a><a href=\"#impl-From%3CVisualClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.VisualClass.html\" title=\"struct x11rb_protocol::protocol::xproto::VisualClass\">VisualClass</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#319-321\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.VisualClass.html\" title=\"struct x11rb_protocol::protocol::xproto::VisualClass\">VisualClass</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<VisualClass>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWindowClass%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6529-6534\">Source</a><a href=\"#impl-From%3CWindowClass%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.WindowClass.html\" title=\"struct x11rb_protocol::protocol::xproto::WindowClass\">WindowClass</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#6531-6533\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.WindowClass.html\" title=\"struct x11rb_protocol::protocol::xproto::WindowClass\">WindowClass</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WindowClass>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CWindowEnum%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#1291-1296\">Source</a><a href=\"#impl-From%3CWindowEnum%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.WindowEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::WindowEnum\">WindowEnum</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xproto.rs.html#1293-1295\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xproto/struct.WindowEnum.html\" title=\"struct x11rb_protocol::protocol::xproto::WindowEnum\">WindowEnum</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<WindowEnum>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CXIEventMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11409-11414\">Source</a><a href=\"#impl-From%3CXIEventMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xinput.rs.html#11411-11413\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xinput/struct.XIEventMask.html\" title=\"struct x11rb_protocol::protocol::xinput::XIEventMask\">XIEventMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<XIEventMask>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CXIFeature%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2202-2207\">Source</a><a href=\"#impl-From%3CXIFeature%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.XIFeature.html\" title=\"struct x11rb_protocol::protocol::xkb::XIFeature\">XIFeature</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/protocol/xkb.rs.html#2204-2206\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(input: <a class=\"struct\" href=\"x11rb_protocol/protocol/xkb/struct.XIFeature.html\" title=\"struct x11rb_protocol::protocol::xkb::XIFeature\">XIFeature</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<XIFeature>","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#381\">Source</a><a href=\"#impl-Serialize-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.Serialize.html\" title=\"trait x11rb_protocol::x11_utils::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Bytes\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#381\">Source</a><a href=\"#associatedtype.Bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#associatedtype.Bytes\" class=\"associatedtype\">Bytes</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>The value returned by <code>serialize</code>. <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#associatedtype.Bytes\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#381\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"x11rb_protocol/x11_utils/trait.Serialize.html#associatedtype.Bytes\" title=\"type x11rb_protocol::x11_utils::Serialize::Bytes\">Bytes</a></h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#381\">Source</a><a href=\"#method.serialize_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#tymethod.serialize_into\" class=\"fn\">serialize_into</a>(&amp;self, bytes: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Serialize this value into X11 raw bytes, appending the result into <code>bytes</code>. <a href=\"x11rb_protocol/x11_utils/trait.Serialize.html#tymethod.serialize_into\">Read more</a></div></details></div></details>","Serialize","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryParse-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#372\">Source</a><a href=\"#impl-TryParse-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"x11rb_protocol/x11_utils/trait.TryParse.html\" title=\"trait x11rb_protocol::x11_utils::TryParse\">TryParse</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/x11rb_protocol/x11_utils.rs.html#372\">Source</a><a href=\"#method.try_parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"x11rb_protocol/x11_utils/trait.TryParse.html#tymethod.try_parse\" class=\"fn\">try_parse</a>(value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self, &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.u8.html\">u8</a>]), <a class=\"enum\" href=\"x11rb_protocol/errors/enum.ParseError.html\" title=\"enum x11rb_protocol::errors::ParseError\">ParseError</a>&gt;</h4></section></summary><div class='docblock'>Try to parse the given values into an instance of this type. <a href=\"x11rb_protocol/x11_utils/trait.TryParse.html#tymethod.try_parse\">Read more</a></div></details></div></details>","TryParse","x11rb_protocol::protocol::xproto::Window","x11rb_protocol::protocol::xproto::Pixmap","x11rb_protocol::protocol::xproto::Cursor","x11rb_protocol::protocol::xproto::Font","x11rb_protocol::protocol::xproto::Gcontext","x11rb_protocol::protocol::xproto::Colormap","x11rb_protocol::protocol::xproto::Atom","x11rb_protocol::protocol::xproto::Drawable","x11rb_protocol::protocol::xproto::Fontable","x11rb_protocol::protocol::xproto::Bool32","x11rb_protocol::protocol::xproto::Visualid","x11rb_protocol::protocol::xproto::Timestamp","x11rb_protocol::protocol::xproto::Keysym","x11rb_protocol::protocol::xproto::Keycode32","x11rb_protocol::protocol::randr::Mode","x11rb_protocol::protocol::randr::Crtc","x11rb_protocol::protocol::randr::Output","x11rb_protocol::protocol::randr::Provider","x11rb_protocol::protocol::randr::Lease","x11rb_protocol::protocol::render::Glyph","x11rb_protocol::protocol::render::Glyphset","x11rb_protocol::protocol::render::Picture","x11rb_protocol::protocol::render::Pictformat","x11rb_protocol::protocol::xfixes::Region","x11rb_protocol::protocol::xfixes::Barrier","x11rb_protocol::protocol::xinput::EventClass"]]],["xkbcommon_dl",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[19608,16,25902,22,22,2138,6657,566,13,18,13,2013,18,1630,14,6712,839877,20]}