(function() {
    var type_impls = Object.fromEntries([["immutable_chunkmap",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Set%3CK,+SIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#51\">Source</a><a href=\"#impl-Clone-for-Set%3CK,+SIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#51\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","immutable_chunkmap::set::SetS","immutable_chunkmap::set::SetM","immutable_chunkmap::set::SetL"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Set%3CK,+SIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#126-133\">Source</a><a href=\"#impl-Debug-for-Set%3CK,+SIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#130-132\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","immutable_chunkmap::set::SetS","immutable_chunkmap::set::SetM","immutable_chunkmap::set::SetL"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Set%3CK,+SIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#88-95\">Source</a><a href=\"#impl-Default-for-Set%3CK,+SIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#92-94\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","immutable_chunkmap::set::SetS","immutable_chunkmap::set::SetM","immutable_chunkmap::set::SetL"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CK%3E-for-Set%3CK,+SIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#135-142\">Source</a><a href=\"#impl-FromIterator%3CK%3E-for-Set%3CK,+SIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;K&gt; for <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#139-141\">Source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = K&gt;&gt;(iter: T) -&gt; Self</h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<K>","immutable_chunkmap::set::SetS","immutable_chunkmap::set::SetM","immutable_chunkmap::set::SetL"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Set%3CK,+SIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#79-86\">Source</a><a href=\"#impl-Hash-for-Set%3CK,+SIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#83-85\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","immutable_chunkmap::set::SetS","immutable_chunkmap::set::SetM","immutable_chunkmap::set::SetL"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Set%3CK,+SIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#117-124\">Source</a><a href=\"#impl-Ord-for-Set%3CK,+SIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#121-123\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1013-1015\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1052-1054\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1078-1080\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","immutable_chunkmap::set::SetS","immutable_chunkmap::set::SetM","immutable_chunkmap::set::SetL"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Set%3CK,+SIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#97-104\">Source</a><a href=\"#impl-PartialEq-for-Set%3CK,+SIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#101-103\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","immutable_chunkmap::set::SetS","immutable_chunkmap::set::SetM","immutable_chunkmap::set::SetL"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Set%3CK,+SIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#108-115\">Source</a><a href=\"#impl-PartialOrd-for-Set%3CK,+SIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#112-114\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1387\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1405\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1423\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#1441\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","immutable_chunkmap::set::SetS","immutable_chunkmap::set::SetM","immutable_chunkmap::set::SetL"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Set%3CK,+SIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#278-518\">Source</a><a href=\"#impl-Set%3CK,+SIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#283-285\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new empty set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.downgrade\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#288-290\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.downgrade\" class=\"fn\">downgrade</a>(&amp;self) -&gt; <a class=\"struct\" href=\"immutable_chunkmap/set/struct.WeakSetRef.html\" title=\"struct immutable_chunkmap::set::WeakSetRef\">WeakSetRef</a>&lt;K, SIZE&gt;</h4></section></summary><div class=\"docblock\"><p>Create a weak reference to this set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.strong_count\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#293-295\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.strong_count\" class=\"fn\">strong_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of strong references to this set (see Arc)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.weak_count\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#298-300\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.weak_count\" class=\"fn\">weak_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the number of weak references to this set (see Arc)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_many\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#319-322\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.insert_many\" class=\"fn\">insert_many</a>&lt;E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = K&gt;&gt;(&amp;self, elts: E) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>This will insert many elements at once, and is\npotentially a lot faster than inserting one by one,\nespecially if the data is sorted.</p>\n<p>#Examples</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code> <span class=\"kw\">use </span><span class=\"self\">self</span>::immutable_chunkmap::set::SetM;\n\n <span class=\"kw\">let </span><span class=\"kw-2\">mut </span>v = <span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">10</span>, -<span class=\"number\">12</span>, <span class=\"number\">44</span>, <span class=\"number\">50</span>];\n v.sort_unstable();\n\n <span class=\"kw\">let </span>m = SetM::new().insert_many(v.iter().map(|k| <span class=\"kw-2\">*</span>k));\n\n <span class=\"kw\">for </span>k <span class=\"kw\">in </span><span class=\"kw-2\">&amp;</span>v {\n   <span class=\"macro\">assert_eq!</span>(m.contains(k), <span class=\"bool-val\">true</span>)\n }</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_many\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#326-336\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.remove_many\" class=\"fn\">remove_many</a>&lt;Q, E&gt;(&amp;self, elts: E) -&gt; Self<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Q&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Remove multiple elements in a single pass. Similar performance\nto insert_many.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_many\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#342-356\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.update_many\" class=\"fn\">update_many</a>&lt;Q, E, F&gt;(&amp;self, elts: E, f: F) -&gt; Self<div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Q&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Q, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;K</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;K&gt;,</div></h4></section></summary><div class=\"docblock\"><p>This is just slightly wierd, however if you have a bunch of\nborrowed forms of members of the set, and you want to look at\nthe real entries and possibly add/update/remove them, then\nthis method is for you.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#362-368\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;self, k: K) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>return a new set with k inserted into it. If k already\nexists in the old set return true, else false. If the\nelement already exists in the set memory will not be\nallocated.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_cow\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#376-378\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.insert_cow\" class=\"fn\">insert_cow</a>(&amp;mut self, k: K) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>insert <code>k</code> with copy on write semantics. if <code>self</code> is a unique\nreference to the set, then k will be inserted in\nplace. Otherwise, only the parts of the set necessary to\ninsert <code>k</code> will be copied, and then the copies will be\nmutated. self will share all the parts that weren’t modfied\nwith any previous clones.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#383-389\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.contains\" class=\"fn\">contains</a>&lt;'a, Q&gt;(&amp;'a self, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    Q: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,</div></h4></section></summary><div class=\"docblock\"><p>return true if the set contains k, else false. Runs in\nlog(N) time and constant space. where N is the size of\nthe set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#393-399\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.get\" class=\"fn\">get</a>&lt;'a, Q&gt;(&amp;'a self, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;'a K</a>&gt;<div class=\"where\">where\n    Q: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,</div></h4></section></summary><div class=\"docblock\"><p>return a reference to the item in the set that is equal to the\ngiven value, or None if no such value exists.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#403-409\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.remove\" class=\"fn\">remove</a>&lt;Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>&gt;(&amp;self, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; (Self, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a>)<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,</div></h4></section></summary><div class=\"docblock\"><p>return a new set with k removed. Runs in log(N) time\nand log(N) space, where N is the size of the set</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_cow\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#413-418\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.remove_cow\" class=\"fn\">remove_cow</a>&lt;Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>&gt;(&amp;mut self, k: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.reference.html\">&amp;Q</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,</div></h4></section></summary><div class=\"docblock\"><p>remove <code>k</code> from the set in place with copy on write semantics\n(see <code>insert_cow</code>). return true if <code>k</code> was in the set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#437-439\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.union\" class=\"fn\">union</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>return the union of 2 sets. Runs in O(log(N) + M) time and\nspace, where N is the largest of the two sets, and M is the\nnumber of chunks that intersect, which is roughly proportional\nto the size of the intersection.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>core::iter::FromIterator;\n<span class=\"kw\">use </span><span class=\"self\">self</span>::immutable_chunkmap::set::SetM;\n\n<span class=\"kw\">let </span>s0 = SetM::from_iter(<span class=\"number\">0</span>..<span class=\"number\">10</span>);\n<span class=\"kw\">let </span>s1 = SetM::from_iter(<span class=\"number\">5</span>..<span class=\"number\">15</span>);\n<span class=\"kw\">let </span>s2 = s0.union(<span class=\"kw-2\">&amp;</span>s1);\n<span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">0</span>..<span class=\"number\">15 </span>{\n    <span class=\"macro\">assert!</span>(s2.contains(<span class=\"kw-2\">&amp;</span>i));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersect\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#461-467\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.intersect\" class=\"fn\">intersect</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>return the intersection of 2 sets. Runs in O(log(N) + M) time\nand space, where N is the smallest of the two sets, and M is\nthe number of intersecting chunks.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>use core::iter::FromIterator;\nuse self::immutable_chunkmap::set::SetM;</p>\n<p>let s0 = SetM::from_iter(0..100);\nlet s1 = SetM::from_iter(20..50);\nlet s2 = s0.intersect(&amp;s1);</p>\n<p>assert!(s2.len() == 30);\nfor i in 0..100 {\nif i &lt; 20 || i &gt;= 50 {\nassert!(!s2.contains(&amp;i));\n} else {\nassert!(s2.contains(&amp;i));\n}\n}</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.diff\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#490-495\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.diff\" class=\"fn\">diff</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;) -&gt; Self<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class=\"docblock\"><p>Return the difference of two sets. Runs in O(log(N) + M) time\nand space, where N is the smallest of the two sets, and M is\nthe number of intersecting chunks.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>core::iter::FromIterator;\n<span class=\"kw\">use </span><span class=\"self\">self</span>::immutable_chunkmap::set::SetM;\n\n<span class=\"kw\">let </span>s0 = SetM::from_iter(<span class=\"number\">0</span>..<span class=\"number\">100</span>);\n<span class=\"kw\">let </span>s1 = SetM::from_iter(<span class=\"number\">0</span>..<span class=\"number\">50</span>);\n<span class=\"kw\">let </span>s2 = s0.diff(<span class=\"kw-2\">&amp;</span>s1);\n\n<span class=\"macro\">assert!</span>(s2.len() == <span class=\"number\">50</span>);\n<span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">0</span>..<span class=\"number\">50 </span>{\n    <span class=\"macro\">assert!</span>(!s2.contains(<span class=\"kw-2\">&amp;</span>i));\n}\n<span class=\"kw\">for </span>i <span class=\"kw\">in </span><span class=\"number\">50</span>..<span class=\"number\">100 </span>{\n    <span class=\"macro\">assert!</span>(s2.contains(<span class=\"kw-2\">&amp;</span>i));\n}</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#498-500\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>get the number of elements in the map O(1) time and space</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.range\" class=\"method\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#510-517\">Source</a><h4 class=\"code-header\">pub fn <a href=\"immutable_chunkmap/set/struct.Set.html#tymethod.range\" class=\"fn\">range</a>&lt;'a, Q, R&gt;(&amp;'a self, r: R) -&gt; <a class=\"struct\" href=\"immutable_chunkmap/set/struct.SetIter.html\" title=\"struct immutable_chunkmap::set::SetIter\">SetIter</a>&lt;'a, R, Q, K, SIZE&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"SetIter&lt;&#39;a, R, Q, K, SIZE&gt;\">ⓘ</a><div class=\"where\">where\n    Q: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a,\n    K: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;Q&gt;,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;Q&gt; + 'a,</div></h4></section></summary><div class=\"docblock\"><p>return an iterator over the subset of elements in the\nset that are within the specified range.</p>\n<p>The returned iterator runs in O(log(N) + M) time, and\nconstant space. N is the number of elements in the\ntree, and M is the number of elements you examine.</p>\n<p>if lbound &gt;= ubound the returned iterator will be empty</p>\n</div></details></div></details>",0,"immutable_chunkmap::set::SetS","immutable_chunkmap::set::SetM","immutable_chunkmap::set::SetL"],["<section id=\"impl-Eq-for-Set%3CK,+SIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/immutable_chunkmap/set.rs.html#106\">Source</a><a href=\"#impl-Eq-for-Set%3CK,+SIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"immutable_chunkmap/set/struct.Set.html\" title=\"struct immutable_chunkmap::set::Set\">Set</a>&lt;K, SIZE&gt;<div class=\"where\">where\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section>","Eq","immutable_chunkmap::set::SetS","immutable_chunkmap::set::SetM","immutable_chunkmap::set::SetL"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[49740]}