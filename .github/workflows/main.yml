name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 15 * * *'

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          # rosrust is not supported on Windows
          args: --workspace --exclude arci-ros --exclude openrr-apps --exclude openrr
      - uses: actions-rs/cargo@v1
        with:
          command: build
          # rosrust is not supported on Windows
          args: --manifest-path openrr-apps/Cargo.toml --no-default-features --features gui,assimp

  macos:
    name: Build on MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build

  build:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: ci/ubuntu-install-dependencies.sh
      - uses: actions-rs/cargo@v1
        with:
          command: build

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: ci/ubuntu-install-dependencies.sh
      # testing arci-ros/arci-ros2 is done in ros1.yaml, ros2.yaml
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --exclude arci-ros --exclude arci-ros2
      - name: cargo test (openrr-apps without ros)
        working-directory: openrr-apps
        run: cargo test --no-default-features --features gui,assimp

  # TODO(taiki-e): Some configs use HashMap and the order of the default values
  #                will change every time because HashMap order is not stable.
  #                So we cannot enable this check until the uses of HashMap in
  #                configs are removed.
  # # When this job failed, run tools/update-schema.sh and commit result changes.
  # schema:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - run: tools/update-schema.sh
  #     - run: git diff --exit-code

  # Check all feature combinations work properly.
  features:
    name: Check features
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable
      - run: ci/ubuntu-install-dependencies.sh
      - run: cargo install cargo-hack
      - run: cargo hack check --all --feature-powerset --optional-deps --exclude arci-ros2

  # TODO: revert nightly-2021-07-01
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: |
          rustup toolchain install nightly-2021-07-01 --component rustfmt --allow-downgrade
          rustup default nightly-2021-07-01
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - run: ci/ubuntu-install-dependencies.sh
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings
