name: Code Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10
  nightly: nightly-2021-11-22

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: ci/ubuntu-install-dependencies.sh
      - name: Install ROS1 and ROS2
        run: |
          # ros2
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          # ros1
          sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
          sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

          sudo apt-get update
          sudo apt-get install -y \
            ros-noetic-ros-base ros-noetic-joy ros-noetic-pr2-description \
            ros-foxy-ros-core ros-foxy-geometry-msgs ros-foxy-nav2-msgs ros-foxy-ros2-control ros-foxy-ros2-controllers
      # rustfmt is for openrr-remote (tonic-build)
      - name: Install Rust
        run: |
          rustup toolchain install ${{ env.nightly }} --component rustfmt,llvm-tools-preview
          rustup default ${{ env.nightly }}
      - uses: Swatinem/rust-cache@v1
      - run: cargo install cargo-llvm-cov
      - name: Generate code coverage
        run: |
          # for test of arci-ros2
          source /opt/ros/foxy/setup.bash
          # for test of arci-ros (roscore, rostopic)
          source /opt/ros/noetic/setup.bash
          cargo llvm-cov --verbose --all-features --workspace --exclude openrr-internal-codegen --doctests --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
